[{"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\index.js":"1","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\reportWebVitals.js":"2","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\App.js":"3","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\utils\\data.js":"4","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\home\\home.js":"5","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success\\success.js":"6","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\login\\login.js":"7","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-characters\\suggested-characters.js":"8","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\all-characters\\all-characters.js":"9","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\about\\about.js":"10","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\dashboard\\dashboard.js":"11","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-review\\suggest-review.js":"12","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-character\\suggested-character.js":"13","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-character\\update-character.js":"14","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-reviews\\suggested-reviews.js":"15","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-review\\update-review.js":"16","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-character\\add-character.js":"17","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-review\\suggested-review.js":"18","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-review\\add-review.js":"19","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-character\\suggest-character.js":"20","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-story\\suggest-story.js":"21","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-story\\suggested-story.js":"22","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-stories\\suggested-stories.js":"23","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-story\\update-story.js":"24","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-story\\add-story.js":"25","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\character\\character.js":"26","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\utils\\fetch.js":"27","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\sidebar\\sidebar.js":"28","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\mobile-header\\mobile-header.js":"29","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\single-character\\single-character.js":"30","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\stats\\stats.js":"31","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-character\\table.js":"32","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\pagination\\pagination.js":"33","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\recent-suggested\\recent-suggested.js":"34","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\story-info\\story-info.js":"35","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\character-info\\character-info.js":"36","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\stories\\stories.js":"37","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\reviews\\reviews.js":"38","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-story\\table.js":"39","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-review\\table.js":"40","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-story\\row.js":"41","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-review\\row.js":"42","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-character\\row.js":"43","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\review-info\\review-info.js":"44","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\about-team\\about.js":"45","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-story-sc\\suggest-story.js":"46","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success-st-sc\\success.js":"47","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\sc-suggested-stories\\suggested-stories.js":"48","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\sc-suggested-story\\suggested-story.js":"49","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-sc-story\\table.js":"50","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-sc-story\\row.js":"51"},{"size":500,"mtime":499162500000,"results":"52","hashOfConfig":"53"},{"size":362,"mtime":499162500000,"results":"54","hashOfConfig":"53"},{"size":4626,"mtime":1613966533903,"results":"55","hashOfConfig":"53"},{"size":109,"mtime":1612579596337,"results":"56","hashOfConfig":"53"},{"size":3176,"mtime":1612668764958,"results":"57","hashOfConfig":"53"},{"size":708,"mtime":1612198076372,"results":"58","hashOfConfig":"53"},{"size":3713,"mtime":1613775691277,"results":"59","hashOfConfig":"53"},{"size":1629,"mtime":1612197178635,"results":"60","hashOfConfig":"53"},{"size":1794,"mtime":1613949318739,"results":"61","hashOfConfig":"53"},{"size":8631,"mtime":1613949476413,"results":"62","hashOfConfig":"53"},{"size":8846,"mtime":1613790474325,"results":"63","hashOfConfig":"53"},{"size":8303,"mtime":1613775007810,"results":"64","hashOfConfig":"53"},{"size":16209,"mtime":1613999957299,"results":"65","hashOfConfig":"53"},{"size":11031,"mtime":1613752466417,"results":"66","hashOfConfig":"53"},{"size":1519,"mtime":1612197292372,"results":"67","hashOfConfig":"53"},{"size":5102,"mtime":1612197946834,"results":"68","hashOfConfig":"53"},{"size":14363,"mtime":1613949939536,"results":"69","hashOfConfig":"53"},{"size":6215,"mtime":1612197794397,"results":"70","hashOfConfig":"53"},{"size":4690,"mtime":1612198003945,"results":"71","hashOfConfig":"53"},{"size":30935,"mtime":1613963626613,"results":"72","hashOfConfig":"53"},{"size":18454,"mtime":1613945957692,"results":"73","hashOfConfig":"53"},{"size":9913,"mtime":1613967135880,"results":"74","hashOfConfig":"53"},{"size":1547,"mtime":1612197403014,"results":"75","hashOfConfig":"53"},{"size":7662,"mtime":1612228272879,"results":"76","hashOfConfig":"53"},{"size":18651,"mtime":1613967290538,"results":"77","hashOfConfig":"53"},{"size":2178,"mtime":1612198581833,"results":"78","hashOfConfig":"53"},{"size":985,"mtime":1613788084395,"results":"79","hashOfConfig":"53"},{"size":5211,"mtime":1613965934942,"results":"80","hashOfConfig":"53"},{"size":1999,"mtime":1612199890181,"results":"81","hashOfConfig":"53"},{"size":1337,"mtime":1612183320739,"results":"82","hashOfConfig":"53"},{"size":659,"mtime":1611792827252,"results":"83","hashOfConfig":"53"},{"size":994,"mtime":1613948998665,"results":"84","hashOfConfig":"53"},{"size":851,"mtime":1614117446989,"results":"85","hashOfConfig":"53"},{"size":1203,"mtime":1611799322494,"results":"86","hashOfConfig":"53"},{"size":3052,"mtime":1612666629594,"results":"87","hashOfConfig":"53"},{"size":4123,"mtime":1612666523231,"results":"88","hashOfConfig":"53"},{"size":1668,"mtime":1612670394462,"results":"89","hashOfConfig":"53"},{"size":1645,"mtime":1612586832542,"results":"90","hashOfConfig":"53"},{"size":1064,"mtime":1613752565415,"results":"91","hashOfConfig":"53"},{"size":1067,"mtime":1613752475253,"results":"92","hashOfConfig":"53"},{"size":448,"mtime":1613966238419,"results":"93","hashOfConfig":"53"},{"size":2186,"mtime":1613752566807,"results":"94","hashOfConfig":"53"},{"size":2067,"mtime":1613948955017,"results":"95","hashOfConfig":"53"},{"size":1834,"mtime":1612198628178,"results":"96","hashOfConfig":"53"},{"size":2969,"mtime":1613948325485,"results":"97","hashOfConfig":"53"},{"size":18153,"mtime":1613965380458,"results":"98","hashOfConfig":"53"},{"size":993,"mtime":1613965607363,"results":"99","hashOfConfig":"53"},{"size":1560,"mtime":1613966622339,"results":"100","hashOfConfig":"53"},{"size":9749,"mtime":1613967022767,"results":"101","hashOfConfig":"53"},{"size":1117,"mtime":1613966603001,"results":"102","hashOfConfig":"53"},{"size":453,"mtime":1613966402005,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"130rid7",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"106"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"106"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"106"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"106"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"106"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"106"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"106"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"106"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"106"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"106"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"246"},"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\index.js",[],["247","248"],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\reportWebVitals.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\App.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\utils\\data.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\home\\home.js",["249","250","251"],"import React from \"react\";\r\nimport \"./home.css\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport SingleCharacter from \"../../components/single-character/single-character\";\r\nimport { ReactComponent as ButtonIcon } from \"../../assets/chevron-right-solid.svg\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nfunction Home() {\r\n  const [random, setRandom] = React.useState([]);\r\n  const [stories, setStories] = React.useState([]);\r\n  const [search, setSearch] = React.useState([]);\r\n  const [filteredResults, setFilteredResults] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/character\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const newRandom = resJson.data;\r\n        console.log(newRandom);\r\n        console.log(filteredResults.length);\r\n        setRandom(newRandom);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n\r\n      <div className=\"home-container\">\r\n        <form\r\n          onSubmit={(event) => {\r\n            console.log(search);\r\n\r\n            event.preventDefault();\r\n            fetch(\r\n              `https://aroacedb-back.herokuapp.com/character/infinite?search=${search}`\r\n            )\r\n              .then((res) => res.json())\r\n              .then((resJson) => {\r\n                console.log(search);\r\n                console.log(resJson.data);\r\n\r\n                if (resJson.data) {\r\n                  const newResults = resJson.data.characters;\r\n                  setFilteredResults(newResults);\r\n                  console.log(filteredResults);\r\n                }\r\n              });\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"search...\"\r\n            onChange={(event) => {\r\n              setSearch(event.target.value);\r\n            }}\r\n          ></input>\r\n          <button>\r\n            <ButtonIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n          </button>\r\n        </form>\r\n        <div className=\"results\">\r\n          {filteredResults.map((i) => {\r\n            return (\r\n              <div>\r\n                <SingleCharacter character={i} />\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          {filteredResults.length !== 0 ? (\r\n            <div></div>\r\n          ) : (\r\n            <div className=\"random\">\r\n              <SingleCharacter character={random} />\r\n              <div className=\"char-btn\">\r\n                <button\r\n                  onClick={() => {\r\n                    fetch(\"https://aroacedb-back.herokuapp.com/character\")\r\n                      .then((res) => res.json())\r\n                      .then((resJson) => {\r\n                        console.log(resJson.data);\r\n                        const newRandom = resJson.data;\r\n                        setRandom(newRandom);\r\n                      });\r\n                  }}\r\n                >\r\n                  Give me a new character!\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success\\success.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\login\\login.js",["252"],"import React from \"react\";\r\nimport \"./login.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { fetchWithBody } from \"../../utils/fetch\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"Login\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n\r\n      <div className=\"login-container\">\r\n        <div className=\"login-box\">\r\n          <h2>Login</h2>\r\n          <p>Admin login for the database. Non-admin users can't be created.</p>\r\n          <Formik\r\n            initialValues={{\r\n              email: \"\",\r\n              password: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n\r\n              fetchWithBody(\r\n                \"https://aroacedb-back.herokuapp.com/auth\",\r\n                \"POST\",\r\n                {\r\n                  email: values.email,\r\n                  password: values.password,\r\n                }\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  const data = resJson.data;\r\n                  console.log(data);\r\n                  console.log(resJson.data.token);\r\n\r\n                  localStorage.setItem(\"token\", resJson.data.token);\r\n                  const newToken = localStorage.getItem(\"token\");\r\n\r\n                  const decodedToken = jwt_decode(newToken);\r\n                  console.log(decodedToken);\r\n\r\n                  if (newToken) {\r\n                    history.push(\"/dashboard\");\r\n                  }\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err);\r\n                  alert(\r\n                    \"Error loging in. Are you sure your credentials are correct?\"\r\n                  );\r\n                });\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string().email().required(\"Required\"),\r\n            })}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <input\r\n                    id=\"email\"\r\n                    placeholder=\"User\"\r\n                    type=\"text\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.email && touched.email\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                  />\r\n                  {errors.email && touched.email && (\r\n                    <div className=\"input-feedback\">{errors.email}</div>\r\n                  )}\r\n\r\n                  <input\r\n                    id=\"password\"\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n\r\n                  <button type=\"submit\" className=\"submit\">\r\n                    Login\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-characters\\suggested-characters.js",["253"],"import \"./suggested-characters.css\";\r\nimport React from \"react\";\r\nimport Table from \"../../components/table-character/table\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableCharacter from \"../../components/table-character/table\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedCharacters() {\r\n  const [characters, setCharacters] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/suggest/characters\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const data = resJson.data.paginated_characters;\r\n        console.log(data);\r\n        setCharacters(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"SuggestedCharacters\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggested-container\">\r\n        <div className=\"title\">\r\n          <h2>Suggested Characters</h2>\r\n        </div>\r\n        <div className=\"table-container\">\r\n          <TableCharacter content={characters} type=\"suggest\" id=\"character\" />\r\n          <Pagination\r\n            totalPages={totalPages}\r\n            setCurrentPage={setCurrentPage}\r\n            currentPage={currentPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\all-characters\\all-characters.js",["254"],"import \"./all-characters.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableCharacter from \"../../components/table-character/table\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function AllCharacters() {\r\n  const [characters, setCharacters] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n  const [token, setToken] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    fetch(\r\n      `https://aroacedb-back.herokuapp.com/characters?offset=${\r\n        currentPage * 20 - 20\r\n      }`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const data = resJson.data.paginated_characters;\r\n        console.log(\"characters:\", data);\r\n        setCharacters(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"AllCharacters\">\r\n      <Sidebar />\r\n\r\n      <MobileHeader />\r\n      <div className=\"all-characters-container\">\r\n        <div className=\"title\">\r\n          <h2>All Characters</h2>\r\n          {token ? <a href=\"/add-character\">Add character</a> : \"\"}\r\n        </div>\r\n        <TableCharacter content={characters} type=\"regular\" id=\"character\" />\r\n\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\about\\about.js",["255","256"],"import \"./about.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Globe from \"../../assets/globe.png\";\r\nimport Twitter from \"../../assets/twitter.png\";\r\nimport Stats from \"../../components/stats/stats\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function About() {\r\n  const [stats, setStats] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/stats\").then((res) =>\r\n      res.json().then((resJson) => {\r\n        const data = resJson.data;\r\n        console.log(data);\r\n        setStats(data);\r\n      })\r\n    );\r\n  }, []);\r\n  return (\r\n    <div className=\"About\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"about-container\">\r\n        <div className=\"about\">\r\n          <h2>the database</h2>\r\n          <p>\r\n            The AroAce Database is a <strong>searchable</strong> compilation of\r\n            all <strong>aromantic and asexual characters</strong> in prose\r\n            fiction out there--or all that we could find so far, at any rate.\r\n            Enter as many search terms as you need and narrow down the results\r\n            to what you’re looking for!\r\n          </p>\r\n\r\n          <p>\r\n            None of the stories within are recommendations. You can, however,\r\n            find Claudie’s recommendations on her website:{\" \"}\r\n            <a href=\"http://claudiearseneault.com/?page_id=2107\">Aromantic</a> |\r\n            <a href=\"http://claudiearseneault.com/?page_id=2013\"> Asexual</a>\r\n          </p>\r\n        </div>\r\n\r\n        <Stats stats={stats} />\r\n\r\n        <div className=\"about\">\r\n          <h2>Database structure</h2>\r\n          <p>\r\n            Each character has a single entry, to which is attached information\r\n            on individual stories and reviews, when available. Entries are\r\n            separated in three sections: the character, the stories they feature\r\n            in, and the reviews.\r\n          </p>\r\n\r\n          <p>\r\n            A caveat, however: classification is a great tool, but it has its\r\n            flaws. Broad categories had to be created in order to keep the\r\n            information easily searchable, and some stories won’t fit neatly\r\n            into them, or will be grossly oversimplified by the term. The\r\n            database has a lot of potential, but it is still missing some key\r\n            parameter, and even those present won’t always give the best idea of\r\n            what to expect.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"about\">\r\n          <h2>The terminology</h2>\r\n          <div className=\"terminology\">\r\n            <div className=\"single\">\r\n              <div>Character name</div>\r\n              <div>Character's name</div>\r\n            </div>\r\n            <div className=\"single\">\r\n              <div>Author</div>\r\n              <div>Author's name</div>\r\n            </div>\r\n            <div className=\"single\">\r\n              <div>Title</div>\r\n              <div>Story or book title</div>\r\n            </div>\r\n            <div className=\"single\">\r\n              <div>Series</div>\r\n              <div>Name of the series (if applicable)</div>\r\n            </div>\r\n            <div className=\"single\">\r\n              <div>Genre</div>\r\n              <div>The story's literary genre(s) and age category</div>\r\n            </div>\r\n\r\n            <div className=\"multi\">\r\n              <div className=\"title\">Length</div>\r\n              <div className=\"side-container\">\r\n                <div className=\"info\">The length of the story</div>\r\n                <div className=\"side\">\r\n                  <div>Short story</div>\r\n                  <div>Up to 10.000 words</div>\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>Novella</div>\r\n                  <div>10,000 to 50,000 words</div>\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>Novel (short)</div>\r\n                  <div>50,000 to 80,000 words</div>\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>Novel (long)</div>\r\n                  <div>More than 80,000 words</div>\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>Anthology</div>\r\n                  <div>Short story is part of an anthology</div>\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>Webseries</div>\r\n                  <div>\r\n                    Published in several installments on the internet (blog,\r\n                    Wattpad, etc.)\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"multi\">\r\n              <div className=\"title\">Type of Rep</div>\r\n              <div className=\"side-container\">\r\n                <div className=\"info\">\r\n                  How “involved” the representation is.\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>Word of God</div>\r\n                  <div>\r\n                    The character’s sexuality is not explicit on page, but the\r\n                    author has confirmed it\r\n                  </div>\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>On page</div>\r\n                  <div>\r\n                    The character’s sexuality is explicitly demonstrated within\r\n                    the text. It should be showed or discussed to an extent that\r\n                    makes it clear to the readers.\r\n                  </div>\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>Word used</div>\r\n                  <div>\r\n                    The identity is stated using the actual word (usually also\r\n                    On Page)\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"single\">\r\n              <div>Gender</div>\r\n              <div> Character’s gender (nonbinary characters are grouped)</div>\r\n            </div>\r\n\r\n            <div className=\"multi\">\r\n              <div className=\"title\">Character importance</div>\r\n              <div className=\"side-container\">\r\n                <div className=\"info\">\r\n                  The character’s importance to the story\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>Lead</div>\r\n                  <div>\r\n                    The character is at the heart of the story’s central\r\n                    storyline\r\n                  </div>\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>Main</div>\r\n                  <div>\r\n                    The character plays an important role in the story and is\r\n                    frequently on page\r\n                  </div>\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>Side</div>\r\n                  <div>The character plays a minor role in the story</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"single\">\r\n              <div>Sexual Orientation</div>\r\n              <div>The character’s sexual orientation</div>\r\n            </div>\r\n\r\n            <div className=\"single\">\r\n              <div>Romantic Orientation</div>\r\n              <div>The character’s romantic orientation </div>\r\n            </div>\r\n\r\n            <div className=\"single\">\r\n              <div>Relationships</div>\r\n              <div>Most important relationships to the character.</div>\r\n            </div>\r\n\r\n            <div className=\"single\">\r\n              <div>Pairing</div>\r\n              <div>\r\n                Genders of the relationship (qpr or romantic) in which the\r\n                character is involved, if any.\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"single\">\r\n              <div>Rep Notes&Warnings</div>\r\n              <div> Warnings or notes with regards to the representation.</div>\r\n            </div>\r\n\r\n            <div className=\"single\">\r\n              <div>Other Notes&Warnings</div>\r\n              <div>\r\n                Everything else! This includes notes about polyamory, race,\r\n                disability, known content warnings, explanations, etc.\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"single\">\r\n              <div>Reviews</div>\r\n              <div>Ownvoices reviews for this story</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\dashboard\\dashboard.js",["257","258","259","260","261","262","263"],"import React, { useContext } from \"react\";\r\nimport \"./dashboard.css\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Stats from \"../../components/stats/stats\";\r\nimport RecentSuggested from \"../../components/recent-suggested/recent-suggested\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport DataContext from \"../../utils/data\";\r\nimport { fetchWithBody, fetchWithTokenNoBody } from \"../../utils/fetch\";\r\n\r\nfunction Dashboard() {\r\n  const [recentlyAdded, setRecentlyAdded] = React.useState([]);\r\n  const [stats, setStats] = React.useState([]);\r\n\r\n  const [characterCheck, setCharacterCheck] = React.useState(false);\r\n  const [storyCheck, setStoryCheck] = React.useState(\"\");\r\n  const [reviewCheck, setReviewCheck] = React.useState(false);\r\n  const [permissions, setPermissions] = React.useState(false);\r\n\r\n  const onChangeValue = (event) => {\r\n    fetchWithBody(\r\n      \"https://aroacedb-back.herokuapp.com/permissions/review\",\r\n      \"POST\",\r\n      { checked: event.target.value }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n      });\r\n  };\r\n\r\n  const onChangeValueC = (event) => {\r\n    setCharacterCheck(event.target.value);\r\n    fetchWithBody(\r\n      \"https://aroacedb-back.herokuapp.com/permissions/character\",\r\n      \"POST\",\r\n      { checked: event.target.value }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n      });\r\n  };\r\n\r\n  const onChangeValueS = (event) => {\r\n    const newValue = event.target.value;\r\n    setStoryCheck(newValue);\r\n    console.log(storyCheck);\r\n    fetchWithBody(\r\n      \"https://aroacedb-back.herokuapp.com/permissions/story\",\r\n      \"POST\",\r\n      { checked: event.target.value }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/permissions\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setCharacterCheck(resJson.data.character.checked);\r\n        setStoryCheck(resJson.data.story.checked);\r\n        setReviewCheck(resJson.data.review.checked);\r\n      });\r\n  }, [permissions]);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/suggest/characters/recent\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        const suggested = resJson.data.recentlyAdded;\r\n        console.log(suggested);\r\n        setRecentlyAdded(suggested);\r\n      });\r\n\r\n    fetch(\"https://aroacedb-back.herokuapp.com/stats\").then((res) =>\r\n      res.json().then((resJson) => {\r\n        const data = resJson.data;\r\n        console.log(data);\r\n        setStats(data);\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Dashboard\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n\r\n      <div className=\"dashboard-container\">\r\n        <div className=\"header\">\r\n          <h2>Dashboard</h2>\r\n        </div>\r\n        <Stats stats={stats} />\r\n        <RecentSuggested characters={recentlyAdded} />\r\n\r\n        <div className=\"header\">\r\n          <a href=\"/suggested-characters\">View All</a>\r\n        </div>\r\n\r\n        <div className=\"export\">\r\n          <a href=\"https://aroacedb-back.herokuapp.com/download/characters\">\r\n            Export Characters\r\n          </a>\r\n\r\n          <a href=\"https://aroacedb-back.herokuapp.com/download/stories\">\r\n            Export Stories\r\n          </a>\r\n\r\n          <a href=\"https://aroacedb-back.herokuapp.com/download/reviews\">\r\n            Export Reviews\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"toggle-container\">\r\n          <div className=\"toggle-input\">\r\n            <span>\r\n              Currently character suggestions are\r\n              <b> {characterCheck ? \"enabled\" : \"disabled\"}</b>, story\r\n              suggestions are<b> {storyCheck ? \"enabled\" : \"disabled\"}</b> and\r\n              review suggestions are{\" \"}\r\n              <b>{reviewCheck ? \"enabled\" : \"disabled\"}</b>.\r\n            </span>\r\n            <label className=\"switch\">\r\n              Character Suggestions\r\n              <div>\r\n                Enable\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"character\"\r\n                  value={true}\r\n                  checked={characterCheck ? \"checked\" : \"\"}\r\n                  onClick={() => {\r\n                    setCharacterCheck(true);\r\n                    fetchWithBody(\r\n                      \"https://aroacedb-back.herokuapp.com/permissions/character\",\r\n                      \"POST\",\r\n                      { checked: true }\r\n                    )\r\n                      .then((res) => res.json())\r\n                      .then((resJson) => {\r\n                        console.log(resJson);\r\n                      });\r\n                  }}\r\n                />\r\n                Disable\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"character\"\r\n                  value={false}\r\n                  checked={characterCheck ? \"\" : \"checked\"}\r\n                  onClick={() => {\r\n                    setCharacterCheck(false);\r\n                    fetchWithBody(\r\n                      \"https://aroacedb-back.herokuapp.com/permissions/character\",\r\n                      \"POST\",\r\n                      { checked: false }\r\n                    )\r\n                      .then((res) => res.json())\r\n                      .then((resJson) => {\r\n                        console.log(resJson);\r\n                      });\r\n                  }}\r\n                />\r\n              </div>\r\n            </label>\r\n            <label className=\"switch\">\r\n              Review Suggestions\r\n              <div>\r\n                Enable\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"review\"\r\n                  value={true}\r\n                  checked={reviewCheck ? \"checked\" : \"\"}\r\n                  onClick={() => {\r\n                    setReviewCheck(true);\r\n                    fetchWithBody(\r\n                      \"https://aroacedb-back.herokuapp.com/permissions/review\",\r\n                      \"POST\",\r\n                      { checked: true }\r\n                    )\r\n                      .then((res) => res.json())\r\n                      .then((resJson) => {\r\n                        console.log(resJson);\r\n                      });\r\n                  }}\r\n                />\r\n                Disable\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"review\"\r\n                  value={false}\r\n                  checked={reviewCheck ? \"\" : \"checked\"}\r\n                  onClick={() => {\r\n                    setReviewCheck(false);\r\n                    fetchWithBody(\r\n                      \"https://aroacedb-back.herokuapp.com/permissions/review\",\r\n                      \"POST\",\r\n                      { checked: false }\r\n                    )\r\n                      .then((res) => res.json())\r\n                      .then((resJson) => {\r\n                        console.log(resJson);\r\n                      });\r\n                  }}\r\n                />\r\n              </div>\r\n            </label>\r\n            <label className=\"switch\">\r\n              Story Suggestions\r\n              <div>\r\n                Enable\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"story\"\r\n                  value={true}\r\n                  checked={storyCheck ? \"checked\" : \"\"}\r\n                  onClick={() => {\r\n                    setStoryCheck(true);\r\n                    fetchWithBody(\r\n                      \"https://aroacedb-back.herokuapp.com/permissions/story\",\r\n                      \"POST\",\r\n                      { checked: true }\r\n                    )\r\n                      .then((res) => res.json())\r\n                      .then((resJson) => {\r\n                        console.log(resJson);\r\n                      });\r\n                  }}\r\n                />\r\n                Disable\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"story\"\r\n                  value={false}\r\n                  checked={storyCheck ? \"\" : \"checked\"}\r\n                  onClick={() => {\r\n                    setStoryCheck(false);\r\n                    fetchWithBody(\r\n                      \"https://aroacedb-back.herokuapp.com/permissions/story\",\r\n                      \"POST\",\r\n                      { checked: false }\r\n                    )\r\n                      .then((res) => res.json())\r\n                      .then((resJson) => {\r\n                        console.log(resJson);\r\n                      });\r\n                  }}\r\n                />\r\n              </div>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-review\\suggest-review.js",["264","265","266","267","268","269","270","271","272"],"import React from \"react\";\r\nimport \"./suggest-review.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fazerRequisicaoComBody } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestReview() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Suggest a Review</h3>\r\n          <Formik\r\n            initialValues={{\r\n              review_for: \"\",\r\n              reviewer: \"\",\r\n              ownvoice_for: \"\",\r\n              link: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              values.character_id = params.id;\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetch(\"https://aroacedb-back.herokuapp.com/suggest/reviews\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n              })\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"ReviewInfo\">\r\n                    <div className=\"container\">\r\n                      <div className=\"content-hundred\">\r\n                        <div className=\"block\">\r\n                          <label>\r\n                            <div className=\"group\">\r\n                              <span\r\n                                className=\"hover\"\r\n                                data-for=\"tooltip-review-for\"\r\n                                data-tip\r\n                              >\r\n                                ?\r\n                              </span>\r\n                              <ReactTooltip\r\n                                id=\"tooltip-review-for\"\r\n                                effect=\"solid\"\r\n                                place=\"top\"\r\n                                type=\"dark\"\r\n                              >\r\n                                <div className=\"tooltip\">\r\n                                  Story the review was written about.\r\n                                </div>\r\n                              </ReactTooltip>\r\n                              <span>Review for</span>\r\n                            </div>\r\n\r\n                            <input\r\n                              id=\"review_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Review for\"\r\n                              value={values.review_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n\r\n                          <label>\r\n                            <div className=\"group\">\r\n                              <span\r\n                                className=\"hover\"\r\n                                data-for=\"tooltip-link\"\r\n                                data-tip\r\n                              >\r\n                                ?\r\n                              </span>\r\n                              <ReactTooltip\r\n                                id=\"tooltip-link\"\r\n                                effect=\"solid\"\r\n                                place=\"top\"\r\n                                type=\"dark\"\r\n                              >\r\n                                <div className=\"tooltip\">\r\n                                  A link to where the review is hosted.\r\n                                </div>\r\n                              </ReactTooltip>\r\n                              <span>Link</span>\r\n                            </div>\r\n                            <input\r\n                              id=\"link\"\r\n                              type=\"text\"\r\n                              placeholder=\"Link\"\r\n                              value={values.link}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <span className=\"block\">\r\n                          <label>\r\n                            <div className=\"group\">\r\n                              <span\r\n                                className=\"hover\"\r\n                                data-for=\"tooltip-reviewer\"\r\n                                data-tip\r\n                              >\r\n                                ?\r\n                              </span>\r\n                              <ReactTooltip\r\n                                id=\"tooltip-reviewer\"\r\n                                effect=\"solid\"\r\n                                place=\"top\"\r\n                                type=\"dark\"\r\n                              >\r\n                                <div className=\"tooltip\">\r\n                                  The person who reviewed the story.\r\n                                </div>\r\n                              </ReactTooltip>\r\n                              <span>Reviewer</span>\r\n                            </div>\r\n                            <input\r\n                              id=\"reviewer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Reviewer\"\r\n                              value={values.reviewer}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            <div className=\"group\">\r\n                              <span\r\n                                className=\"hover\"\r\n                                data-for=\"tooltip-ownvoice-for\"\r\n                                data-tip\r\n                              >\r\n                                ?\r\n                              </span>\r\n                              <ReactTooltip\r\n                                id=\"tooltip-ownvoice-for\"\r\n                                effect=\"solid\"\r\n                                place=\"top\"\r\n                                type=\"dark\"\r\n                              >\r\n                                <div className=\"tooltip\">\r\n                                  Ownvoices aspects of the review.\r\n                                </div>\r\n                              </ReactTooltip>\r\n                              <span>Ownvoice for</span>\r\n                            </div>\r\n                            <input\r\n                              id=\"ownvoice_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Ownvoice for\"\r\n                              value={values.ownvoice_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"review-right\">\r\n                    Suggest\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-character\\suggested-character.js",["273","274","275","276"],"import React from \"react\";\r\nimport \"./suggested-character.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport {\r\n  fazerRequisicaoComBody,\r\n  fetchWithToken,\r\n  fetchWithTokenNoBody,\r\n} from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const [token, setToken] = React.useState(\"\");\r\n\r\n  const history = useHistory();\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/suggest/characters/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setCharacter(resJson.data.character[0]);\r\n        console.log(resJson.data.character[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Character\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"character-container\">\r\n        <div className=\"suggest\">\r\n          <h2 className=\"title\">Suggested character</h2>\r\n\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              character_name: character.character_name,\r\n              author: character.author,\r\n              gender: character.gender,\r\n              importance: character.importance,\r\n              pairing_qpp_or_romantic: character.pairing_qpp_or_romantic,\r\n              main_storyseries: character.main_storyseries,\r\n              type_of_rep: character.type_of_rep,\r\n              romantic_orientation: character.romantic_orientation,\r\n              sexual_orientation: character.sexual_orientation,\r\n              genre: character.genre,\r\n              relationships: character.relationships,\r\n              rep_noteswarnings: character.rep_noteswarnings,\r\n              cover: character.cover,\r\n              reference: character.reference,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                //add character to database\r\n                \"https://aroacedb-back.herokuapp.com/characters\",\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  let character_id = resJson.data.dbCharacter[0].id;\r\n\r\n                  fetch(\r\n                    //get character stories from st_sc_suggestions\r\n                    `https://aroacedb-back.herokuapp.com/suggest/sc/character/stories/${params.id}`\r\n                  )\r\n                    .then((res) => res.json())\r\n                    .then((resJson) => {\r\n                      console.log(resJson);\r\n                      const stories = resJson.data.stories;\r\n\r\n                      stories.forEach((story) => {\r\n                        story.character_id = character_id;\r\n                        console.log(story);\r\n                        fetchWithToken(\r\n                          // add to real story database\r\n                          `https://aroacedb-back.herokuapp.com/stories`,\r\n                          \"POST\",\r\n                          story,\r\n                          token\r\n                        )\r\n                          .then((res) => res.json())\r\n                          .then((resJson) => {\r\n                            console.log(resJson);\r\n\r\n                            fetchWithTokenNoBody(\r\n                              //delete from sc suggested stories\r\n                              `https://aroacedb-back.herokuapp.com/suggest/sc/character/stories/${params.id}`,\r\n                              \"DELETE\",\r\n                              token\r\n                            )\r\n                              .then((res) => res.json())\r\n                              .then((resJson) => {\r\n                                console.log(resJson);\r\n                                fetchWithTokenNoBody(\r\n                                  //delete character from suggestions\r\n                                  `https://aroacedb-back.herokuapp.com/suggest/characters/${params.id}`,\r\n                                  \"DELETE\",\r\n                                  token\r\n                                )\r\n                                  .then((res) => res.json())\r\n                                  .then((resJson) => {\r\n                                    console.log(resJson);\r\n                                    history.push(\"/success\");\r\n                                  });\r\n                              });\r\n                          });\r\n                      });\r\n                    });\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"suggest-character-info\">\r\n                    <div className=\"line\">\r\n                      <h2>\r\n                        <input\r\n                          id=\"character_name\"\r\n                          placeholder={character.character_name}\r\n                          type=\"text\"\r\n                          value={values.character_name}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h2>\r\n\r\n                      <select\r\n                        name=\"importance\"\r\n                        value={values.importance}\r\n                        onChange={handleChange}\r\n                        onBlur={handleChange}\r\n                      >\r\n                        <option value=\"\" label=\"Select one\" />\r\n                        <option value=\"Lead\" label=\"Lead\" />\r\n                        <option value=\"Main\" label=\"Main\" />\r\n                        <option value=\"Side\" label=\"Side\" />\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Author</span>\r\n                        <input\r\n                          id=\"author\"\r\n                          placeholder={character.author}\r\n                          type=\"text\"\r\n                          value={values.author}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Gender</span>{\" \"}\r\n                        <select\r\n                          name=\"gender\"\r\n                          value={values.gender}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select gender\" />\r\n                          <option value=\"M\" label=\"M\" />\r\n                          <option value=\"F\" label=\"F\" />\r\n                          <option value=\"Enby\" label=\"Enby\" />\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Pairing</span>\r\n                        <input\r\n                          id=\"pairing_qpp_or_romantic\"\r\n                          placeholder={character.pairing_qpp_or_romantic}\r\n                          type=\"text\"\r\n                          value={values.pairing_qpp_or_romantic}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Series</span>\r\n                        <input\r\n                          id=\"main_storyseries\"\r\n                          placeholder={character.main_storyseries}\r\n                          type=\"text\"\r\n                          value={values.main_storyseries}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Type of Rep</span>\r\n                        <select\r\n                          name=\"type_of_rep\"\r\n                          value={values.type_of_rep}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Word of God\" label=\"Word of God\" />\r\n                          <option value=\"On Page\" label=\"On Page\" />\r\n                          <option value=\"Word Used\" label=\"Word Used\" />\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Romantic orientation</span>\r\n\r\n                        <select\r\n                          name=\"romantic_orientation\"\r\n                          value={values.romantic_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Alloromantic\" label=\"Alloromantic\" />\r\n                          <option value=\"Aroflux\" label=\"Aroflux\" />\r\n                          <option value=\"Aromantic\" label=\"Aromantic\" />\r\n                          <option value=\"Arospec\" label=\"Arospec\" />\r\n                          <option value=\"Biromantic\" label=\"Biromantic\" />\r\n                          <option value=\"Greyromantic\" label=\"Grayromantic\" />\r\n                          <option value=\"Demiromantic\" label=\"Demiromantic\" />\r\n                          <option\r\n                            value=\"Heteroromantic\"\r\n                            label=\"Heteroromantic\"\r\n                          />\r\n                          <option value=\"Homoromantic\" label=\"Homoromantic\" />\r\n                          <option value=\"Panromantic\" label=\"Panromantic\" />\r\n                          <option value=\"Queer\" label=\"Queer\" />\r\n                          <option value=\"WTFRomantic\" label=\"WTFRomantic\" />\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Sexual Orientation</span>\r\n                        <select\r\n                          name=\"sexual_orientation\"\r\n                          value={values.sexual_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Allosexual\" label=\"Allosexual\" />\r\n                          <option value=\"Asexual\" label=\"Asexual\" />\r\n                          <option value=\"Acespec\" label=\"Acespec\" />\r\n                          <option value=\"Demisexual\" label=\"Demisexual\" />\r\n                          <option value=\"Bisexual\" label=\"Bisexual\" />\r\n                          <option value=\"Gay\" label=\"Gay\" />\r\n                          <option value=\"Gray-asexual\" label=\"Graysexual\" />\r\n                          <option value=\"Heterosexual\" label=\"Heterosexual\" />\r\n                          <option value=\"Pansexual\" label=\"Pansexual\" />\r\n                          <option value=\"Queer\" label=\"Queer\" />\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Genre</span>\r\n                        <input\r\n                          id=\"genre\"\r\n                          placeholder={character.genre}\r\n                          type=\"text\"\r\n                          value={values.genre}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Relationships</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"relationships\"\r\n                        placeholder={character.relationships}\r\n                        type=\"text\"\r\n                        value={values.relationships}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Notes & Warnings</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder={character.rep_noteswarnings}\r\n                        type=\"text\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>References to mention of representation</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"reference\"\r\n                        placeholder=\"Insert references\"\r\n                        type=\"text\"\r\n                        value={values.reference}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Cover</span>\r\n                      </p>\r\n                      <input\r\n                        id=\"cover\"\r\n                        placeholder={character.cover}\r\n                        type=\"text\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"buttons\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        console.log(\"delete from database\");\r\n                        fetchWithTokenNoBody(\r\n                          `https://aroacedb-back.herokuapp.com/suggest/characters/${params.id}`,\r\n                          \"DELETE\",\r\n                          token\r\n                        )\r\n                          .then((res) => res.json())\r\n                          .then((resJson) => {\r\n                            console.log(resJson);\r\n                            history.push(\"/success\");\r\n                          });\r\n\r\n                        history.push(\"/success\");\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Add Character to Database\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-character\\update-character.js",["277","278","279","280"],"import React from \"react\";\r\nimport \"./update-character.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithBody, fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function UpdateCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const [token, setToken] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/characters/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setCharacter(resJson.data.character[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Character\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"character-container\">\r\n        <div className=\"suggest\">\r\n          <h2 className=\"title\">Update character</h2>\r\n\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              character_name: character.character_name,\r\n              author: character.author,\r\n              gender: character.gender,\r\n              importance: character.importance,\r\n              pairing_qpp_or_romantic: character.pairing_qpp_or_romantic,\r\n              main_storyseries: character.main_storyseries,\r\n              type_of_rep: character.type_of_rep,\r\n              romantic_orientation: character.romantic_orientation,\r\n              sexual_orientation: character.sexual_orientation,\r\n              genre: character.genre,\r\n              relationships: character.relationships,\r\n              rep_noteswarnings: character.rep_noteswarnings,\r\n              cover: character.cover,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(token);\r\n              console.log(`http:localhost:8081/characters/${params.id}`);\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/characters/${params.id}`,\r\n                \"PUT\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n              //s history.push(\"/success\");\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"suggest-character-info\">\r\n                    <div className=\"line\">\r\n                      <h2>\r\n                        <input\r\n                          id=\"character_name\"\r\n                          placeholder={character.character_name}\r\n                          type=\"text\"\r\n                          value={values.character_name}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h2>\r\n                      <input\r\n                        id=\"importance\"\r\n                        placeholder={character.importance}\r\n                        type=\"text\"\r\n                        value={values.importance}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Author</span>\r\n                        <input\r\n                          id=\"author\"\r\n                          placeholder={character.author}\r\n                          type=\"text\"\r\n                          value={values.author}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Gender</span>{\" \"}\r\n                        <input\r\n                          id=\"gender\"\r\n                          placeholder={character.gender}\r\n                          type=\"text\"\r\n                          value={values.gender}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Pairing</span>\r\n                        <input\r\n                          id=\"pairing_qpp_or_romantic\"\r\n                          placeholder={character.pairing_qpp_or_romantic}\r\n                          type=\"text\"\r\n                          value={values.pairing_qpp_or_romantic}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Series</span>\r\n                        <input\r\n                          id=\"main_storyseries\"\r\n                          placeholder={character.main_storyseries}\r\n                          type=\"text\"\r\n                          value={values.main_storyseries}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Type of Rep</span>\r\n                        <input\r\n                          id=\"type_of_rep\"\r\n                          placeholder={character.type_of_rep}\r\n                          type=\"text\"\r\n                          value={values.type_of_rep}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Romantic orientation</span>\r\n                        <input\r\n                          id=\"romantic_orientation\"\r\n                          placeholder={character.romantic_orientation}\r\n                          type=\"text\"\r\n                          value={values.romantic_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Sexual Orientation</span>\r\n                        <input\r\n                          id=\"sexual_orientation\"\r\n                          placeholder={character.sexual_orientation}\r\n                          type=\"text\"\r\n                          value={values.sexual_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Genre</span>\r\n                        <input\r\n                          id=\"genre\"\r\n                          placeholder={character.genre}\r\n                          type=\"text\"\r\n                          value={values.genre}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Relationships</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"relationships\"\r\n                        placeholder={character.relationships}\r\n                        type=\"text\"\r\n                        value={values.relationships}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Notes & Warnings</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder={character.rep_noteswarnings}\r\n                        type=\"text\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Cover</span>\r\n                      </p>\r\n                      <input\r\n                        id=\"cover\"\r\n                        placeholder={character.cover}\r\n                        type=\"text\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"buttons\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        console.log(\"delete from database\");\r\n                        fetch(\r\n                          `https://aroacedb-back.herokuapp.com/suggest/${params}`,\r\n                          {\r\n                            method: \"DELETE\",\r\n                            headers: { \"Content-Type\": \"application/json\" },\r\n                          }\r\n                        )\r\n                          .then((res) => res.json())\r\n                          .then((resJson) => {\r\n                            console.log(resJson);\r\n                          });\r\n\r\n                        //history.push(\"/success\");\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Update Character to Database\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-reviews\\suggested-reviews.js",["281"],"import \"./suggested-reviews.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Table from \"../../components/table-character/table\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableReview from \"../../components/table-review/table\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedReviews() {\r\n  const [reviews, setReviews] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/suggest/reviews\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const data = resJson.data.paginated_reviews;\r\n        console.log(data);\r\n        setReviews(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"SuggestedCharacters\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggested-container\">\r\n        <div className=\"title\">\r\n          <h2>Suggested Reviews</h2>\r\n        </div>\r\n        <TableReview content={reviews} type=\"suggest\" id=\"review\" />\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-review\\update-review.js",["282","283","284","285","286","287","288"],"import React from \"react\";\r\nimport \"./update-review.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function UpdateReview() {\r\n  const [review, setReview] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n    fetch(`https://aroacedb-back.herokuapp.com/reviews/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setReview(resJson.data.review[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Update Review</h3>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              review_for: review.review_for,\r\n              reviewer: review.reviewer,\r\n              ownvoice_for: review.ownvoice_for,\r\n              link: review.link,\r\n              character_id: review.character_id,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/reviews/${review.id}`,\r\n                \"PUT\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"ReviewInfo\">\r\n                    <div className=\"container\">\r\n                      <div className=\"content-hundred\">\r\n                        <div className=\"block\">\r\n                          <label>\r\n                            Review for\r\n                            <input\r\n                              id=\"review_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Review for\"\r\n                              value={values.review_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n\r\n                          <label>\r\n                            Link\r\n                            <input\r\n                              id=\"link\"\r\n                              type=\"text\"\r\n                              placeholder=\"Link\"\r\n                              value={values.link}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <span className=\"block\">\r\n                          <label>\r\n                            Reviewer\r\n                            <input\r\n                              id=\"reviewer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Reviewer\"\r\n                              value={values.reviewer}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            Ownvoices for\r\n                            <input\r\n                              id=\"ownvoices_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Ownvoice for\"\r\n                              value={values.ownvoice_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"review-right\">\r\n                    Update\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-character\\add-character.js",["289","290"],"import React from \"react\";\r\nimport \"./add-character.css\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default function AddCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"Character\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"character-container\">\r\n        <div className=\"suggest\">\r\n          <h2 className=\"title\">Add a character</h2>\r\n\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              character_name: \"\",\r\n              author: \"\",\r\n              gender: \"\",\r\n              importance: \"\",\r\n              pairing_qpp_or_romantic: \"\",\r\n              main_storyseries: \"\",\r\n              type_of_rep: \"\",\r\n              romantic_orientation: \"\",\r\n              sexual_orientation: \"\",\r\n              genre: \"\",\r\n              relationships: \"\",\r\n              rep_noteswarnings: \"\",\r\n              cover: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              const token = localStorage.getItem(\"token\");\r\n              console.log(token);\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                \"https://aroacedb-back.herokuapp.com/characters\",\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n              //s history.push(\"/success\");\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"suggest-character-info\">\r\n                    <div className=\"line\">\r\n                      <h2>\r\n                        <input\r\n                          id=\"character_name\"\r\n                          placeholder={character.character_name}\r\n                          type=\"text\"\r\n                          value={values.character_name}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h2>\r\n                      <div className=\"importance-container\">\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-importance\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-importance\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Lead:</strong>The character is at the\r\n                                  heart of the story’s central storyline\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Main:</strong>The character plays an\r\n                                  important role in the story and is frequently\r\n                                  on page\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Lead:</strong>The character plays a\r\n                                  minor role in the story\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <span>Importance</span>\r\n                        </div>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Author</span>\r\n                        </div>\r\n                        <input\r\n                          id=\"author\"\r\n                          placeholder={character.author}\r\n                          type=\"text\"\r\n                          value={values.author}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Gender</span>\r\n                        </div>\r\n\r\n                        <select\r\n                          name=\"gender\"\r\n                          value={values.gender}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select gender\" />\r\n                          <option value=\"M\" label=\"M\" />\r\n                          <option value=\"F\" label=\"F\" />\r\n                          <option value=\"Enby\" label=\"Enby\" />\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Pairing</span>\r\n                        </div>\r\n                        <input\r\n                          id=\"pairing_qpp_or_romantic\"\r\n                          placeholder={character.pairing_qpp_or_romantic}\r\n                          type=\"text\"\r\n                          value={values.pairing_qpp_or_romantic}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Series</span>\r\n                        </div>\r\n                        <input\r\n                          id=\"main_storyseries\"\r\n                          placeholder={character.main_storyseries}\r\n                          type=\"text\"\r\n                          value={values.main_storyseries}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Type of Rep</span>\r\n                        </div>\r\n\r\n                        <select\r\n                          name=\"type_of_rep\"\r\n                          value={values.type_of_rep}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Word of God\" label=\"Word of God\" />\r\n                          <option value=\"On Page\" label=\"On Page\" />\r\n                          <option value=\"Word Used\" label=\"Word Used\" />\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Romantic orientation</span>\r\n                        </div>\r\n                        <select\r\n                          name=\"romantic_orientation\"\r\n                          value={values.romantic_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Alloromantic\" label=\"Alloromantic\" />\r\n                          <option value=\"Aroflux\" label=\"Aroflux\" />\r\n                          <option value=\"Aromantic\" label=\"Aromantic\" />\r\n                          <option value=\"Arospec\" label=\"Arospec\" />\r\n                          <option value=\"Biromantic\" label=\"Biromantic\" />\r\n                          <option value=\"Greyromantic\" label=\"Grayromantic\" />\r\n                          <option value=\"Demiromantic\" label=\"Demiromantic\" />\r\n                          <option\r\n                            value=\"Heteroromantic\"\r\n                            label=\"Heteroromantic\"\r\n                          />\r\n                          <option value=\"Homoromantic\" label=\"Homoromantic\" />\r\n                          <option value=\"Panromantic\" label=\"Panromantic\" />\r\n                          <option value=\"Queer\" label=\"Queer\" />\r\n                          <option value=\"WTFRomantic\" label=\"WTFRomantic\" />\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Sexual Orientation</span>\r\n                        </div>\r\n\r\n                        <select\r\n                          name=\"sexual_orientation\"\r\n                          value={values.sexual_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Allosexual\" label=\"Allosexual\" />\r\n                          <option value=\"Asexual\" label=\"Asexual\" />\r\n                          <option value=\"Acespec\" label=\"Acespec\" />\r\n                          <option value=\"Demisexual\" label=\"Demisexual\" />\r\n                          <option value=\"Bisexual\" label=\"Bisexual\" />\r\n                          <option value=\"Gay\" label=\"Gay\" />\r\n                          <option value=\"Gray-asexual\" label=\"Graysexual\" />\r\n                          <option value=\"Heterosexual\" label=\"Heterosexual\" />\r\n                          <option value=\"Pansexual\" label=\"Pansexual\" />\r\n                          <option value=\"Queer\" label=\"Queer\" />\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Genre</span>\r\n                        </div>\r\n                        <input\r\n                          id=\"genre\"\r\n                          placeholder={character.genre}\r\n                          type=\"text\"\r\n                          value={values.genre}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <div className=\"group\">\r\n                        <p>\r\n                          <span>Relationships</span>\r\n                        </p>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"relationships\"\r\n                        placeholder={character.relationships}\r\n                        type=\"text\"\r\n                        value={values.relationships}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <div className=\"group\">\r\n                        <p>\r\n                          <span>Notes & Warnings</span>\r\n                        </p>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder={character.rep_noteswarnings}\r\n                        type=\"text\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <div className=\"group\">\r\n                        <p>\r\n                          <span>Cover</span>\r\n                        </p>\r\n                      </div>\r\n                      <input\r\n                        id=\"cover\"\r\n                        placeholder={character.cover}\r\n                        type=\"text\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"buttons-add\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Add Character to Database\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-review\\suggested-review.js",["291","292","293","294","295","296","297","298"],"import React from \"react\";\r\nimport \"./suggested-review.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport {\r\n  fazerRequisicaoComBody,\r\n  fetchWithToken,\r\n  fetchWithTokenNoBody,\r\n} from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedReview() {\r\n  const [review, setReview] = React.useState({});\r\n  const [token, setToken] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/suggest/reviews/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setReview(resJson.data.review[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Suggested Review</h3>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              review_for: review.review_for,\r\n              reviewer: review.reviewer,\r\n              ownvoice_for: review.ownvoice_for,\r\n              link: review.link,\r\n              character_id: review.character_id,\r\n            }}\r\n            onSubmit={(values) => {\r\n              values.character_id = review.character_id;\r\n              console.log(JSON.stringify(values, null, 2));\r\n              console.log(review.character_id);\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/reviews`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/suggest/reviews/${review.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"ReviewInfo\">\r\n                    <div className=\"container\">\r\n                      <div className=\"content-hundred\">\r\n                        <div className=\"block\">\r\n                          <label>\r\n                            Review for\r\n                            <input\r\n                              id=\"review_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Review for\"\r\n                              value={values.review_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n\r\n                          <label>\r\n                            Link\r\n                            <input\r\n                              id=\"link\"\r\n                              type=\"text\"\r\n                              placeholder=\"Link\"\r\n                              value={values.link}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <span className=\"block\">\r\n                          <label>\r\n                            Reviewer\r\n                            <input\r\n                              id=\"reviewer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Reviewer\"\r\n                              value={values.reviewer}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            Ownvoices for\r\n                            <input\r\n                              id=\"ownvoices_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Ownvoice for\"\r\n                              value={values.ownvoice_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    onClick={() => {\r\n                      fetchWithTokenNoBody(\r\n                        `https://aroacedb-back.herokuapp.com/suggest/reviews/${review.id}`,\r\n                        \"DELETE\",\r\n                        token\r\n                      )\r\n                        .then((res) => res.json())\r\n                        .then((resJson) => {\r\n                          console.log(resJson);\r\n                          history.push(\"/success\");\r\n                        });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  <button type=\"submit\" className=\"review-right\">\r\n                    Add to Database\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-review\\add-review.js",["299","300","301","302","303","304"],"import React from \"react\";\r\nimport \"./add-review.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function AddReview() {\r\n  const { params } = useRouteMatch();\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Add a Review</h3>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              review_for: \"\",\r\n              reviewer: \"\",\r\n              ownvoice_for: \"\",\r\n              link: \"\",\r\n              character_id: params.id,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/reviews`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"ReviewInfo\">\r\n                    <div className=\"container\">\r\n                      <div className=\"content-hundred\">\r\n                        <div className=\"block\">\r\n                          <label>\r\n                            Review for\r\n                            <input\r\n                              id=\"review_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Review for\"\r\n                              value={values.review_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n\r\n                          <label>\r\n                            Link\r\n                            <input\r\n                              id=\"link\"\r\n                              type=\"text\"\r\n                              placeholder=\"Link\"\r\n                              value={values.link}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <span className=\"block\">\r\n                          <label>\r\n                            Reviewer\r\n                            <input\r\n                              id=\"reviewer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Reviewer\"\r\n                              value={values.reviewer}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            Ownvoices for\r\n                            <input\r\n                              id=\"ownvoices_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Ownvoice for\"\r\n                              value={values.ownvoice_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"review-right\">\r\n                    Add Review to Database\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-character\\suggest-character.js",["305","306","307","308","309"],"import React, { useState } from \"react\";\r\nimport { fetchWithBody } from \"../../utils/fetch\";\r\nimport \"./suggest-character.css\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nfunction SuggestCharacter() {\r\n  const history = useHistory();\r\n  const [token, setToken] = useState(\"\");\r\n  const [characterCheck, setCharacterCheck] = React.useState(\"\");\r\n  const [storyCheck, setStoryCheck] = React.useState(\"\");\r\n  const [reviewCheck, setReviewCheck] = React.useState(\"\");\r\n  const [stories, setStories] = React.useState({\r\n    story_title: [],\r\n    series_or_anthology: [],\r\n    story_length: [],\r\n    genre: [],\r\n    type_of_rep: [],\r\n    character_importance: [],\r\n    rep_noteswarnings: [],\r\n    other_noteswarnings: [],\r\n    cover: [],\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    fetch(\"https://aroacedb-back.herokuapp.com/permissions\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setCharacterCheck(resJson.data.character.checked);\r\n        setStoryCheck(resJson.data.story.checked);\r\n        setReviewCheck(resJson.data.review.checked);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestCharacter\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggest-container\">\r\n        <div className=\"suggest\">\r\n          <h2 className=\"title\">Suggest a character</h2>\r\n          {characterCheck ? (\r\n            <Formik\r\n              initialValues={{\r\n                character_name: \"\",\r\n                author: \"\",\r\n                gender: \"\",\r\n                importance: \"\",\r\n                pairing_qpp_or_romantic: \"\",\r\n                main_storyseries: \"\",\r\n                type_of_rep: \"\",\r\n                romantic_orientation: \"\",\r\n                sexual_orientation: \"\",\r\n                genre: \"\",\r\n                relationships: \"\",\r\n                rep_noteswarnings: \"\",\r\n                cover: \"\",\r\n                reference: \"\",\r\n              }}\r\n              onSubmit={(values) => {\r\n                console.log(JSON.stringify(values, null, 2));\r\n                fetchWithBody(\r\n                  \"https://aroacedb-back.herokuapp.com/suggest/characters\",\r\n                  \"POST\",\r\n                  values\r\n                )\r\n                  .then((res) => res.json())\r\n                  .then((resJson) => {\r\n                    console.log(resJson.data.dbCharacter[0].id);\r\n                    let id = resJson.data.dbCharacter[0].id;\r\n                    history.push(`/suggest-story-sc/${id}`);\r\n                  });\r\n              }}\r\n            >\r\n              {(props) => {\r\n                const {\r\n                  values,\r\n                  isSubmitting,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                } = props;\r\n                return (\r\n                  <form onSubmit={handleSubmit}>\r\n                    <div className=\"content\">\r\n                      <p>\r\n                        Welcome to the “Suggest a Character” page. Before you\r\n                        fill out the form, please remember all entries meet\r\n                        these criterias:\r\n                      </p>\r\n                      <ul>\r\n                        <li>\r\n                          Prose only (no films, tv series, (web)comics, etc.)\r\n                        </li>\r\n                        <li>\r\n                          Currently published original fiction (online, digital,\r\n                          in print)\r\n                        </li>\r\n                        <li>Confirmed characters only</li>\r\n                      </ul>\r\n\r\n                      <p>\r\n                        Every field has a tooltip, so check those out if you’re\r\n                        unsure what to fill in! With all of that said, thank you\r\n                        so much for your suggestion and help.\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"suggest-character-info\">\r\n                      <div className=\"line\">\r\n                        <h2>\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-name\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-name\"\r\n                              effect=\"solid\"\r\n                              palce=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">Character’s name</div>\r\n                            </ReactTooltip>\r\n                          </div>\r\n                          <input\r\n                            id=\"character_name\"\r\n                            placeholder=\"Insert Character Name\"\r\n                            type=\"text\"\r\n                            value={values.character_name}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </h2>\r\n                        <div className=\"importance-container\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-importance\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-importance\"\r\n                              effect=\"solid\"\r\n                              place=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                <ul>\r\n                                  <li>\r\n                                    <strong>Lead: </strong>The character is at\r\n                                    the heart{\" \"}\r\n                                    <p>of the story’s central storyline</p>\r\n                                  </li>\r\n                                  <li>\r\n                                    <strong>Main: </strong>The character plays\r\n                                    an important{\" \"}\r\n                                    <p>\r\n                                      role in the story and is frequently on\r\n                                      page\r\n                                    </p>\r\n                                  </li>\r\n                                  <li>\r\n                                    <strong>Lead: </strong>The character plays a\r\n                                    <p> minor role in the story</p>\r\n                                  </li>\r\n                                </ul>\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Importance</span>\r\n                          </div>\r\n                          <select\r\n                            name=\"importance\"\r\n                            value={values.importance}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Lead\" label=\"Lead\" />\r\n                            <option value=\"Main\" label=\"Main\" />\r\n                            <option value=\"Side\" label=\"Side\" />\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"line\">\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-author\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-author\"\r\n                              effect=\"solid\"\r\n                              palce=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">Author’s name</div>\r\n                            </ReactTooltip>\r\n                            <span>Author</span>\r\n                          </div>\r\n                          <input\r\n                            id=\"author\"\r\n                            placeholder=\"Author\"\r\n                            type=\"text\"\r\n                            value={values.author}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </div>\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-tip\r\n                              data-for=\"tooltip-gender\"\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-gender\"\r\n                              effect=\"solid\"\r\n                              palce=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                Character’s gender (nonbinary characters are\r\n                                grouped)\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Gender</span>\r\n                          </div>\r\n\r\n                          <select\r\n                            name=\"gender\"\r\n                            value={values.gender}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select gender\" />\r\n                            <option value=\"M\" label=\"M\" />\r\n                            <option value=\"F\" label=\"F\" />\r\n                            <option value=\"Enby\" label=\"Enby\" />\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-pairing\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-pairing\"\r\n                              effect=\"solid\"\r\n                              place=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                <p>\r\n                                  Write only the letters of the genders\r\n                                  involved,\r\n                                </p>\r\n                                <p>\r\n                                  in the order of M, then F, then NB, i.e. F/NB\r\n                                  or M/F/F\r\n                                </p>\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Pairing</span>\r\n                          </div>\r\n                          <input\r\n                            id=\"pairing_qpp_or_romantic\"\r\n                            placeholder=\"Insert Pairing\"\r\n                            type=\"text\"\r\n                            value={values.pairing_qpp_or_romantic}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"line\">\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-main-storyseries\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-main-storyseries\"\r\n                              effect=\"solid\"\r\n                              place=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                <p>\r\n                                  Name of the series (if applicable). Short\r\n                                  stories in an anthology\r\n                                </p>{\" \"}\r\n                                <p>can list the anthology name here.</p>\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Series</span>\r\n                          </div>\r\n                          <input\r\n                            id=\"main_storyseries\"\r\n                            placeholder=\"Insert Series\"\r\n                            type=\"text\"\r\n                            value={values.main_storyseries}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </div>\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-type\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-type\"\r\n                              effect=\"solid\"\r\n                              place=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                <ul>\r\n                                  <li>\r\n                                    <strong>Word of God: </strong>The\r\n                                    character’s sexuality{\" \"}\r\n                                    <p>\r\n                                      is not explicit on page, but the author\r\n                                      has confirmed it.\r\n                                    </p>\r\n                                  </li>\r\n                                  <li>\r\n                                    <strong>On page:</strong> The character’s\r\n                                    sexuality is explicitly\r\n                                    <p>\r\n                                      demonstrated within the text. It should be\r\n                                      showed or\r\n                                    </p>\r\n                                    <p>\r\n                                      discussed to an extent that makes it clear\r\n                                      to the readers.\r\n                                    </p>\r\n                                  </li>\r\n                                  <li>\r\n                                    <strong>Word used: </strong>The identity is\r\n                                    stated using the{\" \"}\r\n                                    <p> actual word (usually also On Page)</p>\r\n                                  </li>\r\n                                </ul>\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Type of Rep</span>\r\n                          </div>\r\n\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"line\">\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-romantic\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-romantic\"\r\n                              effect=\"solid\"\r\n                              palce=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                <p> Leave blank if you're unsure. </p>\r\n                                <p>If a specific aromantic label is used</p>\r\n\r\n                                <p>but not listed here, pick \"Arospec\" and</p>\r\n\r\n                                <p>write us the label in the Rep Notes &</p>\r\n                                <p>Warnings sections</p>\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Romantic orientation</span>\r\n                          </div>\r\n\r\n                          <select\r\n                            name=\"romantic_orientation\"\r\n                            value={values.romantic_orientation}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Alloromantic\" label=\"Alloromantic\" />\r\n                            <option value=\"Aroflux\" label=\"Aroflux\" />\r\n                            <option value=\"Aromantic\" label=\"Aromantic\" />\r\n                            <option value=\"Arospec\" label=\"Arospec\" />\r\n                            <option value=\"Biromantic\" label=\"Biromantic\" />\r\n                            <option value=\"Greyromantic\" label=\"Grayromantic\" />\r\n                            <option value=\"Demiromantic\" label=\"Demiromantic\" />\r\n                            <option\r\n                              value=\"Heteroromantic\"\r\n                              label=\"Heteroromantic\"\r\n                            />\r\n                            <option value=\"Homoromantic\" label=\"Homoromantic\" />\r\n                            <option value=\"Panromantic\" label=\"Panromantic\" />\r\n                            <option value=\"Queer\" label=\"Queer\" />\r\n                            <option value=\"WTFRomantic\" label=\"WTFRomantic\" />\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-sexual\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-sexual\"\r\n                              effect=\"solid\"\r\n                              palce=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                <p> Leave blank if you're unsure. </p>\r\n                                <p>If a specific asexual label is used</p>\r\n\r\n                                <p>but not listed here, pick \"Acepec\" and</p>\r\n\r\n                                <p>write us the label in the Rep Notes &</p>\r\n                                <p>Warnings sections</p>\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Sexual Orientation</span>\r\n                          </div>\r\n                          <select\r\n                            name=\"sexual_orientation\"\r\n                            value={values.sexual_orientation}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Allosexual\" label=\"Allosexual\" />\r\n                            <option value=\"Asexual\" label=\"Asexual\" />\r\n                            <option value=\"Acespec\" label=\"Acespec\" />\r\n                            <option value=\"Demisexual\" label=\"Demisexual\" />\r\n                            <option value=\"Bisexual\" label=\"Bisexual\" />\r\n                            <option value=\"Gay\" label=\"Gay\" />\r\n                            <option value=\"Gray-asexual\" label=\"Graysexual\" />\r\n                            <option value=\"Heterosexual\" label=\"Heterosexual\" />\r\n                            <option value=\"Pansexual\" label=\"Pansexual\" />\r\n                            <option value=\"Queer\" label=\"Queer\" />\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"line\">\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"genre-field\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"genre-field\"\r\n                              effect=\"solid\"\r\n                              palce=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                Story's literary genre.{\" \"}\r\n                                <p>List in alphabetical order, i.e.</p>{\" \"}\r\n                                \"Contemporary, Romance, Young Adult\".\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Genre</span>\r\n                          </div>\r\n                          <input\r\n                            id=\"genre\"\r\n                            placeholder=\"Insert Genres\"\r\n                            type=\"text\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div clasName=\"square\">\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"relationships\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"relationships\"\r\n                            effect=\"solid\"\r\n                            palce=\"right\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              Please list general terms, such as \"Friendship\",{\" \"}\r\n                              <p>\r\n                                \"Mentor\", or \"Family\", \"Romance\" that describe\r\n                              </p>{\" \"}\r\n                              the most important relationships to the character.\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <p>\r\n                            <span>Relationships</span>\r\n                          </p>\r\n                        </div>\r\n                        <textarea\r\n                          id=\"relationships\"\r\n                          placeholder=\"Insert Relationships\"\r\n                          type=\"text\"\r\n                          value={values.relationships}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n\r\n                      <div clasName=\"square\">\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"noteswarnings\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"relationships\"\r\n                            effect=\"solid\"\r\n                            palce=\"right\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              Any noteworthy information about the\r\n                              representation,\r\n                              <p>\r\n                                {\" \"}\r\n                                whether it is tropes (exile or dead ace, allo\r\n                                saviour, etc.)\r\n                              </p>{\" \"}\r\n                              or facets of it (sex repulsed/averse/positive,\r\n                              touch averse, etc.).\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <p>\r\n                            <span>Notes & Warnings</span>\r\n                          </p>\r\n                        </div>\r\n                        <textarea\r\n                          id=\"rep_noteswarnings\"\r\n                          placeholder=\"Insert Representation Notes & Warnings\"\r\n                          type=\"text\"\r\n                          value={values.rep_noteswarnings}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n\r\n                      <div clasName=\"square\">\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-ref\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-ref\"\r\n                            effect=\"solid\"\r\n                            palce=\"right\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              If there is an author’s post/tweet,{\" \"}\r\n                              <p>a review, or a list where you heard of this</p>{\" \"}\r\n                              character being aspec, please link to it!\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <p>\r\n                            <span>References to mention of representation</span>\r\n                          </p>\r\n                        </div>\r\n\r\n                        <textarea\r\n                          id=\"reference\"\r\n                          placeholder=\"Insert references\"\r\n                          type=\"text\"\r\n                          value={values.reference}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n\r\n                      <div clasName=\"square\">\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"cover\"\r\n                            data-tip=\"URL to cover image.\"\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"cover\"\r\n                            effect=\"solid\"\r\n                            palce=\"right\"\r\n                            type=\"dark\"\r\n                          />\r\n                          <p>\r\n                            <span>Cover</span>\r\n                          </p>\r\n                        </div>\r\n                        <input\r\n                          id=\"cover\"\r\n                          placeholder=\"cover\"\r\n                          type=\"text\"\r\n                          value={values.cover}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"suggest-review\">\r\n                      <p>\r\n                        Once the character has been accepted to the database you\r\n                        will be able to suggest reviews and stories for them!\r\n                      </p>\r\n                    </div>\r\n\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Suggest Character\r\n                    </button>\r\n                  </form>\r\n                );\r\n              }}\r\n            </Formik>\r\n          ) : (\r\n            \"We are not accepting character suggestions at this moment.\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SuggestCharacter;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-story\\suggest-story.js",["310","311","312","313","314"],"import React from \"react\";\r\nimport \"./suggest-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { Formik } from \"formik\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default function SuggestStory() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    fetch(`https://aroacedb-back.herokuapp.com/stories/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        //setCharacter(resJson.data.character[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Suggest a Story</h3>\r\n          <Formik\r\n            initialValues={{\r\n              story_title: \"\",\r\n              series_or_anthology: \"\",\r\n              genre: \"\",\r\n              story_length: \"\",\r\n              type_of_rep: \"\",\r\n              character_importance: \"\",\r\n              rep_noteswarnings: \"\",\r\n              other_noteswarnings: \"\",\r\n              cover: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              values.character_id = params.id;\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetch(\"https://aroacedb-back.herokuapp.com/suggest/stories\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n              })\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-story-title\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-story-title\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">Story or book title</div>\r\n                          </ReactTooltip>\r\n                          <label>Story title</label>\r\n                        </div>\r\n\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-story-length\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-story-length\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              {\" \"}\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Short story:</strong>The character is\r\n                                  at the heart of the story’s central storyline\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Novella:</strong>The character plays\r\n                                  an important role in the story and is\r\n                                  frequently on page\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Novel (short):</strong>The character\r\n                                  plays a minor role in the story\r\n                                </li>\r\n\r\n                                <li>\r\n                                  <strong>Novel (long):</strong>More than 80,000\r\n                                  words\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Anthology:</strong>Short story is part\r\n                                  of an anthology\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Webseries:</strong>\r\n                                  Published in several installments on the\r\n                                  internet (blog, Wattpad, etc.)\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Story length</label>\r\n                        </div>\r\n                        <span>\r\n                          <input\r\n                            id=\"story_length\"\r\n                            type=\"text\"\r\n                            placeholder=\"Story length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-character-importance\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-character-importance\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Lead:</strong>The character is at the\r\n                                  heart of the story’s central storyline\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Main:</strong>The character plays an\r\n                                  important role in the story and is frequently\r\n                                  on page\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Lead:</strong>The character plays a\r\n                                  minor role in the story\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Character importance</label>\r\n                        </div>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-series\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-series\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              Name of the series (if applicable). Short stories\r\n                              in an anthology can list the anthology name here.\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Series title</label>\r\n                        </div>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-genres\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-genres\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">{`Story's literary genre. List in alphabetical order, i.e. \"Contemporary, Romance, Young Adult\".`}</div>\r\n                          </ReactTooltip>\r\n                          <label>Genres</label>\r\n                        </div>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-type\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-type\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Word of God:</strong>The character’s\r\n                                  sexuality is not explicit on page, but the\r\n                                  author has confirmed it.\r\n                                </li>\r\n                                <li>\r\n                                  <strong>On page:</strong>The character’s\r\n                                  sexuality is explicitly demonstrated within\r\n                                  the text. It should be showed or discussed to\r\n                                  an extent that makes it clear to the readers.\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Word used:</strong>The identity is\r\n                                  stated using the actual word (usually also On\r\n                                  Page)\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Type of Rep</label>\r\n                        </div>\r\n                        <span className=\"to-capitalize\">\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-repnoteswarnings\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-repnoteswarnings\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">\r\n                            Any noteworthy information about the representation,\r\n                            whether it is tropes (exile or dead ace, allo\r\n                            saviour, etc.) or facets of it (sex\r\n                            repulsed/averse/positive, touch averse, etc.).\r\n                          </div>\r\n                        </ReactTooltip>\r\n                        <label>Rep Notes & Warnings</label>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-othernoteswarnings\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-othernoteswarnings\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">\r\n                            Any noteworthy information about the representation,\r\n                            whether it is tropes (exile or dead ace, allo\r\n                            saviour, etc.) or facets of it (sex\r\n                            repulsed/averse/positive, touch averse, etc.)\r\n                          </div>\r\n                        </ReactTooltip>\r\n                        <label>Other Notes & Warnings</label>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-cover\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-cover\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">URL to cover image.</div>\r\n                        </ReactTooltip>\r\n                        <label>Cover</label>\r\n                      </div>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Suggest\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-story\\suggested-story.js",["315","316","317","318","319","320","321","322"],"import React from \"react\";\r\nimport \"./suggested-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport {\r\n  fazerRequisicaoComBody,\r\n  fetchWithToken,\r\n  fetchWithTokenNoBody,\r\n} from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedStory() {\r\n  const [story, setStory] = React.useState({});\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [cover, setCover] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/suggest/stories/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson.data.story[0]);\r\n        setStory(resJson.data.story[0]);\r\n        console.log(resJson.data.story[0].cover);\r\n        setCover(resJson.data.story[0].cover);\r\n        let character_id = resJson.data.story[0].character_id;\r\n        fetch(`https://aroacedb-back.herokuapp.com/characters/${character_id}`)\r\n          .then((res) => res.json())\r\n          .then((resJson) => {\r\n            console.log(resJson);\r\n            setName(resJson.data.character[0].character_name);\r\n          });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Suggested Story</h3>\r\n          <h4>Character: {name}</h4>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              story_title: story.story_title,\r\n              series_or_anthology: story.series_or_anthology,\r\n              genre: story.genre,\r\n              story_length: story.story_length,\r\n              type_of_rep: story.type_of_rep,\r\n              character_importance: story.character_importance,\r\n              rep_noteswarnings: story.rep_noteswarnings,\r\n              other_noteswarnings: story.other_noteswarnings,\r\n              character_id: story.character_id,\r\n              cover: story.cover,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/stories`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/suggest/stories/${story.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <label>Story title</label>\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <label>Story length</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"story_length\"\r\n                            type=\"text\"\r\n                            placeholder=\"Story length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Character importance</label>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <label>Series title</label>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <label>Genres</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Type of Rep</label>\r\n                        <span className=\"to-capitalize\">\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <span>Rep Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Other Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Cover</span>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <img src={values.cover} alt=\"cover\" />\r\n                    <div className=\"buttons\">\r\n                      <button\r\n                        onClick={() => {\r\n                          fetchWithTokenNoBody(\r\n                            `https://aroacedb-back.herokuapp.com/suggest/stories/${story.id}`,\r\n                            \"DELETE\",\r\n                            token\r\n                          )\r\n                            .then((res) => res.json())\r\n                            .then((resJson) => {\r\n                              console.log(resJson);\r\n                              history.push(\"/success\");\r\n                            });\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                      <button\r\n                        type=\"submit\"\r\n                        disabled={isSubmitting}\r\n                        className=\"submit\"\r\n                      >\r\n                        Add Story to Database\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-stories\\suggested-stories.js",["323"],"import \"./suggested-stories.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Table from \"../../components/table-character/table\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableStory from \"../../components/table-story/table\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedStories() {\r\n  const [stories, setStories] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/suggest/stories\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        const data = resJson.data.paginated_stories;\r\n        console.log(data);\r\n        setStories(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"SuggestedCharacters\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggested-container\">\r\n        <div className=\"title\">\r\n          <h2>Suggested Stories</h2>\r\n        </div>\r\n        <div className=\"table-container\">\r\n          <TableStory content={stories} type=\"suggest\" id=\"story\" />\r\n        </div>\r\n\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-story\\update-story.js",["324","325","326","327","328","329"],"import React from \"react\";\r\nimport \"./update-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function UpdateStory() {\r\n  const [story, setStory] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n    fetch(`https://aroacedb-back.herokuapp.com/stories/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson.data.story[0]);\r\n\r\n        setStory(resJson.data.story[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Update Story</h3>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              story_title: story.story_title,\r\n              series_or_anthology: story.series_or_anthology,\r\n              genre: story.genre,\r\n              story_length: story.story_length,\r\n              type_of_rep: story.type_of_rep,\r\n              character_importance: story.character_importance,\r\n              rep_noteswarnings: story.rep_noteswarnings,\r\n              other_noteswarnings: story.other_noteswarnings,\r\n              cover: story.cover,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/stories/${story.id}`,\r\n                \"PUT\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <label>Story title</label>\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <label>Story length</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"story_length\"\r\n                            type=\"text\"\r\n                            placeholder=\"Story length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Character importance</label>\r\n                        <input\r\n                          id=\"chracter_importance\"\r\n                          type=\"text\"\r\n                          placeholder=\"Character importance\"\r\n                          value={values.character_importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <label>Series title</label>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <label>Genres</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Type of Rep</label>\r\n                        <span className=\"to-capitalize\">\r\n                          <input\r\n                            id=\"type_of_rep\"\r\n                            type=\"text\"\r\n                            placeholder=\"type of rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <span>Rep Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Other Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Cover</span>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Update\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-story\\add-story.js",["330","331","332"],"import React from \"react\";\r\nimport \"./add-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default function AddStory() {\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n\r\n    fetch(`https://aroacedb-back.herokuapp.com/characters/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setName(resJson.data.character[0].character_name);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Add Story</h3>\r\n          <h4>Character: {name}</h4>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              story_title: \"\",\r\n              series_or_anthology: \"\",\r\n              genre: \"\",\r\n              story_length: \"\",\r\n              type_of_rep: \"\",\r\n              character_importance: \"\",\r\n              rep_noteswarnings: \"\",\r\n              other_noteswarnings: \"\",\r\n              character_id: params.id,\r\n              cover: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/stories`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(`/add-review/${params.id}`);\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-story-title\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-story-title\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">Story or book title</div>\r\n                          </ReactTooltip>\r\n                          <label>Story title</label>\r\n                        </div>\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-story-length\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-story-length\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              {\" \"}\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Short story:</strong>The character is\r\n                                  at the heart of the story’s central storyline\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Novella:</strong>The character plays\r\n                                  an important role in the story and is\r\n                                  frequently on page\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Novel (short):</strong>The character\r\n                                  plays a minor role in the story\r\n                                </li>\r\n\r\n                                <li>\r\n                                  <strong>Novel (long):</strong>More than 80,000\r\n                                  words\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Anthology:</strong>Short story is part\r\n                                  of an anthology\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Webseries:</strong>\r\n                                  Published in several installments on the\r\n                                  internet (blog, Wattpad, etc.)\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Story length</label>\r\n                        </div>\r\n                        <span>\r\n                          <input\r\n                            id=\"story_length\"\r\n                            type=\"text\"\r\n                            placeholder=\"Story length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-character-importance\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-character-importance\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Lead:</strong>The character is at the\r\n                                  heart of the story’s central storyline\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Main:</strong>The character plays an\r\n                                  important role in the story and is frequently\r\n                                  on page\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Lead:</strong>The character plays a\r\n                                  minor role in the story\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Character importance</label>\r\n                        </div>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-series\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-series\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              Name of the series (if applicable). Short stories\r\n                              in an anthology can list the anthology name here.\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Series title</label>\r\n                        </div>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-genres\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-genres\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">{`Story's literary genre. List in alphabetical order, i.e. \"Contemporary, Romance, Young Adult\".`}</div>\r\n                          </ReactTooltip>\r\n                          <label>Genres</label>\r\n                        </div>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-type\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-type\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Word of God:</strong>The character’s\r\n                                  sexuality is not explicit on page, but the\r\n                                  author has confirmed it.\r\n                                </li>\r\n                                <li>\r\n                                  <strong>On page:</strong>The character’s\r\n                                  sexuality is explicitly demonstrated within\r\n                                  the text. It should be showed or discussed to\r\n                                  an extent that makes it clear to the readers.\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Word used:</strong>The identity is\r\n                                  stated using the actual word (usually also On\r\n                                  Page)\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Type of Rep</label>\r\n                        </div>\r\n                        <span className=\"to-capitalize\">\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-repnoteswarnings\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-repnoteswarnings\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">\r\n                            Any noteworthy information about the representation,\r\n                            whether it is tropes (exile or dead ace, allo\r\n                            saviour, etc.) or facets of it (sex\r\n                            repulsed/averse/positive, touch averse, etc.).\r\n                          </div>\r\n                        </ReactTooltip>\r\n                        <label>Rep Notes & Warnings</label>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-othernoteswarnings\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-othernoteswarnings\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">\r\n                            Any noteworthy information about the representation,\r\n                            whether it is tropes (exile or dead ace, allo\r\n                            saviour, etc.) or facets of it (sex\r\n                            repulsed/averse/positive, touch averse, etc.)\r\n                          </div>\r\n                        </ReactTooltip>\r\n                        <label>Other Notes & Warnings</label>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-cover\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-cover\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">URL to cover image.</div>\r\n                        </ReactTooltip>\r\n                        <label>Cover</label>\r\n                      </div>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Add Story to Database\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\character\\character.js",["333"],"import React from \"react\";\r\nimport \"./character.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Stories from \"../../components/stories/stories\";\r\nimport Reviews from \"../../components/reviews/reviews\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SingleCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const [stories, setStories] = React.useState([]);\r\n  const [reviews, setReviews] = React.useState([]);\r\n  const { params } = useRouteMatch();\r\n\r\n  React.useEffect(() => {\r\n    fetch(`https://aroacedb-back.herokuapp.com/characters/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson.data.character[0]);\r\n        setCharacter(resJson.data.character[0]);\r\n        console.log(character);\r\n        console.log(\"params\", params.id);\r\n      });\r\n\r\n    fetch(`https://aroacedb-back.herokuapp.com/stories/character/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const possibleStories = resJson.data.stories;\r\n        if (possibleStories.length !== 0) {\r\n          console.log(possibleStories);\r\n          setStories(possibleStories);\r\n        }\r\n      });\r\n\r\n    fetch(`https://aroacedb-back.herokuapp.com/reviews/character/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        const possibleReviews = resJson.data.reviews;\r\n        console.log(resJson);\r\n        if (possibleReviews.length !== 0) {\r\n          console.log(possibleReviews);\r\n          setReviews(possibleReviews);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Character\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"character-container\">\r\n        <CharacterInfo character={character} />\r\n        {console.log(params.id)}\r\n        <Stories stories={stories} character_id={params.id} />\r\n        <Reviews reviews={reviews} character_id={params.id} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\utils\\fetch.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\sidebar\\sidebar.js",["334","335","336"],"import React from \"react\";\r\nimport \"./sidebar.css\";\r\nimport { ReactComponent as HomeIcon } from \"../../assets/home-solid.svg\";\r\nimport { ReactComponent as DatabaseIcon } from \"../../assets/database-solid.svg\";\r\nimport { ReactComponent as FeatherIcon } from \"../../assets/feather-solid.svg\";\r\nimport { ReactComponent as BookmarkIcon } from \"../../assets/bookmark-solid.svg\";\r\nimport { ReactComponent as LoginIcon } from \"../../assets/user-cog-solid.svg\";\r\n\r\nexport default function Sidebar() {\r\n  const [token, setToken] = React.useState(\"\");\r\n\r\n  const [characterCheck, setCharacterCheck] = React.useState(\"\");\r\n  const [storyCheck, setStoryCheck] = React.useState(\"\");\r\n  const [reviewCheck, setReviewCheck] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n\r\n    fetch(\"https://aroacedb-back.herokuapp.com/permissions\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setCharacterCheck(resJson.data.character.checked);\r\n        setStoryCheck(resJson.data.story.checked);\r\n        setReviewCheck(resJson.data.review.checked);\r\n      });\r\n  }, [characterCheck]);\r\n  return (\r\n    <div className=\"SidebarAdmin\">\r\n      <div className=\"sidebar-container\">\r\n        <div className=\"icons\"></div>\r\n        <div className=\"sidebar-content\"></div>\r\n        <div className=\"sidebar-true-content\">\r\n          <div className=\"top\">\r\n            <div className=\"title-container\">\r\n              <h1>The Aroace Database</h1>\r\n            </div>\r\n            <div className=\"link-container\">\r\n              <a href=\"/\">\r\n                <HomeIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>Home</span>\r\n              </a>\r\n            </div>\r\n            {token ? (\r\n              <div className=\"link-container\">\r\n                <a href=\"/dashboard\">\r\n                  <BookmarkIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                  <span>Dashboard</span>\r\n                </a>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"link-container\">\r\n              <a href=\"/about\">\r\n                <DatabaseIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>About the database</span>\r\n              </a>\r\n            </div>\r\n            <div className=\"link-container\">\r\n              <a href=\"/about-the-team\">\r\n                <DatabaseIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>About the team</span>\r\n              </a>\r\n            </div>\r\n            <div className=\"link-container\">\r\n              <a href=\"/all-characters\">\r\n                <DatabaseIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>All characters</span>\r\n              </a>\r\n            </div>\r\n            {characterCheck ? (\r\n              <div className=\"link-container\">\r\n                <a href=\"/suggest-character\">\r\n                  <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                  <span>Suggest a character</span>\r\n                </a>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            {token ? (\r\n              <div className=\"div-container\">\r\n                <div className=\"link-container\">\r\n                  <a href=\"/suggested-characters\">\r\n                    <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                    <span>Suggested characters</span>\r\n                  </a>\r\n                </div>\r\n\r\n                <div className=\"link-container\">\r\n                  <a href=\"/suggested-stories\">\r\n                    <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                    <span>Suggested stories</span>\r\n                  </a>\r\n                </div>\r\n\r\n                <div className=\"link-container\">\r\n                  <a href=\"/sc-suggested-stories\">\r\n                    <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                    <span>SC Suggested stories</span>\r\n                  </a>\r\n                </div>\r\n\r\n                <div className=\"link-container\">\r\n                  <a href=\"/suggested-reviews\">\r\n                    <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                    <span>Suggested reviews</span>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          {token ? (\r\n            <div className=\"link-container\">\r\n              <a\r\n                href=\"/\"\r\n                onClick={() => {\r\n                  localStorage.removeItem(\"token\");\r\n                }}\r\n              >\r\n                <LoginIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>Logout</span>\r\n              </a>\r\n            </div>\r\n          ) : (\r\n            <div className=\"link-container\">\r\n              <a href=\"/login\">\r\n                <LoginIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>Admin Login</span>\r\n              </a>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\mobile-header\\mobile-header.js",["337"],"import React from \"react\";\r\nimport \"./mobile-header.css\";\r\nimport { ReactComponent as Bars } from \"../../assets/bars-solid.svg\";\r\nimport { ReactComponent as Close } from \"../../assets/times-solid.svg\";\r\n\r\nfunction MobileHeader() {\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [display, setDisplay] = React.useState(\"menu-container none-display\");\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"Mobile\">\r\n      <header>\r\n        <h1>The Aro Ace Database</h1>\r\n        <Bars\r\n          fill=\"white\"\r\n          height=\"30px\"\r\n          width=\"30px\"\r\n          onClick={() => {\r\n            setDisplay(\"menu-container block-display\");\r\n          }}\r\n        />\r\n      </header>\r\n      <div className={display}>\r\n        <Close\r\n          fill=\"white\"\r\n          height=\"30px\"\r\n          width=\"30px\"\r\n          onClick={() => {\r\n            setDisplay(\"menu-container none-display\");\r\n          }}\r\n        />\r\n        <div className=\"links\">\r\n          <a href=\"/\">Home</a>\r\n          {token ? <a href=\"/dashboard\">Dashboard</a> : \"\"}\r\n          <a href=\"/about\">About</a>\r\n          <a href=\"/suggest-character\">Suggest a character</a>\r\n\r\n          {token ? (\r\n            <div className=\"more-links\">\r\n              <a href=\"/all-characters\">All characters</a>\r\n              <a href=\"/suggested-characters\">Suggested characters</a>\r\n              <a href=\"/suggested-stories\">Suggested stories</a>\r\n              <a href=\"/suggested-reviews\">Suggested Reviews</a>\r\n              <a\r\n                href=\"/\"\r\n                onClick={() => {\r\n                  localStorage.removeItem(\"token\");\r\n                }}\r\n              >\r\n                Logout\r\n              </a>\r\n            </div>\r\n          ) : (\r\n            <a href=\"/login\">Login Admin</a>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MobileHeader;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\single-character\\single-character.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\stats\\stats.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-character\\table.js",["338","339","340"],"import RowCharacter from \"../row-character/row\";\r\nimport Row from \"../row-review/row\";\r\nimport RowReview from \"../row-review/row\";\r\nimport RowStory from \"../row-story/row\";\r\nimport \"./table.css\";\r\n\r\nfunction TableCharacter(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        {id === \"character\" ? (\r\n          <tr>\r\n            <th>Character Name</th>\r\n            <th>Genre</th>\r\n            <th>Importance</th>\r\n            <th>More</th>\r\n          </tr>\r\n        ) : id === \"story\" ? (\r\n          <tr>\r\n            <th>Story Title</th>\r\n            <th>Author</th>\r\n          </tr>\r\n        ) : (\r\n          <tr>\r\n            <th>Review for</th>\r\n            <th>Reviewer</th>\r\n          </tr>\r\n        )}\r\n      </thead>\r\n\r\n      <tbody>\r\n        {content.map((c) => {\r\n          return <RowCharacter content={c} type={type} id={id} />;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TableCharacter;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\pagination\\pagination.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\recent-suggested\\recent-suggested.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\story-info\\story-info.js",["341"],"import \"./story-info.css\";\r\nimport React from \"react\";\r\nimport { fetchWithTokenNoBody } from \"../../utils/fetch\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function StoryInfo(props) {\r\n  const { story } = props;\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"StoryInfo\">\r\n      {story.cover ? (\r\n        <img src={story.cover} alt=\"cover\" />\r\n      ) : (\r\n        <img\r\n          src=\"https://www.globaluniversityalliance.org/wp-content/uploads/2017/10/No-Cover-Image-01.png\"\r\n          alt=\"cover\"\r\n        />\r\n      )}\r\n\r\n      <div className=\"story-container\">\r\n        <div className=\"line\">\r\n          <h4>{story.story_title}</h4>\r\n          <span>\r\n            <span>{story.story_length}</span>\r\n          </span>\r\n        </div>\r\n        <div className=\"line\">\r\n          {story.series_or_anthology === null ? (\r\n            \"No series/anthology\"\r\n          ) : (\r\n            <span>\r\n              in the <span>{story.series_or_anthology} </span>series\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"line\">\r\n          <span>\r\n            <span>{story.genre}</span>\r\n          </span>\r\n          <span>\r\n            <span className=\"to-capitalize\">{story.type_of_rep} Rep</span>\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"line\">\r\n          <span>\r\n            {story.character_importance === null ? (\r\n              \"No info on character importance\"\r\n            ) : (\r\n              <span>{story.character_importance} Character</span>\r\n            )}\r\n          </span>\r\n        </div>\r\n        <p>\r\n          <span>Rep Notes & Warnings</span>\r\n          {story.rep_noteswarnings === null\r\n            ? \"No rep notes or warnings.\"\r\n            : story.rep_noteswarnings}\r\n        </p>\r\n        <p>\r\n          <span>Other Notes & Warnings</span>\r\n          {story.other_noteswarnings === null\r\n            ? \"No other notes or warnings.\"\r\n            : story.other_noteswarnings}\r\n        </p>\r\n        {token ? (\r\n          <div className=\"buttons-story\">\r\n            <button\r\n              onClick={() => {\r\n                fetchWithTokenNoBody(\r\n                  `https://aroacedb-back.herokuapp.com/stories/${story.id}`,\r\n                  \"DELETE\",\r\n                  token\r\n                )\r\n                  .then((res) => res.json())\r\n                  .then((resJson) => {\r\n                    console.log(resJson);\r\n                    window.location.reload();\r\n                  });\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                history.push(\"/update-story/\" + story.id);\r\n              }}\r\n            >\r\n              Update\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\character-info\\character-info.js",["342"],"import \"./character-info.css\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchWithTokenNoBody } from \"../../utils/fetch\";\r\n\r\nexport default function CharacterInfo(props) {\r\n  const { character } = props;\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"CharacterInfo\">\r\n      <h2>{character.character_name}</h2>\r\n      <div className=\"line\">\r\n        <div className=\"chunk\">\r\n          <span>Author</span>\r\n          {character.author}\r\n        </div>\r\n        <div className=\"chunk\">\r\n          <span>Gender</span> {character.gender}\r\n        </div>\r\n        <div className=\"chunk\">\r\n          <span>Pairing</span>\r\n          {character.pairing_qpp_or_romantic == null\r\n            ? \"Not informed/applicable.\"\r\n            : character.pairing_qpp_or_romantic}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"line\">\r\n        <div className=\"chunk\">\r\n          <span>Series</span>{\" \"}\r\n          {character.main_storyseries == null\r\n            ? \"Not informed or not applicable.\"\r\n            : character.main_storyseries}\r\n        </div>\r\n        <div className=\"chunk\">\r\n          <span>Type of Rep</span> {character.type_of_rep}\r\n        </div>\r\n\r\n        <div className=\"chunk\">\r\n          <span>Importance</span> {character.importance}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"line\">\r\n        <div className=\"chunk\">\r\n          <span>Romantic orientation</span>{\" \"}\r\n          {character.romantic_orientation == null\r\n            ? \"Not informed.\"\r\n            : character.romantic_orientation}\r\n        </div>\r\n        <div className=\"chunk\">\r\n          <span>Sexual Orientation</span>{\" \"}\r\n          {character.sexual_orientation == null\r\n            ? \"Not informed.\"\r\n            : character.sexual_orientation}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"line\">\r\n        <div className=\"chunk\">\r\n          <span>Genre</span> {character.genre}\r\n        </div>\r\n      </div>\r\n\r\n      <div clasName=\"square\">\r\n        <p>\r\n          <span>Relationships</span>\r\n          {character.relationships == null\r\n            ? \"Not informed.\"\r\n            : character.relationships}\r\n        </p>\r\n      </div>\r\n\r\n      <div clasName=\"square\">\r\n        <p>\r\n          <span>Notes & Warnings</span>\r\n          {character.rep_noteswarnings == null\r\n            ? \"No warnings.\"\r\n            : character.rep_noteswarnings}\r\n        </p>\r\n      </div>\r\n      {token ? (\r\n        <div className=\"buttons-character\">\r\n          <button\r\n            onClick={() => {\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/characters/${character.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/stories/character/${character.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/reviews/character/${character.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              history.push(\"/update-character/\" + character.id);\r\n            }}\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\stories\\stories.js",["343","344","345","346"],"import \"./stories.css\";\r\nimport React from \"react\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Stories(props) {\r\n  const { stories, character_id } = props;\r\n  const history = useHistory();\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [characterCheck, setCharacterCheck] = React.useState(\"\");\r\n  const [storyCheck, setStoryCheck] = React.useState(\"\");\r\n  const [reviewCheck, setReviewCheck] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n    fetch(\"https://aroacedb-back.herokuapp.com/permissions\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setCharacterCheck(resJson.data.character.checked);\r\n        setStoryCheck(resJson.data.story.checked);\r\n        setReviewCheck(resJson.data.review.checked);\r\n      });\r\n  }, []);\r\n\r\n  const showButtons = () => {\r\n    if (token) {\r\n      return <a href={`/add-story/${character_id}`}>Add Story</a>;\r\n    } else {\r\n      if (storyCheck) {\r\n        console.log(\"aaaaa\");\r\n        return <a href={`/suggest-story/${character_id}`}>Suggest Story</a>;\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Stories\">\r\n      <h3>Stories</h3>\r\n      {stories.map((story) => {\r\n        return <StoryInfo story={story} />;\r\n      })}\r\n      {showButtons()}\r\n      {/* {token ? (\r\n        <a href={`/add-story/${character_id}`}>Add Story</a>\r\n      ) : (\r\n        <a href={`/suggest-story/${character_id}`}>Suggest Story</a>\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\reviews\\reviews.js",["347","348","349"],"import \"./reviews.css\";\r\nimport React from \"react\";\r\nimport ReviewInfo from \"../../components/review-info/review-info\";\r\n\r\nexport default function Reviews(props) {\r\n  const { reviews, character_id } = props;\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [characterCheck, setCharacterCheck] = React.useState(\"\");\r\n  const [storyCheck, setStoryCheck] = React.useState(\"\");\r\n  const [reviewCheck, setReviewCheck] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n\r\n    fetch(\"https://aroacedb-back.herokuapp.com/permissions\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setCharacterCheck(resJson.data.character.checked);\r\n        setStoryCheck(resJson.data.story.checked);\r\n        setReviewCheck(resJson.data.review.checked);\r\n      });\r\n  });\r\n\r\n  const showButtons = () => {\r\n    if (token) {\r\n      return <a href={`/add-review/${character_id}`}>Add Review</a>;\r\n    } else {\r\n      if (reviewCheck) {\r\n        return <a href={`/suggest-review/${character_id}`}>Suggest Review</a>;\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Reviews\">\r\n      <h3>Reviews</h3>\r\n      {reviews.length !== 0\r\n        ? reviews.map((review) => {\r\n            return <ReviewInfo review={review} />;\r\n          })\r\n        : \"No reviews available.\"}\r\n\r\n      {showButtons()}\r\n      {/* {token ? (\r\n        <a href={`/add-review/${character_id}`}>Add Review</a>\r\n      ) : (\r\n        <a href={`/suggest-review/${character_id}`}>Suggest Review</a>\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-story\\table.js",["350","351","352"],"import RowCharacter from \"../row-review/row\";\r\nimport Row from \"../row-review/row\";\r\nimport RowReview from \"../row-review/row\";\r\nimport RowStory from \"../row-story/row\";\r\nimport \"./table.css\";\r\n\r\nfunction TableStory(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        {id === \"character\" ? (\r\n          <tr>\r\n            <th>Character Name</th>\r\n            <th>Author</th>\r\n            <th>Importance</th>\r\n            <th>Romantic Orientation</th>\r\n            <th>Sexual Orientation</th>\r\n            <th>More</th>\r\n          </tr>\r\n        ) : id === \"story\" ? (\r\n          <tr>\r\n            <th>Story Title</th>\r\n            <th>Author</th>\r\n          </tr>\r\n        ) : (\r\n          <tr>\r\n            <th>Review for</th>\r\n            <th>Reviewer</th>\r\n          </tr>\r\n        )}\r\n      </thead>\r\n\r\n      <tbody>\r\n        {content.map((c) => {\r\n          return <RowStory content={c} type={type} id={id} />;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TableStory;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-review\\table.js",["353","354","355"],"import RowCharacter from \"../row-review/row\";\r\nimport Row from \"../row-review/row\";\r\nimport RowReview from \"../row-review/row\";\r\nimport RowStory from \"../row-story/row\";\r\nimport \"./table.css\";\r\n\r\nfunction TableReview(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        {id === \"character\" ? (\r\n          <tr>\r\n            <th>Character Name</th>\r\n            <th>Author</th>\r\n            <th>Importance</th>\r\n            <th>Romantic Orientation</th>\r\n            <th>Sexual Orientation</th>\r\n            <th>More</th>\r\n          </tr>\r\n        ) : id === \"story\" ? (\r\n          <tr>\r\n            <th>Story Title</th>\r\n            <th>Author</th>\r\n          </tr>\r\n        ) : (\r\n          <tr>\r\n            <th>Review for</th>\r\n            <th>Reviewer</th>\r\n          </tr>\r\n        )}\r\n      </thead>\r\n\r\n      <tbody>\r\n        {content.map((c) => {\r\n          return <RowReview content={c} type={type} id={id} />;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TableReview;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-story\\row.js",["356","357"],"import \"./row.css\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\n\r\nexport default function RowStory(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <tr className=\"tbody\">\r\n      <td>{content.story_title}</td>\r\n      <td>{content.author}</td>\r\n      <td>\r\n        <a href={`/suggested-story/${content.id}`}>\r\n          <img src={ExternalLink} alt=\"profile link\" />\r\n        </a>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-review\\row.js",["358","359"],"import \"./row.css\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\n\r\nexport default function RowReview(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <tr className=\"tbody\">\r\n      <td>{content.review_for}</td>\r\n      <td>{content.reviewer}</td>\r\n      <td>\r\n        <a href={`/suggested-review/${content.id}`}>\r\n          <img src={ExternalLink} alt=\"profile link\" />\r\n        </a>\r\n      </td>\r\n    </tr>\r\n\r\n    //   ) : (\r\n    //     <tr class=\"tbody\">\r\n    //       <td>{content.review_for}</td>\r\n    //       <td>{content.reviewer}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-review/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </tr>\r\n    //   )}\r\n\r\n    // <tr class=\"tbody\">\r\n    //   {id === \"character\" ? (\r\n    //     <div>\r\n    //   <td>{content.character_name}</td>\r\n    //   <td>{content.author}</td>\r\n    //   <td>{content.importance}</td>\r\n    //   <td>{content.romantic_orientation}</td>\r\n    //   <td>{content.sexual_orientation}</td>\r\n    //   <td>\r\n    //     {type === \"regular\" ? (\r\n    //       <a href={`/character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     ) : (\r\n    //       <a href={`/suggested-character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     )}\r\n    //   </td>\r\n    //     </div>\r\n    //   ) : id === \"story\" ? (\r\n    //     <div>\r\n    //       <td>{content.story_title}</td>\r\n    //       <td>{content.author}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-story/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   ) : (\r\n    //     <div>\r\n    //       <td>{content.review_for}</td>\r\n    //       <td>{content.reviewer}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-review/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   )}\r\n    // </tr>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-character\\row.js",["360"],"import \"./row.css\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\n\r\nexport default function RowCharacter(props) {\r\n  const { content, type, id } = props;\r\n  return (\r\n    <tr className=\"tbody\">\r\n      <td>{content.character_name}</td>\r\n      <td>{content.genre}</td>\r\n      <td>{content.importance}</td>\r\n      <td>\r\n        {type === \"regular\" ? (\r\n          <a href={`/character/${content.id}`}>\r\n            <img src={ExternalLink} alt=\"profile link\" />\r\n          </a>\r\n        ) : (\r\n          <a href={`/suggested-character/${content.id}`}>\r\n            <img src={ExternalLink} alt=\"profile link\" />\r\n          </a>\r\n        )}\r\n      </td>\r\n    </tr>\r\n\r\n    // <tr class=\"tbody\">\r\n    //   {id === \"character\" ? (\r\n    //     <div>\r\n    //   <td>{content.character_name}</td>\r\n    //   <td>{content.author}</td>\r\n    //   <td>{content.importance}</td>\r\n    //   <td>{content.romantic_orientation}</td>\r\n    //   <td>{content.sexual_orientation}</td>\r\n    //   <td>\r\n    //     {type === \"regular\" ? (\r\n    //       <a href={`/character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     ) : (\r\n    //       <a href={`/suggested-character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     )}\r\n    //   </td>\r\n    //     </div>\r\n    //   ) : id === \"story\" ? (\r\n    //     <div>\r\n    //       <td>{content.story_title}</td>\r\n    //       <td>{content.author}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-story/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   ) : (\r\n    //     <div>\r\n    //       <td>{content.review_for}</td>\r\n    //       <td>{content.reviewer}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-review/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   )}\r\n    // </tr>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\review-info\\review-info.js",["361","362","363"],"import \"./review-info.css\";\r\nimport React, { Component } from \"react\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchWithTokenNoBody } from \"../../utils/fetch\";\r\nimport SuggestReview from \"../../pages/suggest-review/suggest-review\";\r\n\r\nexport default function ReviewInfo(props) {\r\n  const { review } = props;\r\n  const history = useHistory();\r\n  const [token, setToken] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"ReviewInfo\">\r\n      <div className=\"container\">\r\n        <div className=\"content\">\r\n          <h4>{review.review_for}</h4>\r\n          <span>\r\n            by {review.reviewer} | Ownvoices for {review.ownvoice_for}.\r\n          </span>\r\n        </div>\r\n\r\n        <a href={review.link}>\r\n          <img src={ExternalLink} alt=\"link para resenha em site externo\" />\r\n        </a>\r\n      </div>\r\n      {token ? (\r\n        <div className=\"buttons-review\">\r\n          <button\r\n            onClick={() => {\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/reviews/${review.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n\r\n                  window.location.reload();\r\n                });\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              history.push(\"/update-review/\" + review.id);\r\n            }}\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\about-team\\about.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-story-sc\\suggest-story.js",["364","365"],"import React from \"react\";\r\nimport \"./suggest-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { Formik } from \"formik\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default function SuggestStorySC() {\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Suggest a Story</h3>\r\n          <Formik\r\n            initialValues={{\r\n              story_title: \"\",\r\n              series_or_anthology: \"\",\r\n              genre: \"\",\r\n              story_length: \"\",\r\n              type_of_rep: \"\",\r\n              character_importance: \"\",\r\n              rep_noteswarnings: \"\",\r\n              other_noteswarnings: \"\",\r\n              cover: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              values.character_id = params.id;\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetch(\"https://aroacedb-back.herokuapp.com/suggest/sc/stories\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n              })\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(`/success-stsc/${params.id}`);\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-story-title\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-story-title\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">Story or book title</div>\r\n                          </ReactTooltip>\r\n                          <label>Story title</label>\r\n                        </div>\r\n\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-story-length\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-story-length\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              {\" \"}\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Short story:</strong>The character is\r\n                                  at the heart of the story’s central storyline\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Novella:</strong>The character plays\r\n                                  an important role in the story and is\r\n                                  frequently on page\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Novel (short):</strong>The character\r\n                                  plays a minor role in the story\r\n                                </li>\r\n\r\n                                <li>\r\n                                  <strong>Novel (long):</strong>More than 80,000\r\n                                  words\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Anthology:</strong>Short story is part\r\n                                  of an anthology\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Webseries:</strong>\r\n                                  Published in several installments on the\r\n                                  internet (blog, Wattpad, etc.)\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Story length</label>\r\n                        </div>\r\n                        <span>\r\n                          <input\r\n                            id=\"story_length\"\r\n                            type=\"text\"\r\n                            placeholder=\"Story length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-character-importance\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-character-importance\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Lead:</strong>The character is at the\r\n                                  heart of the story’s central storyline\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Main:</strong>The character plays an\r\n                                  important role in the story and is frequently\r\n                                  on page\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Lead:</strong>The character plays a\r\n                                  minor role in the story\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Character importance</label>\r\n                        </div>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-series\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-series\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              Name of the series (if applicable). Short stories\r\n                              in an anthology can list the anthology name here.\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Series title</label>\r\n                        </div>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-genres\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-genres\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">{`Story's literary genre. List in alphabetical order, i.e. \"Contemporary, Romance, Young Adult\".`}</div>\r\n                          </ReactTooltip>\r\n                          <label>Genres</label>\r\n                        </div>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-type\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-type\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Word of God:</strong>The character’s\r\n                                  sexuality is not explicit on page, but the\r\n                                  author has confirmed it.\r\n                                </li>\r\n                                <li>\r\n                                  <strong>On page:</strong>The character’s\r\n                                  sexuality is explicitly demonstrated within\r\n                                  the text. It should be showed or discussed to\r\n                                  an extent that makes it clear to the readers.\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Word used:</strong>The identity is\r\n                                  stated using the actual word (usually also On\r\n                                  Page)\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Type of Rep</label>\r\n                        </div>\r\n                        <span className=\"to-capitalize\">\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-repnoteswarnings\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-repnoteswarnings\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">\r\n                            Any noteworthy information about the representation,\r\n                            whether it is tropes (exile or dead ace, allo\r\n                            saviour, etc.) or facets of it (sex\r\n                            repulsed/averse/positive, touch averse, etc.).\r\n                          </div>\r\n                        </ReactTooltip>\r\n                        <label>Rep Notes & Warnings</label>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-othernoteswarnings\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-othernoteswarnings\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">\r\n                            Any noteworthy information about the representation,\r\n                            whether it is tropes (exile or dead ace, allo\r\n                            saviour, etc.) or facets of it (sex\r\n                            repulsed/averse/positive, touch averse, etc.)\r\n                          </div>\r\n                        </ReactTooltip>\r\n                        <label>Other Notes & Warnings</label>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-cover\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-cover\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">URL to cover image.</div>\r\n                        </ReactTooltip>\r\n                        <label>Cover</label>\r\n                      </div>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Suggest\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success-st-sc\\success.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\sc-suggested-stories\\suggested-stories.js",["366"],"import \"./suggested-stories.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableStory from \"../../components/table-story/table\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport TableSCStory from \"../../components/table-sc-story/table\";\r\n\r\nexport default function SuggestedStoriesSC() {\r\n  const [stories, setStories] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/suggest/sc/stories\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        const data = resJson.data.paginated_stories;\r\n        console.log(data);\r\n        setStories(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"SuggestedCharacters\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggested-container\">\r\n        <div className=\"title\">\r\n          <h2>Suggested Stories</h2>\r\n        </div>\r\n        <div className=\"table-container\">\r\n          <TableSCStory content={stories} type=\"suggest\" id=\"story\" />\r\n        </div>\r\n\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\sc-suggested-story\\suggested-story.js",["367","368","369","370"],"import React from \"react\";\r\nimport \"./suggested-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithToken, fetchWithTokenNoBody } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SCSuggestedStory() {\r\n  const [story, setStory] = React.useState({});\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const [cover, setCover] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/suggest/sc/stories/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson.data.story[0]);\r\n\r\n        setStory(resJson.data.story[0]);\r\n        console.log(resJson.data.story[0].cover);\r\n        setCover(resJson.data.story[0].cover);\r\n        let character_id = resJson.data.story[0].character_id;\r\n        fetch(\r\n          `https://aroacedb-back.herokuapp.com/suggest/characters/${character_id}`\r\n        )\r\n          .then((res) => res.json())\r\n          .then((resJson) => {\r\n            console.log(resJson);\r\n            setName(resJson.data.character[0].character_name);\r\n          });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Suggested Story</h3>\r\n          <h4>Character: {name}</h4>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              story_title: story.story_title,\r\n              series_or_anthology: story.series_or_anthology,\r\n              genre: story.genre,\r\n              story_length: story.story_length,\r\n              type_of_rep: story.type_of_rep,\r\n              character_importance: story.character_importance,\r\n              rep_noteswarnings: story.rep_noteswarnings,\r\n              other_noteswarnings: story.other_noteswarnings,\r\n              character_id: story.character_id,\r\n              cover: story.cover,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/stories`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/suggest/sc/stories/${story.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <label>Story title</label>\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <label>Story length</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"story_length\"\r\n                            type=\"text\"\r\n                            placeholder=\"Story length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Character importance</label>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <label>Series title</label>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <label>Genres</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Type of Rep</label>\r\n                        <span className=\"to-capitalize\">\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <span>Rep Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Other Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Cover</span>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <img src={values.cover} alt=\"cover\" />\r\n                    <div className=\"buttons\">\r\n                      <button\r\n                        onClick={() => {\r\n                          fetchWithTokenNoBody(\r\n                            `https://aroacedb-back.herokuapp.com/suggest/stories/${story.id}`,\r\n                            \"DELETE\",\r\n                            token\r\n                          )\r\n                            .then((res) => res.json())\r\n                            .then((resJson) => {\r\n                              console.log(resJson);\r\n                              history.push(\"/success\");\r\n                            });\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                      <button\r\n                        type=\"submit\"\r\n                        disabled={isSubmitting}\r\n                        className=\"submit\"\r\n                      >\r\n                        Add Story to Database\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-sc-story\\table.js",["371","372","373","374"],"import RowCharacter from \"../row-review/row\";\r\nimport Row from \"../row-review/row\";\r\nimport RowReview from \"../row-review/row\";\r\nimport RowStory from \"../row-story/row\";\r\nimport RowSCStory from \"../row-sc-story/row\";\r\nimport \"./table.css\";\r\n\r\nfunction TableSCStory(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        {id === \"character\" ? (\r\n          <tr>\r\n            <th>Character Name</th>\r\n            <th>Author</th>\r\n            <th>Importance</th>\r\n            <th>Romantic Orientation</th>\r\n            <th>Sexual Orientation</th>\r\n            <th>More</th>\r\n          </tr>\r\n        ) : id === \"story\" ? (\r\n          <tr>\r\n            <th>Story Title</th>\r\n            <th>Author</th>\r\n          </tr>\r\n        ) : (\r\n          <tr>\r\n            <th>Review for</th>\r\n            <th>Reviewer</th>\r\n          </tr>\r\n        )}\r\n      </thead>\r\n\r\n      <tbody>\r\n        {content.map((c) => {\r\n          return <RowSCStory content={c} type={type} id={id} />;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TableSCStory;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-sc-story\\row.js",["375","376"],"import \"./row.css\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\n\r\nexport default function RowSCStory(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <tr className=\"tbody\">\r\n      <td>{content.story_title}</td>\r\n      <td>{content.author}</td>\r\n      <td>\r\n        <a href={`/sc-suggested-story/${content.id}`}>\r\n          <img src={ExternalLink} alt=\"profile link\" />\r\n        </a>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n",["377","378"],{"ruleId":"379","replacedBy":"380"},{"ruleId":"381","replacedBy":"382"},{"ruleId":"383","severity":1,"message":"384","line":10,"column":10,"nodeType":"385","messageId":"386","endLine":10,"endColumn":17},{"ruleId":"383","severity":1,"message":"387","line":10,"column":19,"nodeType":"385","messageId":"386","endLine":10,"endColumn":29},{"ruleId":"388","severity":1,"message":"389","line":24,"column":6,"nodeType":"390","endLine":24,"endColumn":8,"suggestions":"391"},{"ruleId":"383","severity":1,"message":"392","line":70,"column":17,"nodeType":"385","messageId":"386","endLine":70,"endColumn":29},{"ruleId":"383","severity":1,"message":"393","line":3,"column":8,"nodeType":"385","messageId":"386","endLine":3,"endColumn":13},{"ruleId":"383","severity":1,"message":"394","line":6,"column":8,"nodeType":"385","messageId":"386","endLine":6,"endColumn":21},{"ruleId":"383","severity":1,"message":"395","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":13},{"ruleId":"383","severity":1,"message":"396","line":5,"column":8,"nodeType":"385","messageId":"386","endLine":5,"endColumn":15},{"ruleId":"383","severity":1,"message":"397","line":1,"column":17,"nodeType":"385","messageId":"386","endLine":1,"endColumn":27},{"ruleId":"383","severity":1,"message":"398","line":7,"column":8,"nodeType":"385","messageId":"386","endLine":7,"endColumn":19},{"ruleId":"383","severity":1,"message":"399","line":8,"column":25,"nodeType":"385","messageId":"386","endLine":8,"endColumn":45},{"ruleId":"383","severity":1,"message":"400","line":17,"column":23,"nodeType":"385","messageId":"386","endLine":17,"endColumn":37},{"ruleId":"383","severity":1,"message":"401","line":19,"column":9,"nodeType":"385","messageId":"386","endLine":19,"endColumn":22},{"ruleId":"383","severity":1,"message":"402","line":31,"column":9,"nodeType":"385","messageId":"386","endLine":31,"endColumn":23},{"ruleId":"383","severity":1,"message":"403","line":44,"column":9,"nodeType":"385","messageId":"386","endLine":44,"endColumn":23},{"ruleId":"383","severity":1,"message":"404","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":21},{"ruleId":"383","severity":1,"message":"405","line":6,"column":10,"nodeType":"385","messageId":"386","endLine":6,"endColumn":32},{"ruleId":"383","severity":1,"message":"406","line":8,"column":13,"nodeType":"385","messageId":"386","endLine":8,"endColumn":16},{"ruleId":"383","severity":1,"message":"407","line":9,"column":8,"nodeType":"385","messageId":"386","endLine":9,"endColumn":17},{"ruleId":"383","severity":1,"message":"408","line":15,"column":10,"nodeType":"385","messageId":"386","endLine":15,"endColumn":19},{"ruleId":"383","severity":1,"message":"409","line":15,"column":21,"nodeType":"385","messageId":"386","endLine":15,"endColumn":33},{"ruleId":"383","severity":1,"message":"410","line":53,"column":17,"nodeType":"385","messageId":"386","endLine":53,"endColumn":24},{"ruleId":"383","severity":1,"message":"411","line":54,"column":17,"nodeType":"385","messageId":"386","endLine":54,"endColumn":23},{"ruleId":"383","severity":1,"message":"392","line":55,"column":17,"nodeType":"385","messageId":"386","endLine":55,"endColumn":29},{"ruleId":"383","severity":1,"message":"404","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":21},{"ruleId":"383","severity":1,"message":"405","line":7,"column":3,"nodeType":"385","messageId":"386","endLine":7,"endColumn":25},{"ruleId":"383","severity":1,"message":"406","line":12,"column":13,"nodeType":"385","messageId":"386","endLine":12,"endColumn":16},{"ruleId":"388","severity":1,"message":"412","line":30,"column":6,"nodeType":"390","endLine":30,"endColumn":8,"suggestions":"413"},{"ruleId":"383","severity":1,"message":"404","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":21},{"ruleId":"383","severity":1,"message":"414","line":6,"column":10,"nodeType":"385","messageId":"386","endLine":6,"endColumn":23},{"ruleId":"383","severity":1,"message":"406","line":8,"column":13,"nodeType":"385","messageId":"386","endLine":8,"endColumn":16},{"ruleId":"388","severity":1,"message":"412","line":25,"column":6,"nodeType":"390","endLine":25,"endColumn":8,"suggestions":"415"},{"ruleId":"383","severity":1,"message":"393","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":13},{"ruleId":"383","severity":1,"message":"404","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":21},{"ruleId":"383","severity":1,"message":"406","line":8,"column":13,"nodeType":"385","messageId":"386","endLine":8,"endColumn":16},{"ruleId":"383","severity":1,"message":"407","line":9,"column":8,"nodeType":"385","messageId":"386","endLine":9,"endColumn":17},{"ruleId":"388","severity":1,"message":"416","line":29,"column":6,"nodeType":"390","endLine":29,"endColumn":8,"suggestions":"417"},{"ruleId":"383","severity":1,"message":"410","line":65,"column":17,"nodeType":"385","messageId":"386","endLine":65,"endColumn":24},{"ruleId":"383","severity":1,"message":"411","line":66,"column":17,"nodeType":"385","messageId":"386","endLine":66,"endColumn":23},{"ruleId":"383","severity":1,"message":"392","line":67,"column":17,"nodeType":"385","messageId":"386","endLine":67,"endColumn":29},{"ruleId":"383","severity":1,"message":"406","line":8,"column":13,"nodeType":"385","messageId":"386","endLine":8,"endColumn":16},{"ruleId":"383","severity":1,"message":"409","line":13,"column":21,"nodeType":"385","messageId":"386","endLine":13,"endColumn":33},{"ruleId":"383","severity":1,"message":"404","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":21},{"ruleId":"383","severity":1,"message":"405","line":7,"column":3,"nodeType":"385","messageId":"386","endLine":7,"endColumn":25},{"ruleId":"383","severity":1,"message":"406","line":12,"column":13,"nodeType":"385","messageId":"386","endLine":12,"endColumn":16},{"ruleId":"383","severity":1,"message":"407","line":13,"column":8,"nodeType":"385","messageId":"386","endLine":13,"endColumn":17},{"ruleId":"388","severity":1,"message":"412","line":33,"column":6,"nodeType":"390","endLine":33,"endColumn":8,"suggestions":"418"},{"ruleId":"383","severity":1,"message":"410","line":80,"column":17,"nodeType":"385","messageId":"386","endLine":80,"endColumn":24},{"ruleId":"383","severity":1,"message":"411","line":81,"column":17,"nodeType":"385","messageId":"386","endLine":81,"endColumn":23},{"ruleId":"383","severity":1,"message":"392","line":82,"column":17,"nodeType":"385","messageId":"386","endLine":82,"endColumn":29},{"ruleId":"383","severity":1,"message":"406","line":7,"column":13,"nodeType":"385","messageId":"386","endLine":7,"endColumn":16},{"ruleId":"383","severity":1,"message":"407","line":9,"column":8,"nodeType":"385","messageId":"386","endLine":9,"endColumn":17},{"ruleId":"388","severity":1,"message":"419","line":22,"column":6,"nodeType":"390","endLine":22,"endColumn":8,"suggestions":"420"},{"ruleId":"383","severity":1,"message":"410","line":58,"column":17,"nodeType":"385","messageId":"386","endLine":58,"endColumn":24},{"ruleId":"383","severity":1,"message":"411","line":59,"column":17,"nodeType":"385","messageId":"386","endLine":59,"endColumn":23},{"ruleId":"383","severity":1,"message":"392","line":60,"column":17,"nodeType":"385","messageId":"386","endLine":60,"endColumn":29},{"ruleId":"383","severity":1,"message":"421","line":13,"column":10,"nodeType":"385","messageId":"386","endLine":13,"endColumn":15},{"ruleId":"383","severity":1,"message":"422","line":15,"column":10,"nodeType":"385","messageId":"386","endLine":15,"endColumn":20},{"ruleId":"383","severity":1,"message":"423","line":16,"column":10,"nodeType":"385","messageId":"386","endLine":16,"endColumn":21},{"ruleId":"383","severity":1,"message":"384","line":17,"column":10,"nodeType":"385","messageId":"386","endLine":17,"endColumn":17},{"ruleId":"383","severity":1,"message":"387","line":17,"column":19,"nodeType":"385","messageId":"386","endLine":17,"endColumn":29},{"ruleId":"383","severity":1,"message":"408","line":10,"column":10,"nodeType":"385","messageId":"386","endLine":10,"endColumn":19},{"ruleId":"383","severity":1,"message":"409","line":10,"column":21,"nodeType":"385","messageId":"386","endLine":10,"endColumn":33},{"ruleId":"388","severity":1,"message":"412","line":21,"column":6,"nodeType":"390","endLine":21,"endColumn":8,"suggestions":"424"},{"ruleId":"383","severity":1,"message":"410","line":62,"column":17,"nodeType":"385","messageId":"386","endLine":62,"endColumn":24},{"ruleId":"383","severity":1,"message":"411","line":63,"column":17,"nodeType":"385","messageId":"386","endLine":63,"endColumn":23},{"ruleId":"383","severity":1,"message":"404","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":21},{"ruleId":"383","severity":1,"message":"405","line":7,"column":3,"nodeType":"385","messageId":"386","endLine":7,"endColumn":25},{"ruleId":"383","severity":1,"message":"406","line":12,"column":13,"nodeType":"385","messageId":"386","endLine":12,"endColumn":16},{"ruleId":"383","severity":1,"message":"407","line":13,"column":8,"nodeType":"385","messageId":"386","endLine":13,"endColumn":17},{"ruleId":"383","severity":1,"message":"425","line":19,"column":10,"nodeType":"385","messageId":"386","endLine":19,"endColumn":15},{"ruleId":"388","severity":1,"message":"412","line":43,"column":6,"nodeType":"390","endLine":43,"endColumn":8,"suggestions":"426"},{"ruleId":"383","severity":1,"message":"410","line":94,"column":17,"nodeType":"385","messageId":"386","endLine":94,"endColumn":24},{"ruleId":"383","severity":1,"message":"411","line":95,"column":17,"nodeType":"385","messageId":"386","endLine":95,"endColumn":23},{"ruleId":"383","severity":1,"message":"393","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":13},{"ruleId":"383","severity":1,"message":"404","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":21},{"ruleId":"383","severity":1,"message":"406","line":7,"column":13,"nodeType":"385","messageId":"386","endLine":7,"endColumn":16},{"ruleId":"383","severity":1,"message":"407","line":8,"column":8,"nodeType":"385","messageId":"386","endLine":8,"endColumn":17},{"ruleId":"388","severity":1,"message":"416","line":29,"column":6,"nodeType":"390","endLine":29,"endColumn":8,"suggestions":"427"},{"ruleId":"383","severity":1,"message":"410","line":69,"column":17,"nodeType":"385","messageId":"386","endLine":69,"endColumn":24},{"ruleId":"383","severity":1,"message":"411","line":70,"column":17,"nodeType":"385","messageId":"386","endLine":70,"endColumn":23},{"ruleId":"388","severity":1,"message":"416","line":27,"column":6,"nodeType":"390","endLine":27,"endColumn":8,"suggestions":"428"},{"ruleId":"383","severity":1,"message":"410","line":69,"column":17,"nodeType":"385","messageId":"386","endLine":69,"endColumn":24},{"ruleId":"383","severity":1,"message":"411","line":70,"column":17,"nodeType":"385","messageId":"386","endLine":70,"endColumn":23},{"ruleId":"388","severity":1,"message":"429","line":47,"column":6,"nodeType":"390","endLine":47,"endColumn":8,"suggestions":"430"},{"ruleId":"383","severity":1,"message":"422","line":13,"column":10,"nodeType":"385","messageId":"386","endLine":13,"endColumn":20},{"ruleId":"383","severity":1,"message":"423","line":14,"column":10,"nodeType":"385","messageId":"386","endLine":14,"endColumn":21},{"ruleId":"388","severity":1,"message":"419","line":28,"column":6,"nodeType":"390","endLine":28,"endColumn":22,"suggestions":"431"},{"ruleId":"388","severity":1,"message":"419","line":14,"column":6,"nodeType":"390","endLine":14,"endColumn":8,"suggestions":"432"},{"ruleId":"383","severity":1,"message":"433","line":2,"column":8,"nodeType":"385","messageId":"386","endLine":2,"endColumn":11},{"ruleId":"383","severity":1,"message":"434","line":3,"column":8,"nodeType":"385","messageId":"386","endLine":3,"endColumn":17},{"ruleId":"383","severity":1,"message":"435","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":16},{"ruleId":"388","severity":1,"message":"419","line":14,"column":6,"nodeType":"390","endLine":14,"endColumn":8,"suggestions":"436"},{"ruleId":"388","severity":1,"message":"419","line":15,"column":6,"nodeType":"390","endLine":15,"endColumn":8,"suggestions":"437"},{"ruleId":"383","severity":1,"message":"438","line":8,"column":9,"nodeType":"385","messageId":"386","endLine":8,"endColumn":16},{"ruleId":"383","severity":1,"message":"439","line":10,"column":10,"nodeType":"385","messageId":"386","endLine":10,"endColumn":24},{"ruleId":"383","severity":1,"message":"423","line":12,"column":10,"nodeType":"385","messageId":"386","endLine":12,"endColumn":21},{"ruleId":"388","severity":1,"message":"419","line":26,"column":6,"nodeType":"390","endLine":26,"endColumn":8,"suggestions":"440"},{"ruleId":"383","severity":1,"message":"439","line":8,"column":10,"nodeType":"385","messageId":"386","endLine":8,"endColumn":24},{"ruleId":"383","severity":1,"message":"422","line":9,"column":10,"nodeType":"385","messageId":"386","endLine":9,"endColumn":20},{"ruleId":"388","severity":1,"message":"441","line":11,"column":3,"nodeType":"442","endLine":11,"endColumn":18,"suggestions":"443"},{"ruleId":"383","severity":1,"message":"444","line":1,"column":8,"nodeType":"385","messageId":"386","endLine":1,"endColumn":20},{"ruleId":"383","severity":1,"message":"433","line":2,"column":8,"nodeType":"385","messageId":"386","endLine":2,"endColumn":11},{"ruleId":"383","severity":1,"message":"434","line":3,"column":8,"nodeType":"385","messageId":"386","endLine":3,"endColumn":17},{"ruleId":"383","severity":1,"message":"444","line":1,"column":8,"nodeType":"385","messageId":"386","endLine":1,"endColumn":20},{"ruleId":"383","severity":1,"message":"433","line":2,"column":8,"nodeType":"385","messageId":"386","endLine":2,"endColumn":11},{"ruleId":"383","severity":1,"message":"435","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":16},{"ruleId":"383","severity":1,"message":"445","line":5,"column":20,"nodeType":"385","messageId":"386","endLine":5,"endColumn":24},{"ruleId":"383","severity":1,"message":"446","line":5,"column":26,"nodeType":"385","messageId":"386","endLine":5,"endColumn":28},{"ruleId":"383","severity":1,"message":"445","line":5,"column":20,"nodeType":"385","messageId":"386","endLine":5,"endColumn":24},{"ruleId":"383","severity":1,"message":"446","line":5,"column":26,"nodeType":"385","messageId":"386","endLine":5,"endColumn":28},{"ruleId":"383","severity":1,"message":"446","line":5,"column":26,"nodeType":"385","messageId":"386","endLine":5,"endColumn":28},{"ruleId":"383","severity":1,"message":"447","line":2,"column":17,"nodeType":"385","messageId":"386","endLine":2,"endColumn":26},{"ruleId":"383","severity":1,"message":"448","line":6,"column":8,"nodeType":"385","messageId":"386","endLine":6,"endColumn":21},{"ruleId":"388","severity":1,"message":"419","line":16,"column":6,"nodeType":"390","endLine":16,"endColumn":8,"suggestions":"449"},{"ruleId":"383","severity":1,"message":"410","line":52,"column":17,"nodeType":"385","messageId":"386","endLine":52,"endColumn":24},{"ruleId":"383","severity":1,"message":"411","line":53,"column":17,"nodeType":"385","messageId":"386","endLine":53,"endColumn":23},{"ruleId":"383","severity":1,"message":"450","line":5,"column":8,"nodeType":"385","messageId":"386","endLine":5,"endColumn":18},{"ruleId":"383","severity":1,"message":"425","line":14,"column":10,"nodeType":"385","messageId":"386","endLine":14,"endColumn":15},{"ruleId":"388","severity":1,"message":"412","line":40,"column":6,"nodeType":"390","endLine":40,"endColumn":8,"suggestions":"451"},{"ruleId":"383","severity":1,"message":"410","line":91,"column":17,"nodeType":"385","messageId":"386","endLine":91,"endColumn":24},{"ruleId":"383","severity":1,"message":"411","line":92,"column":17,"nodeType":"385","messageId":"386","endLine":92,"endColumn":23},{"ruleId":"383","severity":1,"message":"444","line":1,"column":8,"nodeType":"385","messageId":"386","endLine":1,"endColumn":20},{"ruleId":"383","severity":1,"message":"433","line":2,"column":8,"nodeType":"385","messageId":"386","endLine":2,"endColumn":11},{"ruleId":"383","severity":1,"message":"434","line":3,"column":8,"nodeType":"385","messageId":"386","endLine":3,"endColumn":17},{"ruleId":"383","severity":1,"message":"435","line":4,"column":8,"nodeType":"385","messageId":"386","endLine":4,"endColumn":16},{"ruleId":"383","severity":1,"message":"445","line":5,"column":20,"nodeType":"385","messageId":"386","endLine":5,"endColumn":24},{"ruleId":"383","severity":1,"message":"446","line":5,"column":26,"nodeType":"385","messageId":"386","endLine":5,"endColumn":28},{"ruleId":"379","replacedBy":"452"},{"ruleId":"381","replacedBy":"453"},"no-native-reassign",["454"],"no-negated-in-lhs",["455"],"no-unused-vars","'stories' is assigned a value but never used.","Identifier","unusedVar","'setStories' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'filteredResults.length'. Either include it or remove the dependency array.","ArrayExpression",["456"],"'isSubmitting' is assigned a value but never used.","'Table' is defined but never used.","'ReactPaginate' is defined but never used.","'Globe' is defined but never used.","'Twitter' is defined but never used.","'useContext' is defined but never used.","'DataContext' is defined but never used.","'fetchWithTokenNoBody' is defined but never used.","'setPermissions' is assigned a value but never used.","'onChangeValue' is assigned a value but never used.","'onChangeValueC' is assigned a value but never used.","'onChangeValueS' is assigned a value but never used.","'CharacterInfo' is defined but never used.","'fazerRequisicaoComBody' is defined but never used.","'Yup' is defined but never used.","'StoryInfo' is defined but never used.","'character' is assigned a value but never used.","'setCharacter' is assigned a value but never used.","'touched' is assigned a value but never used.","'errors' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["457"],"'fetchWithBody' is defined but never used.",["458"],"React Hook React.useEffect has missing dependencies: 'params.id' and 'token'. Either include them or remove the dependency array.",["459"],["460"],"React Hook React.useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["461"],"'token' is assigned a value but never used.","'storyCheck' is assigned a value but never used.","'reviewCheck' is assigned a value but never used.",["462"],"'cover' is assigned a value but never used.",["463"],["464"],["465"],"React Hook React.useEffect has missing dependencies: 'character' and 'params.id'. Either include them or remove the dependency array.",["466"],["467"],["468"],"'Row' is defined but never used.","'RowReview' is defined but never used.","'RowStory' is defined but never used.",["469"],["470"],"'history' is assigned a value but never used.","'characterCheck' is assigned a value but never used.",["471"],"React Hook useEffect contains a call to 'setToken'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [token] as a second argument to the useEffect Hook.","MemberExpression",["472"],"'RowCharacter' is defined but never used.","'type' is assigned a value but never used.","'id' is assigned a value but never used.","'Component' is defined but never used.","'SuggestReview' is defined but never used.",["473"],"'TableStory' is defined but never used.",["474"],["454"],["455"],"no-global-assign","no-unsafe-negation",{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"477","fix":"479"},{"desc":"480","fix":"481"},{"desc":"477","fix":"482"},{"desc":"483","fix":"484"},{"desc":"477","fix":"485"},{"desc":"477","fix":"486"},{"desc":"480","fix":"487"},{"desc":"480","fix":"488"},{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"483","fix":"493"},{"desc":"483","fix":"494"},{"desc":"483","fix":"495"},{"desc":"483","fix":"496"},{"desc":"497","fix":"498"},{"desc":"483","fix":"499"},{"desc":"477","fix":"500"},"Update the dependencies array to be: [filteredResults.length]",{"range":"501","text":"502"},"Update the dependencies array to be: [params.id]",{"range":"503","text":"504"},{"range":"505","text":"504"},"Update the dependencies array to be: [params.id, token]",{"range":"506","text":"507"},{"range":"508","text":"504"},"Update the dependencies array to be: [token]",{"range":"509","text":"510"},{"range":"511","text":"504"},{"range":"512","text":"504"},{"range":"513","text":"507"},{"range":"514","text":"507"},"Update the dependencies array to be: [character, params.id]",{"range":"515","text":"516"},"Update the dependencies array to be: [characterCheck, token]",{"range":"517","text":"518"},{"range":"519","text":"510"},{"range":"520","text":"510"},{"range":"521","text":"510"},{"range":"522","text":"510"},"Add dependencies array: [token]",{"range":"523","text":"524"},{"range":"525","text":"510"},{"range":"526","text":"504"},[944,946],"[filteredResults.length]",[1103,1105],"[params.id]",[998,1000],[1119,1121],"[params.id, token]",[1167,1169],[768,770],"[token]",[764,766],[1663,1665],[1093,1095],[964,966],[1791,1793],"[character, params.id]",[1201,1217],"[characterCheck, token]",[498,500],[454,456],[468,470],[992,994],[912,912],", [token]",[604,606],[1496,1498]]