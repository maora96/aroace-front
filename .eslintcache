[{"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\index.js":"1","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\reportWebVitals.js":"2","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\App.js":"3","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\utils\\data.js":"4","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\home\\home.js":"5","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success\\success.js":"6","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\login\\login.js":"7","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-characters\\suggested-characters.js":"8","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\all-characters\\all-characters.js":"9","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\about\\about.js":"10","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\dashboard\\dashboard.js":"11","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-review\\suggest-review.js":"12","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-character\\suggested-character.js":"13","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-character\\update-character.js":"14","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-reviews\\suggested-reviews.js":"15","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-review\\update-review.js":"16","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-character\\add-character.js":"17","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-review\\suggested-review.js":"18","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-review\\add-review.js":"19","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-character\\suggest-character.js":"20","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-story\\suggest-story.js":"21","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-story\\suggested-story.js":"22","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\results\\results.js":"23","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-stories\\suggested-stories.js":"24","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-story\\update-story.js":"25","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-story\\add-story.js":"26","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\character\\character.js":"27","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\utils\\fetch.js":"28","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\sidebar\\sidebar.js":"29","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\mobile-header\\mobile-header.js":"30","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\single-character\\single-character.js":"31","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\stats\\stats.js":"32","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-character\\table.js":"33","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\pagination\\pagination.js":"34","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\recent-suggested\\recent-suggested.js":"35","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\story-info\\story-info.js":"36","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\character-info\\character-info.js":"37","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\stories\\stories.js":"38","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\reviews\\reviews.js":"39","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-story\\table.js":"40","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-review\\table.js":"41","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-story\\row.js":"42","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-review\\row.js":"43","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-character\\row.js":"44","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\review-info\\review-info.js":"45"},{"size":500,"mtime":499162500000,"results":"46","hashOfConfig":"47"},{"size":362,"mtime":499162500000,"results":"48","hashOfConfig":"47"},{"size":3884,"mtime":1612582221984,"results":"49","hashOfConfig":"47"},{"size":109,"mtime":1612579596337,"results":"50","hashOfConfig":"47"},{"size":3176,"mtime":1612668764958,"results":"51","hashOfConfig":"47"},{"size":708,"mtime":1612198076372,"results":"52","hashOfConfig":"47"},{"size":3713,"mtime":1613775691277,"results":"53","hashOfConfig":"47"},{"size":1629,"mtime":1612197178635,"results":"54","hashOfConfig":"47"},{"size":1906,"mtime":1612196903479,"results":"55","hashOfConfig":"47"},{"size":10389,"mtime":1613775133287,"results":"56","hashOfConfig":"47"},{"size":8846,"mtime":1613790474325,"results":"57","hashOfConfig":"47"},{"size":8303,"mtime":1613775007810,"results":"58","hashOfConfig":"47"},{"size":15669,"mtime":1613752559619,"results":"59","hashOfConfig":"47"},{"size":11031,"mtime":1613752466417,"results":"60","hashOfConfig":"47"},{"size":1519,"mtime":1612197292372,"results":"61","hashOfConfig":"47"},{"size":5102,"mtime":1612197946834,"results":"62","hashOfConfig":"47"},{"size":12669,"mtime":1613775340471,"results":"63","hashOfConfig":"47"},{"size":6215,"mtime":1612197794397,"results":"64","hashOfConfig":"47"},{"size":4690,"mtime":1612198003945,"results":"65","hashOfConfig":"47"},{"size":28121,"mtime":1613775088685,"results":"66","hashOfConfig":"47"},{"size":18686,"mtime":1613773865138,"results":"67","hashOfConfig":"47"},{"size":9501,"mtime":1612670663863,"results":"68","hashOfConfig":"47"},{"size":3943,"mtime":1612135592064,"results":"69","hashOfConfig":"47"},{"size":1547,"mtime":1612197403014,"results":"70","hashOfConfig":"47"},{"size":7662,"mtime":1612228272879,"results":"71","hashOfConfig":"47"},{"size":7525,"mtime":1612670539818,"results":"72","hashOfConfig":"47"},{"size":2178,"mtime":1612198581833,"results":"73","hashOfConfig":"47"},{"size":985,"mtime":1613788084395,"results":"74","hashOfConfig":"47"},{"size":4704,"mtime":1612586149152,"results":"75","hashOfConfig":"47"},{"size":1999,"mtime":1612199890181,"results":"76","hashOfConfig":"47"},{"size":1337,"mtime":1612183320739,"results":"77","hashOfConfig":"47"},{"size":659,"mtime":1611792827252,"results":"78","hashOfConfig":"47"},{"size":962,"mtime":1613752474134,"results":"79","hashOfConfig":"47"},{"size":780,"mtime":1612129639784,"results":"80","hashOfConfig":"47"},{"size":1203,"mtime":1611799322494,"results":"81","hashOfConfig":"47"},{"size":3052,"mtime":1612666629594,"results":"82","hashOfConfig":"47"},{"size":4123,"mtime":1612666523231,"results":"83","hashOfConfig":"47"},{"size":1668,"mtime":1612670394462,"results":"84","hashOfConfig":"47"},{"size":1645,"mtime":1612586832542,"results":"85","hashOfConfig":"47"},{"size":1064,"mtime":1613752565415,"results":"86","hashOfConfig":"47"},{"size":1067,"mtime":1613752475253,"results":"87","hashOfConfig":"47"},{"size":1832,"mtime":1613752473323,"results":"88","hashOfConfig":"47"},{"size":2186,"mtime":1613752566807,"results":"89","hashOfConfig":"47"},{"size":2031,"mtime":1613752568222,"results":"90","hashOfConfig":"47"},{"size":1834,"mtime":1612198628178,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"130rid7",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"94"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"94"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"94"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"94"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"94"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"94"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"94"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"94"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"94"},"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\index.js",[],["218","219"],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\reportWebVitals.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\App.js",["220"],"import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/home/home\";\nimport Login from \"./pages/login/login\";\nimport Character from \"./pages/character/character\";\nimport SuggestCharacter from \"./pages/suggest-character/suggest-character\";\nimport Success from \"./pages/success/success\";\nimport About from \"./pages/about/about\";\nimport Dashboard from \"./pages/dashboard/dashboard\";\nimport SuggestedCharacters from \"./pages/suggested-characters/suggested-characters\";\nimport SuggestedCharacter from \"./pages/suggested-character/suggested-character\";\nimport AllCharacters from \"./pages/all-characters/all-characters\";\nimport SuggestStory from \"./pages/suggest-story/suggest-story\";\nimport UpdateStory from \"./pages/update-story/update-story\";\nimport SuggestReview from \"./pages/suggest-review/suggest-review\";\nimport SuggestedStories from \"./pages/suggested-stories/suggested-stories\";\nimport SuggestedReviews from \"./pages/suggested-reviews/suggested-reviews\";\nimport UpdateCharacter from \"./pages/update-character/update-character\";\nimport AddCharacter from \"./pages/add-character/add-character\";\nimport UpdateReview from \"./pages/update-review/update-review\";\nimport SuggestedStory from \"./pages/suggested-story/suggested-story\";\nimport AddStory from \"./pages/add-story/add-story\";\nimport SuggestedReview from \"./pages/suggested-review/suggested-review\";\nimport AddReview from \"./pages/add-review/add-review\";\nimport Results from \"./components/results/results\";\nimport DataContext from \"./utils/data\";\n\nfunction App() {\n  const [characterCheck, setCharacterCheck] = React.useState(true);\n  const [reviewCheck, setReviewCheck] = React.useState(true);\n  const [storyCheck, setStoryCheck] = React.useState(true);\n\n  return (\n    <BrowserRouter>\n      <DataContext.Provider\n        value={{\n          characterCheck,\n          setCharacterCheck,\n          storyCheck,\n          setStoryCheck,\n          reviewCheck,\n          setReviewCheck,\n        }}\n      >\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/character/:id\" component={Character} />\n            <Route path=\"/suggest-character\" component={SuggestCharacter} />\n            <Route path=\"/success\" component={Success} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route\n              path=\"/suggested-characters\"\n              component={SuggestedCharacters}\n            />\n            <Route\n              path=\"/suggested-character/:id\"\n              component={SuggestedCharacter}\n            />\n            <Route path=\"/all-characters\" component={AllCharacters} />\n            <Route path=\"/update-character/:id\" component={UpdateCharacter} />\n            <Route path=\"/suggest-story/:id\" component={SuggestStory} />\n            <Route path=\"/update-story/:id\" component={UpdateStory} />\n            <Route path=\"/suggest-review/:id\" component={SuggestReview} />\n            <Route path=\"/suggested-stories\" component={SuggestedStories} />\n            <Route path=\"/suggested-reviews\" component={SuggestedReviews} />\n            <Route path=\"/add-character\" component={AddCharacter} />\n            <Route path=\"/update-review/:id\" component={UpdateReview} />\n            <Route path=\"/suggested-story/:id\" component={SuggestedStory} />\n            <Route path=\"/suggested-review/:id\" component={SuggestedReview} />\n            <Route path=\"/add-story/:id\" component={AddStory} />\n            <Route path=\"/add-review/:id\" component={AddReview} />\n            <Route path=\"/success\" component={Success} />\n          </Switch>\n        </div>\n      </DataContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\utils\\data.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\home\\home.js",["221","222","223"],"import React from \"react\";\r\nimport \"./home.css\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport SingleCharacter from \"../../components/single-character/single-character\";\r\nimport { ReactComponent as ButtonIcon } from \"../../assets/chevron-right-solid.svg\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nfunction Home() {\r\n  const [random, setRandom] = React.useState([]);\r\n  const [stories, setStories] = React.useState([]);\r\n  const [search, setSearch] = React.useState([]);\r\n  const [filteredResults, setFilteredResults] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/character\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const newRandom = resJson.data;\r\n        console.log(newRandom);\r\n        console.log(filteredResults.length);\r\n        setRandom(newRandom);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n\r\n      <div className=\"home-container\">\r\n        <form\r\n          onSubmit={(event) => {\r\n            console.log(search);\r\n\r\n            event.preventDefault();\r\n            fetch(\r\n              `https://aroacedb-back.herokuapp.com/character/infinite?search=${search}`\r\n            )\r\n              .then((res) => res.json())\r\n              .then((resJson) => {\r\n                console.log(search);\r\n                console.log(resJson.data);\r\n\r\n                if (resJson.data) {\r\n                  const newResults = resJson.data.characters;\r\n                  setFilteredResults(newResults);\r\n                  console.log(filteredResults);\r\n                }\r\n              });\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"search...\"\r\n            onChange={(event) => {\r\n              setSearch(event.target.value);\r\n            }}\r\n          ></input>\r\n          <button>\r\n            <ButtonIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n          </button>\r\n        </form>\r\n        <div className=\"results\">\r\n          {filteredResults.map((i) => {\r\n            return (\r\n              <div>\r\n                <SingleCharacter character={i} />\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          {filteredResults.length !== 0 ? (\r\n            <div></div>\r\n          ) : (\r\n            <div className=\"random\">\r\n              <SingleCharacter character={random} />\r\n              <div className=\"char-btn\">\r\n                <button\r\n                  onClick={() => {\r\n                    fetch(\"https://aroacedb-back.herokuapp.com/character\")\r\n                      .then((res) => res.json())\r\n                      .then((resJson) => {\r\n                        console.log(resJson.data);\r\n                        const newRandom = resJson.data;\r\n                        setRandom(newRandom);\r\n                      });\r\n                  }}\r\n                >\r\n                  Give me a new character!\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success\\success.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\login\\login.js",["224"],"import React from \"react\";\r\nimport \"./login.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { fetchWithBody } from \"../../utils/fetch\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"Login\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n\r\n      <div className=\"login-container\">\r\n        <div className=\"login-box\">\r\n          <h2>Login</h2>\r\n          <p>Admin login for the database. Non-admin users can't be created.</p>\r\n          <Formik\r\n            initialValues={{\r\n              email: \"\",\r\n              password: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n\r\n              fetchWithBody(\r\n                \"https://aroacedb-back.herokuapp.com/auth\",\r\n                \"POST\",\r\n                {\r\n                  email: values.email,\r\n                  password: values.password,\r\n                }\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  const data = resJson.data;\r\n                  console.log(data);\r\n                  console.log(resJson.data.token);\r\n\r\n                  localStorage.setItem(\"token\", resJson.data.token);\r\n                  const newToken = localStorage.getItem(\"token\");\r\n\r\n                  const decodedToken = jwt_decode(newToken);\r\n                  console.log(decodedToken);\r\n\r\n                  if (newToken) {\r\n                    history.push(\"/dashboard\");\r\n                  }\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err);\r\n                  alert(\r\n                    \"Error loging in. Are you sure your credentials are correct?\"\r\n                  );\r\n                });\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string().email().required(\"Required\"),\r\n            })}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <input\r\n                    id=\"email\"\r\n                    placeholder=\"User\"\r\n                    type=\"text\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.email && touched.email\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                  />\r\n                  {errors.email && touched.email && (\r\n                    <div className=\"input-feedback\">{errors.email}</div>\r\n                  )}\r\n\r\n                  <input\r\n                    id=\"password\"\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n\r\n                  <button type=\"submit\" className=\"submit\">\r\n                    Login\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-characters\\suggested-characters.js",["225"],"import \"./suggested-characters.css\";\r\nimport React from \"react\";\r\nimport Table from \"../../components/table-character/table\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableCharacter from \"../../components/table-character/table\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedCharacters() {\r\n  const [characters, setCharacters] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/suggest/characters\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const data = resJson.data.paginated_characters;\r\n        console.log(data);\r\n        setCharacters(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"SuggestedCharacters\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggested-container\">\r\n        <div className=\"title\">\r\n          <h2>Suggested Characters</h2>\r\n        </div>\r\n        <div className=\"table-container\">\r\n          <TableCharacter content={characters} type=\"suggest\" id=\"character\" />\r\n          <Pagination\r\n            totalPages={totalPages}\r\n            setCurrentPage={setCurrentPage}\r\n            currentPage={currentPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\all-characters\\all-characters.js",["226"],"import \"./all-characters.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableCharacter from \"../../components/table-character/table\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function AllCharacters() {\r\n  const [characters, setCharacters] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\r\n      `https://aroacedb-back.herokuapp.com/characters?offset=${\r\n        currentPage * 20 - 20\r\n      }`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const data = resJson.data.paginated_characters;\r\n        console.log(\"characters:\", data);\r\n        setCharacters(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"AllCharacters\">\r\n      <Sidebar />\r\n\r\n      <MobileHeader />\r\n      <div className=\"all-characters-container\">\r\n        <div className=\"title\">\r\n          <h2>All Characters</h2>\r\n          <a href=\"/add-character\">Add character</a>\r\n        </div>\r\n        <TableCharacter content={characters} type=\"regular\" id=\"character\" />\r\n\r\n        {/* <ReactPaginate\r\n          pageCount={totalPages}\r\n          pageRangeDisplayed={5}\r\n          marginPagesDisplayed={2}\r\n          previousLabel=\"Previous\"\r\n          nextLabel=\"Next\"\r\n          onPageChange={handlePageClick}\r\n        /> */}\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\about\\about.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\dashboard\\dashboard.js",["227","228","229","230","231","232","233"],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-review\\suggest-review.js",["234","235","236","237","238","239","240","241","242"],"import React from \"react\";\r\nimport \"./suggest-review.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fazerRequisicaoComBody } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestReview() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Suggest a Review</h3>\r\n          <Formik\r\n            initialValues={{\r\n              review_for: \"\",\r\n              reviewer: \"\",\r\n              ownvoice_for: \"\",\r\n              link: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              values.character_id = params.id;\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetch(\"https://aroacedb-back.herokuapp.com/suggest/reviews\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n              })\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"ReviewInfo\">\r\n                    <div className=\"container\">\r\n                      <div className=\"content-hundred\">\r\n                        <div className=\"block\">\r\n                          <label>\r\n                            <div className=\"group\">\r\n                              <span\r\n                                className=\"hover\"\r\n                                data-for=\"tooltip-review-for\"\r\n                                data-tip\r\n                              >\r\n                                ?\r\n                              </span>\r\n                              <ReactTooltip\r\n                                id=\"tooltip-review-for\"\r\n                                effect=\"solid\"\r\n                                place=\"top\"\r\n                                type=\"dark\"\r\n                              >\r\n                                <div className=\"tooltip\">\r\n                                  Story the review was written about.\r\n                                </div>\r\n                              </ReactTooltip>\r\n                              <span>Review for</span>\r\n                            </div>\r\n\r\n                            <input\r\n                              id=\"review_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Review for\"\r\n                              value={values.review_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n\r\n                          <label>\r\n                            <div className=\"group\">\r\n                              <span\r\n                                className=\"hover\"\r\n                                data-for=\"tooltip-link\"\r\n                                data-tip\r\n                              >\r\n                                ?\r\n                              </span>\r\n                              <ReactTooltip\r\n                                id=\"tooltip-link\"\r\n                                effect=\"solid\"\r\n                                place=\"top\"\r\n                                type=\"dark\"\r\n                              >\r\n                                <div className=\"tooltip\">\r\n                                  A link to where the review is hosted.\r\n                                </div>\r\n                              </ReactTooltip>\r\n                              <span>Link</span>\r\n                            </div>\r\n                            <input\r\n                              id=\"link\"\r\n                              type=\"text\"\r\n                              placeholder=\"Link\"\r\n                              value={values.link}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <span className=\"block\">\r\n                          <label>\r\n                            <div className=\"group\">\r\n                              <span\r\n                                className=\"hover\"\r\n                                data-for=\"tooltip-reviewer\"\r\n                                data-tip\r\n                              >\r\n                                ?\r\n                              </span>\r\n                              <ReactTooltip\r\n                                id=\"tooltip-reviewer\"\r\n                                effect=\"solid\"\r\n                                place=\"top\"\r\n                                type=\"dark\"\r\n                              >\r\n                                <div className=\"tooltip\">\r\n                                  The person who reviewed the story.\r\n                                </div>\r\n                              </ReactTooltip>\r\n                              <span>Reviewer</span>\r\n                            </div>\r\n                            <input\r\n                              id=\"reviewer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Reviewer\"\r\n                              value={values.reviewer}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            <div className=\"group\">\r\n                              <span\r\n                                className=\"hover\"\r\n                                data-for=\"tooltip-ownvoice-for\"\r\n                                data-tip\r\n                              >\r\n                                ?\r\n                              </span>\r\n                              <ReactTooltip\r\n                                id=\"tooltip-ownvoice-for\"\r\n                                effect=\"solid\"\r\n                                place=\"top\"\r\n                                type=\"dark\"\r\n                              >\r\n                                <div className=\"tooltip\">\r\n                                  Ownvoices aspects of the review.\r\n                                </div>\r\n                              </ReactTooltip>\r\n                              <span>Ownvoice for</span>\r\n                            </div>\r\n                            <input\r\n                              id=\"ownvoice_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Ownvoice for\"\r\n                              value={values.ownvoice_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"review-right\">\r\n                    Suggest\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-character\\suggested-character.js",["243","244","245","246"],"import React from \"react\";\r\nimport \"./suggested-character.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport {\r\n  fazerRequisicaoComBody,\r\n  fetchWithToken,\r\n  fetchWithTokenNoBody,\r\n} from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const [token, setToken] = React.useState(\"\");\r\n\r\n  const history = useHistory();\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/suggest/characters/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setCharacter(resJson.data.character[0]);\r\n        console.log(resJson.data.character[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Character\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"character-container\">\r\n        <div className=\"suggest\">\r\n          <h2 className=\"title\">Suggested character</h2>\r\n\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              character_name: character.character_name,\r\n              author: character.author,\r\n              gender: character.gender,\r\n              importance: character.importance,\r\n              pairing_qpp_or_romantic: character.pairing_qpp_or_romantic,\r\n              main_storyseries: character.main_storyseries,\r\n              type_of_rep: character.type_of_rep,\r\n              romantic_orientation: character.romantic_orientation,\r\n              sexual_orientation: character.sexual_orientation,\r\n              genre: character.genre,\r\n              relationships: character.relationships,\r\n              rep_noteswarnings: character.rep_noteswarnings,\r\n              cover: character.cover,\r\n              reference: character.reference,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                \"https://aroacedb-back.herokuapp.com/characters\",\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/suggest/characters/${params.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"suggest-character-info\">\r\n                    <div className=\"line\">\r\n                      <h2>\r\n                        <input\r\n                          id=\"character_name\"\r\n                          placeholder={character.character_name}\r\n                          type=\"text\"\r\n                          value={values.character_name}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h2>\r\n                      {/* <input\r\n                        id=\"importance\"\r\n                        placeholder={character.importance}\r\n                        type=\"text\"\r\n                        value={values.importance}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      /> */}\r\n                      <select\r\n                        name=\"importance\"\r\n                        value={values.importance}\r\n                        onChange={handleChange}\r\n                        onBlur={handleChange}\r\n                      >\r\n                        <option value=\"\" label=\"Select one\" />\r\n                        <option value=\"Lead\" label=\"Lead\" />\r\n                        <option value=\"Main\" label=\"Main\" />\r\n                        <option value=\"Side\" label=\"Side\" />\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Author</span>\r\n                        <input\r\n                          id=\"author\"\r\n                          placeholder={character.author}\r\n                          type=\"text\"\r\n                          value={values.author}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Gender</span>{\" \"}\r\n                        {/* <input\r\n                          id=\"gender\"\r\n                          placeholder={character.gender}\r\n                          type=\"text\"\r\n                          value={values.gender}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        /> */}\r\n                        <select\r\n                          name=\"gender\"\r\n                          value={values.gender}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select gender\" />\r\n                          <option value=\"M\" label=\"M\" />\r\n                          <option value=\"F\" label=\"F\" />\r\n                          <option value=\"Enby\" label=\"Enby\" />\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Pairing</span>\r\n                        <input\r\n                          id=\"pairing_qpp_or_romantic\"\r\n                          placeholder={character.pairing_qpp_or_romantic}\r\n                          type=\"text\"\r\n                          value={values.pairing_qpp_or_romantic}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Series</span>\r\n                        <input\r\n                          id=\"main_storyseries\"\r\n                          placeholder={character.main_storyseries}\r\n                          type=\"text\"\r\n                          value={values.main_storyseries}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Type of Rep</span>\r\n                        <select\r\n                          name=\"type_of_rep\"\r\n                          value={values.type_of_rep}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Word of God\" label=\"Word of God\" />\r\n                          <option value=\"On Page\" label=\"On Page\" />\r\n                          <option value=\"Word Used\" label=\"Word Used\" />\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Romantic orientation</span>\r\n                        {/* <input\r\n                          id=\"romantic_orientation\"\r\n                          placeholder={character.romantic_orientation}\r\n                          type=\"text\"\r\n                          value={values.romantic_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        /> */}\r\n                        <select\r\n                          name=\"romantic_orientation\"\r\n                          value={values.romantic_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Alloromantic\" label=\"Alloromantic\" />\r\n                          <option value=\"Aroflux\" label=\"Aroflux\" />\r\n                          <option value=\"Aromantic\" label=\"Aromantic\" />\r\n                          <option value=\"Arospec\" label=\"Arospec\" />\r\n                          <option value=\"Biromantic\" label=\"Biromantic\" />\r\n                          <option value=\"Greyromantic\" label=\"Grayromantic\" />\r\n                          <option value=\"Demiromantic\" label=\"Demiromantic\" />\r\n                          <option\r\n                            value=\"Heteroromantic\"\r\n                            label=\"Heteroromantic\"\r\n                          />\r\n                          <option value=\"Homoromantic\" label=\"Homoromantic\" />\r\n                          <option value=\"Panromantic\" label=\"Panromantic\" />\r\n                          <option value=\"Queer\" label=\"Queer\" />\r\n                          <option value=\"WTFRomantic\" label=\"WTFRomantic\" />\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Sexual Orientation</span>\r\n                        {/* <input\r\n                          id=\"sexual_orientation\"\r\n                          placeholder={character.sexual_orientation}\r\n                          type=\"text\"\r\n                          value={values.sexual_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        /> */}\r\n                        <select\r\n                          name=\"sexual_orientation\"\r\n                          value={values.sexual_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Allosexual\" label=\"Allosexual\" />\r\n                          <option value=\"Asexual\" label=\"Asexual\" />\r\n                          <option value=\"Acespec\" label=\"Acespec\" />\r\n                          <option value=\"Demisexual\" label=\"Demisexual\" />\r\n                          <option value=\"Bisexual\" label=\"Bisexual\" />\r\n                          <option value=\"Gay\" label=\"Gay\" />\r\n                          <option value=\"Gray-asexual\" label=\"Graysexual\" />\r\n                          <option value=\"Heterosexual\" label=\"Heterosexual\" />\r\n                          <option value=\"Pansexual\" label=\"Pansexual\" />\r\n                          <option value=\"Queer\" label=\"Queer\" />\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Genre</span>\r\n                        <input\r\n                          id=\"genre\"\r\n                          placeholder={character.genre}\r\n                          type=\"text\"\r\n                          value={values.genre}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Relationships</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"relationships\"\r\n                        placeholder={character.relationships}\r\n                        type=\"text\"\r\n                        value={values.relationships}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Notes & Warnings</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder={character.rep_noteswarnings}\r\n                        type=\"text\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>References to mention of representation</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"reference\"\r\n                        placeholder=\"Insert references\"\r\n                        type=\"text\"\r\n                        value={values.reference}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Cover</span>\r\n                      </p>\r\n                      <input\r\n                        id=\"cover\"\r\n                        placeholder={character.cover}\r\n                        type=\"text\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"buttons\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        console.log(\"delete from database\");\r\n                        fetchWithTokenNoBody(\r\n                          `https://aroacedb-back.herokuapp.com/suggest/characters/${params.id}`,\r\n                          \"DELETE\",\r\n                          token\r\n                        )\r\n                          .then((res) => res.json())\r\n                          .then((resJson) => {\r\n                            console.log(resJson);\r\n                            history.push(\"/success\");\r\n                          });\r\n\r\n                        history.push(\"/success\");\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Add Character to Database\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-character\\update-character.js",["247","248","249","250"],"import React from \"react\";\r\nimport \"./update-character.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithBody, fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function UpdateCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const [token, setToken] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/characters/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setCharacter(resJson.data.character[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Character\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"character-container\">\r\n        <div className=\"suggest\">\r\n          <h2 className=\"title\">Update character</h2>\r\n\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              character_name: character.character_name,\r\n              author: character.author,\r\n              gender: character.gender,\r\n              importance: character.importance,\r\n              pairing_qpp_or_romantic: character.pairing_qpp_or_romantic,\r\n              main_storyseries: character.main_storyseries,\r\n              type_of_rep: character.type_of_rep,\r\n              romantic_orientation: character.romantic_orientation,\r\n              sexual_orientation: character.sexual_orientation,\r\n              genre: character.genre,\r\n              relationships: character.relationships,\r\n              rep_noteswarnings: character.rep_noteswarnings,\r\n              cover: character.cover,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(token);\r\n              console.log(`http:localhost:8081/characters/${params.id}`);\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/characters/${params.id}`,\r\n                \"PUT\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n              //s history.push(\"/success\");\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"suggest-character-info\">\r\n                    <div className=\"line\">\r\n                      <h2>\r\n                        <input\r\n                          id=\"character_name\"\r\n                          placeholder={character.character_name}\r\n                          type=\"text\"\r\n                          value={values.character_name}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h2>\r\n                      <input\r\n                        id=\"importance\"\r\n                        placeholder={character.importance}\r\n                        type=\"text\"\r\n                        value={values.importance}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Author</span>\r\n                        <input\r\n                          id=\"author\"\r\n                          placeholder={character.author}\r\n                          type=\"text\"\r\n                          value={values.author}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Gender</span>{\" \"}\r\n                        <input\r\n                          id=\"gender\"\r\n                          placeholder={character.gender}\r\n                          type=\"text\"\r\n                          value={values.gender}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Pairing</span>\r\n                        <input\r\n                          id=\"pairing_qpp_or_romantic\"\r\n                          placeholder={character.pairing_qpp_or_romantic}\r\n                          type=\"text\"\r\n                          value={values.pairing_qpp_or_romantic}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Series</span>\r\n                        <input\r\n                          id=\"main_storyseries\"\r\n                          placeholder={character.main_storyseries}\r\n                          type=\"text\"\r\n                          value={values.main_storyseries}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Type of Rep</span>\r\n                        <input\r\n                          id=\"type_of_rep\"\r\n                          placeholder={character.type_of_rep}\r\n                          type=\"text\"\r\n                          value={values.type_of_rep}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Romantic orientation</span>\r\n                        <input\r\n                          id=\"romantic_orientation\"\r\n                          placeholder={character.romantic_orientation}\r\n                          type=\"text\"\r\n                          value={values.romantic_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Sexual Orientation</span>\r\n                        <input\r\n                          id=\"sexual_orientation\"\r\n                          placeholder={character.sexual_orientation}\r\n                          type=\"text\"\r\n                          value={values.sexual_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Genre</span>\r\n                        <input\r\n                          id=\"genre\"\r\n                          placeholder={character.genre}\r\n                          type=\"text\"\r\n                          value={values.genre}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Relationships</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"relationships\"\r\n                        placeholder={character.relationships}\r\n                        type=\"text\"\r\n                        value={values.relationships}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Notes & Warnings</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder={character.rep_noteswarnings}\r\n                        type=\"text\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Cover</span>\r\n                      </p>\r\n                      <input\r\n                        id=\"cover\"\r\n                        placeholder={character.cover}\r\n                        type=\"text\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"buttons\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        console.log(\"delete from database\");\r\n                        fetch(\r\n                          `https://aroacedb-back.herokuapp.com/suggest/${params}`,\r\n                          {\r\n                            method: \"DELETE\",\r\n                            headers: { \"Content-Type\": \"application/json\" },\r\n                          }\r\n                        )\r\n                          .then((res) => res.json())\r\n                          .then((resJson) => {\r\n                            console.log(resJson);\r\n                          });\r\n\r\n                        //history.push(\"/success\");\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Update Character to Database\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-reviews\\suggested-reviews.js",["251"],"import \"./suggested-reviews.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Table from \"../../components/table-character/table\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableReview from \"../../components/table-review/table\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedReviews() {\r\n  const [reviews, setReviews] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/suggest/reviews\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const data = resJson.data.paginated_reviews;\r\n        console.log(data);\r\n        setReviews(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"SuggestedCharacters\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggested-container\">\r\n        <div className=\"title\">\r\n          <h2>Suggested Reviews</h2>\r\n        </div>\r\n        <TableReview content={reviews} type=\"suggest\" id=\"review\" />\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-review\\update-review.js",["252","253","254","255","256","257","258"],"import React from \"react\";\r\nimport \"./update-review.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function UpdateReview() {\r\n  const [review, setReview] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n    fetch(`https://aroacedb-back.herokuapp.com/reviews/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setReview(resJson.data.review[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Update Review</h3>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              review_for: review.review_for,\r\n              reviewer: review.reviewer,\r\n              ownvoice_for: review.ownvoice_for,\r\n              link: review.link,\r\n              character_id: review.character_id,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/reviews/${review.id}`,\r\n                \"PUT\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"ReviewInfo\">\r\n                    <div className=\"container\">\r\n                      <div className=\"content-hundred\">\r\n                        <div className=\"block\">\r\n                          <label>\r\n                            Review for\r\n                            <input\r\n                              id=\"review_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Review for\"\r\n                              value={values.review_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n\r\n                          <label>\r\n                            Link\r\n                            <input\r\n                              id=\"link\"\r\n                              type=\"text\"\r\n                              placeholder=\"Link\"\r\n                              value={values.link}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <span className=\"block\">\r\n                          <label>\r\n                            Reviewer\r\n                            <input\r\n                              id=\"reviewer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Reviewer\"\r\n                              value={values.reviewer}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            Ownvoices for\r\n                            <input\r\n                              id=\"ownvoices_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Ownvoice for\"\r\n                              value={values.ownvoice_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"review-right\">\r\n                    Update\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-character\\add-character.js",["259","260"],"import React from \"react\";\r\nimport \"./add-character.css\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function AddCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"Character\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"character-container\">\r\n        <div className=\"suggest\">\r\n          <h2 className=\"title\">Add a character</h2>\r\n\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              character_name: \"\",\r\n              author: \"\",\r\n              gender: \"\",\r\n              importance: \"\",\r\n              pairing_qpp_or_romantic: \"\",\r\n              main_storyseries: \"\",\r\n              type_of_rep: \"\",\r\n              romantic_orientation: \"\",\r\n              sexual_orientation: \"\",\r\n              genre: \"\",\r\n              relationships: \"\",\r\n              rep_noteswarnings: \"\",\r\n              cover: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              const token = localStorage.getItem(\"token\");\r\n              console.log(token);\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                \"https://aroacedb-back.herokuapp.com/characters\",\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n              //s history.push(\"/success\");\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"suggest-character-info\">\r\n                    <div className=\"line\">\r\n                      <h2>\r\n                        <input\r\n                          id=\"character_name\"\r\n                          placeholder={character.character_name}\r\n                          type=\"text\"\r\n                          value={values.character_name}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h2>\r\n                      <div className=\"group\"></div>\r\n                      <select\r\n                        name=\"importance\"\r\n                        value={values.importance}\r\n                        onChange={handleChange}\r\n                        onBlur={handleChange}\r\n                      >\r\n                        <option value=\"\" label=\"Select one\" />\r\n                        <option value=\"Lead\" label=\"Lead\" />\r\n                        <option value=\"Main\" label=\"Main\" />\r\n                        <option value=\"Side\" label=\"Side\" />\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Author</span>\r\n                        </div>\r\n                        <input\r\n                          id=\"author\"\r\n                          placeholder={character.author}\r\n                          type=\"text\"\r\n                          value={values.author}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Gender</span>\r\n                        </div>\r\n\r\n                        <select\r\n                          name=\"gender\"\r\n                          value={values.gender}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select gender\" />\r\n                          <option value=\"M\" label=\"M\" />\r\n                          <option value=\"F\" label=\"F\" />\r\n                          <option value=\"Enby\" label=\"Enby\" />\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Pairing</span>\r\n                        </div>\r\n                        <input\r\n                          id=\"pairing_qpp_or_romantic\"\r\n                          placeholder={character.pairing_qpp_or_romantic}\r\n                          type=\"text\"\r\n                          value={values.pairing_qpp_or_romantic}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Series</span>\r\n                        </div>\r\n                        <input\r\n                          id=\"main_storyseries\"\r\n                          placeholder={character.main_storyseries}\r\n                          type=\"text\"\r\n                          value={values.main_storyseries}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Type of Rep</span>\r\n                        </div>\r\n\r\n                        <select\r\n                          name=\"type_of_rep\"\r\n                          value={values.type_of_rep}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Word of God\" label=\"Word of God\" />\r\n                          <option value=\"On Page\" label=\"On Page\" />\r\n                          <option value=\"Word Used\" label=\"Word Used\" />\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Romantic orientation</span>\r\n                        </div>\r\n                        <select\r\n                          name=\"romantic_orientation\"\r\n                          value={values.romantic_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Alloromantic\" label=\"Alloromantic\" />\r\n                          <option value=\"Aroflux\" label=\"Aroflux\" />\r\n                          <option value=\"Aromantic\" label=\"Aromantic\" />\r\n                          <option value=\"Arospec\" label=\"Arospec\" />\r\n                          <option value=\"Biromantic\" label=\"Biromantic\" />\r\n                          <option value=\"Greyromantic\" label=\"Grayromantic\" />\r\n                          <option value=\"Demiromantic\" label=\"Demiromantic\" />\r\n                          <option\r\n                            value=\"Heteroromantic\"\r\n                            label=\"Heteroromantic\"\r\n                          />\r\n                          <option value=\"Homoromantic\" label=\"Homoromantic\" />\r\n                          <option value=\"Panromantic\" label=\"Panromantic\" />\r\n                          <option value=\"Queer\" label=\"Queer\" />\r\n                          <option value=\"WTFRomantic\" label=\"WTFRomantic\" />\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Sexual Orientation</span>\r\n                        </div>\r\n\r\n                        <select\r\n                          name=\"sexual_orientation\"\r\n                          value={values.sexual_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Allosexual\" label=\"Allosexual\" />\r\n                          <option value=\"Asexual\" label=\"Asexual\" />\r\n                          <option value=\"Acespec\" label=\"Acespec\" />\r\n                          <option value=\"Demisexual\" label=\"Demisexual\" />\r\n                          <option value=\"Bisexual\" label=\"Bisexual\" />\r\n                          <option value=\"Gay\" label=\"Gay\" />\r\n                          <option value=\"Gray-asexual\" label=\"Graysexual\" />\r\n                          <option value=\"Heterosexual\" label=\"Heterosexual\" />\r\n                          <option value=\"Pansexual\" label=\"Pansexual\" />\r\n                          <option value=\"Queer\" label=\"Queer\" />\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Genre</span>\r\n                        </div>\r\n                        <input\r\n                          id=\"genre\"\r\n                          placeholder={character.genre}\r\n                          type=\"text\"\r\n                          value={values.genre}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <div className=\"group\">\r\n                        <p>\r\n                          <span>Relationships</span>\r\n                        </p>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"relationships\"\r\n                        placeholder={character.relationships}\r\n                        type=\"text\"\r\n                        value={values.relationships}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <div className=\"group\">\r\n                        <p>\r\n                          <span>Notes & Warnings</span>\r\n                        </p>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder={character.rep_noteswarnings}\r\n                        type=\"text\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <div className=\"group\">\r\n                        <p>\r\n                          <span>Cover</span>\r\n                        </p>\r\n                      </div>\r\n                      <input\r\n                        id=\"cover\"\r\n                        placeholder={character.cover}\r\n                        type=\"text\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"buttons-add\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Add Character to Database\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-review\\suggested-review.js",["261","262","263","264","265","266","267","268"],"import React from \"react\";\r\nimport \"./suggested-review.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport {\r\n  fazerRequisicaoComBody,\r\n  fetchWithToken,\r\n  fetchWithTokenNoBody,\r\n} from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedReview() {\r\n  const [review, setReview] = React.useState({});\r\n  const [token, setToken] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/suggest/reviews/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setReview(resJson.data.review[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Suggested Review</h3>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              review_for: review.review_for,\r\n              reviewer: review.reviewer,\r\n              ownvoice_for: review.ownvoice_for,\r\n              link: review.link,\r\n              character_id: review.character_id,\r\n            }}\r\n            onSubmit={(values) => {\r\n              values.character_id = review.character_id;\r\n              console.log(JSON.stringify(values, null, 2));\r\n              console.log(review.character_id);\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/reviews`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/suggest/reviews/${review.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"ReviewInfo\">\r\n                    <div className=\"container\">\r\n                      <div className=\"content-hundred\">\r\n                        <div className=\"block\">\r\n                          <label>\r\n                            Review for\r\n                            <input\r\n                              id=\"review_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Review for\"\r\n                              value={values.review_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n\r\n                          <label>\r\n                            Link\r\n                            <input\r\n                              id=\"link\"\r\n                              type=\"text\"\r\n                              placeholder=\"Link\"\r\n                              value={values.link}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <span className=\"block\">\r\n                          <label>\r\n                            Reviewer\r\n                            <input\r\n                              id=\"reviewer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Reviewer\"\r\n                              value={values.reviewer}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            Ownvoices for\r\n                            <input\r\n                              id=\"ownvoices_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Ownvoice for\"\r\n                              value={values.ownvoice_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    onClick={() => {\r\n                      fetchWithTokenNoBody(\r\n                        `https://aroacedb-back.herokuapp.com/suggest/reviews/${review.id}`,\r\n                        \"DELETE\",\r\n                        token\r\n                      )\r\n                        .then((res) => res.json())\r\n                        .then((resJson) => {\r\n                          console.log(resJson);\r\n                          history.push(\"/success\");\r\n                        });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  <button type=\"submit\" className=\"review-right\">\r\n                    Add to Database\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-review\\add-review.js",["269","270","271","272","273","274"],"import React from \"react\";\r\nimport \"./add-review.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function AddReview() {\r\n  const { params } = useRouteMatch();\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Add a Review</h3>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              review_for: \"\",\r\n              reviewer: \"\",\r\n              ownvoice_for: \"\",\r\n              link: \"\",\r\n              character_id: params.id,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/reviews`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"ReviewInfo\">\r\n                    <div className=\"container\">\r\n                      <div className=\"content-hundred\">\r\n                        <div className=\"block\">\r\n                          <label>\r\n                            Review for\r\n                            <input\r\n                              id=\"review_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Review for\"\r\n                              value={values.review_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n\r\n                          <label>\r\n                            Link\r\n                            <input\r\n                              id=\"link\"\r\n                              type=\"text\"\r\n                              placeholder=\"Link\"\r\n                              value={values.link}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <span className=\"block\">\r\n                          <label>\r\n                            Reviewer\r\n                            <input\r\n                              id=\"reviewer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Reviewer\"\r\n                              value={values.reviewer}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            Ownvoices for\r\n                            <input\r\n                              id=\"ownvoices_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Ownvoice for\"\r\n                              value={values.ownvoice_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"review-right\">\r\n                    Add Review to Database\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-character\\suggest-character.js",["275","276","277","278"],"import React, { useState } from \"react\";\r\nimport { fetchWithBody } from \"../../utils/fetch\";\r\nimport \"./suggest-character.css\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nfunction SuggestCharacter() {\r\n  const history = useHistory();\r\n  const [token, setToken] = useState(\"\");\r\n  const [characterCheck, setCharacterCheck] = React.useState(\"\");\r\n  const [storyCheck, setStoryCheck] = React.useState(\"\");\r\n  const [reviewCheck, setReviewCheck] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    fetch(\"https://aroacedb-back.herokuapp.com/permissions\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setCharacterCheck(resJson.data.character.checked);\r\n        setStoryCheck(resJson.data.story.checked);\r\n        setReviewCheck(resJson.data.review.checked);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestCharacter\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggest-container\">\r\n        <div className=\"suggest\">\r\n          <h2 className=\"title\">Suggest a character</h2>\r\n          {characterCheck ? (\r\n            <Formik\r\n              initialValues={{\r\n                character_name: \"\",\r\n                author: \"\",\r\n                gender: \"\",\r\n                importance: \"\",\r\n                pairing_qpp_or_romantic: \"\",\r\n                main_storyseries: \"\",\r\n                type_of_rep: \"\",\r\n                romantic_orientation: \"\",\r\n                sexual_orientation: \"\",\r\n                genre: \"\",\r\n                relationships: \"\",\r\n                rep_noteswarnings: \"\",\r\n                cover: \"\",\r\n                reference: \"\",\r\n              }}\r\n              onSubmit={(values) => {\r\n                console.log(JSON.stringify(values, null, 2));\r\n                fetchWithBody(\r\n                  \"https://aroacedb-back.herokuapp.com/suggest/characters\",\r\n                  \"POST\",\r\n                  values\r\n                )\r\n                  .then((res) => res.json())\r\n                  .then((resJson) => {\r\n                    console.log(resJson);\r\n                    history.push(\"/success\");\r\n                  });\r\n              }}\r\n            >\r\n              {(props) => {\r\n                const {\r\n                  values,\r\n                  isSubmitting,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                } = props;\r\n                return (\r\n                  <form onSubmit={handleSubmit}>\r\n                    <div className=\"content\">\r\n                      <p>\r\n                        Welcome to the “Suggest a Character” page. Before you\r\n                        fill out the form, please remember all entries meet\r\n                        these criterias:\r\n                      </p>\r\n                      <ul>\r\n                        <li>\r\n                          Prose only (no films, tv series, (web)comics, etc.)\r\n                        </li>\r\n                        <li>\r\n                          Currently published original fiction (online, digital,\r\n                          in print)\r\n                        </li>\r\n                        <li>Confirmed characters only</li>\r\n                      </ul>\r\n\r\n                      <p>\r\n                        Every field has a tooltip, so check those out if you’re\r\n                        unsure what to fill in! With all of that said, thank you\r\n                        so much for your suggestion and help.\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"suggest-character-info\">\r\n                      <div className=\"line\">\r\n                        <h2>\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-name\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-name\"\r\n                              effect=\"solid\"\r\n                              place=\"top\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">Character’s name</div>\r\n                            </ReactTooltip>\r\n                          </div>\r\n                          <input\r\n                            id=\"character_name\"\r\n                            placeholder=\"Insert Character Name\"\r\n                            type=\"text\"\r\n                            value={values.character_name}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </h2>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-importance\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-importance\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Lead:</strong>The character is at the\r\n                                  heart of the story’s central storyline\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Main:</strong>The character plays an\r\n                                  important role in the story and is frequently\r\n                                  on page\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Lead:</strong>The character plays a\r\n                                  minor role in the story\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                        </div>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"line\">\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-author\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-author\"\r\n                              effect=\"solid\"\r\n                              place=\"top\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">Author’s name</div>\r\n                            </ReactTooltip>\r\n                            <span>Author</span>\r\n                          </div>\r\n                          <input\r\n                            id=\"author\"\r\n                            placeholder=\"Author\"\r\n                            type=\"text\"\r\n                            value={values.author}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </div>\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-tip\r\n                              data-for=\"tooltip-gender\"\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-gender\"\r\n                              effect=\"solid\"\r\n                              place=\"top\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                Character’s gender (nonbinary characters are\r\n                                grouped)\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Gender</span>\r\n                          </div>\r\n\r\n                          <select\r\n                            name=\"gender\"\r\n                            value={values.gender}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select gender\" />\r\n                            <option value=\"M\" label=\"M\" />\r\n                            <option value=\"F\" label=\"F\" />\r\n                            <option value=\"Enby\" label=\"Enby\" />\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-pairing\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-pairing\"\r\n                              effect=\"solid\"\r\n                              place=\"top\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                Write only the letters of the genders involved,\r\n                                in the order of M, then F, then NB, i.e. F/NB or\r\n                                M/F/F\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Pairing</span>\r\n                          </div>\r\n                          <input\r\n                            id=\"pairing_qpp_or_romantic\"\r\n                            placeholder=\"Insert Pairing\"\r\n                            type=\"text\"\r\n                            value={values.pairing_qpp_or_romantic}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"line\">\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-main-storyseries\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-main-storyseries\"\r\n                              effect=\"solid\"\r\n                              place=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                Name of the series (if applicable). Short\r\n                                stories in an anthology can list the anthology\r\n                                name here.\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Series</span>\r\n                          </div>\r\n                          <input\r\n                            id=\"main_storyseries\"\r\n                            placeholder=\"Insert Series\"\r\n                            type=\"text\"\r\n                            value={values.main_storyseries}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </div>\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-type\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-type\"\r\n                              effect=\"solid\"\r\n                              place=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                <ul>\r\n                                  <li>\r\n                                    <strong>Word of God:</strong>The character’s\r\n                                    sexuality is not explicit on page, but the\r\n                                    author has confirmed it.\r\n                                  </li>\r\n                                  <li>\r\n                                    <strong>On page:</strong>The character’s\r\n                                    sexuality is explicitly demonstrated within\r\n                                    the text. It should be showed or discussed\r\n                                    to an extent that makes it clear to the\r\n                                    readers.\r\n                                  </li>\r\n                                  <li>\r\n                                    <strong>Word used:</strong>The identity is\r\n                                    stated using the actual word (usually also\r\n                                    On Page)\r\n                                  </li>\r\n                                </ul>\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Type of Rep</span>\r\n                          </div>\r\n\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"line\">\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-romantic\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-romantic\"\r\n                              effect=\"solid\"\r\n                              place=\"top\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                Leave blank if you're unsure. If a specific\r\n                                aromantic label is used but not listed here,\r\n                                pick \"Arospec\" and write us the label in the Rep\r\n                                Notes & Warnings section\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Romantic orientation</span>\r\n                          </div>\r\n\r\n                          <select\r\n                            name=\"romantic_orientation\"\r\n                            value={values.romantic_orientation}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Alloromantic\" label=\"Alloromantic\" />\r\n                            <option value=\"Aroflux\" label=\"Aroflux\" />\r\n                            <option value=\"Aromantic\" label=\"Aromantic\" />\r\n                            <option value=\"Arospec\" label=\"Arospec\" />\r\n                            <option value=\"Biromantic\" label=\"Biromantic\" />\r\n                            <option value=\"Greyromantic\" label=\"Grayromantic\" />\r\n                            <option value=\"Demiromantic\" label=\"Demiromantic\" />\r\n                            <option\r\n                              value=\"Heteroromantic\"\r\n                              label=\"Heteroromantic\"\r\n                            />\r\n                            <option value=\"Homoromantic\" label=\"Homoromantic\" />\r\n                            <option value=\"Panromantic\" label=\"Panromantic\" />\r\n                            <option value=\"Queer\" label=\"Queer\" />\r\n                            <option value=\"WTFRomantic\" label=\"WTFRomantic\" />\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-sexual\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-sexual\"\r\n                              effect=\"solid\"\r\n                              place=\"top\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                Leave blank if you're unsure. If a specific\r\n                                asexual label is used but not listed here, pick\r\n                                \"Acespec\" and write us the label in the Rep\r\n                                Notes & Warnings section\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Sexual Orientation</span>\r\n                          </div>\r\n                          <select\r\n                            name=\"sexual_orientation\"\r\n                            value={values.sexual_orientation}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Allosexual\" label=\"Allosexual\" />\r\n                            <option value=\"Asexual\" label=\"Asexual\" />\r\n                            <option value=\"Acespec\" label=\"Acespec\" />\r\n                            <option value=\"Demisexual\" label=\"Demisexual\" />\r\n                            <option value=\"Bisexual\" label=\"Bisexual\" />\r\n                            <option value=\"Gay\" label=\"Gay\" />\r\n                            <option value=\"Gray-asexual\" label=\"Graysexual\" />\r\n                            <option value=\"Heterosexual\" label=\"Heterosexual\" />\r\n                            <option value=\"Pansexual\" label=\"Pansexual\" />\r\n                            <option value=\"Queer\" label=\"Queer\" />\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"line\">\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"genre-field\"\r\n                              data-tip={`Story's literary genre. List in alphabetical order, i.e. \"Contemporary, Romance, Young Adult\".`}\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"genre-field\"\r\n                              effect=\"solid\"\r\n                              place=\"right\"\r\n                              type=\"dark\"\r\n                            />\r\n                            <span>Genre</span>\r\n                          </div>\r\n                          <input\r\n                            id=\"genre\"\r\n                            placeholder=\"Insert Genres\"\r\n                            type=\"text\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div clasName=\"square\">\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"relationships\"\r\n                            data-tip={`Please list general terms, such as \"Friendship\", \"Mentor\", or \"Family\", \"Romance\" that describe the most important relationships to the character.`}\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"relationships\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          />\r\n                          <p>\r\n                            <span>Relationships</span>\r\n                          </p>\r\n                        </div>\r\n                        <textarea\r\n                          id=\"relationships\"\r\n                          placeholder=\"Insert Relationships\"\r\n                          type=\"text\"\r\n                          value={values.relationships}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n\r\n                      <div clasName=\"square\">\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"noteswarnings\"\r\n                            data-tip=\"Any noteworthy information about the representation, whether it is tropes (exile or dead ace, allo saviour, etc.) or facets of it (sex repulsed/averse/positive, touch averse, etc.).\"\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"noteswarnings\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          />\r\n                          <p>\r\n                            <span>Notes & Warnings</span>\r\n                          </p>\r\n                        </div>\r\n                        <textarea\r\n                          id=\"rep_noteswarnings\"\r\n                          placeholder=\"Insert Representation Notes & Warnings\"\r\n                          type=\"text\"\r\n                          value={values.rep_noteswarnings}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n\r\n                      <div clasName=\"square\">\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-ref\"\r\n                            data-tip=\"If there is an author’s post/tweet, a review, or a list where you heard of this character being aspec, please link to it!\"\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-ref\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          />\r\n                          <p>\r\n                            <span>References to mention of representation</span>\r\n                          </p>\r\n                        </div>\r\n\r\n                        <textarea\r\n                          id=\"reference\"\r\n                          placeholder=\"Insert references\"\r\n                          type=\"text\"\r\n                          value={values.reference}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n\r\n                      <div clasName=\"square\">\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"cover\"\r\n                            data-tip=\"URL to cover image.\"\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"cover\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          />\r\n                          <p>\r\n                            <span>Cover</span>\r\n                          </p>\r\n                        </div>\r\n                        <input\r\n                          id=\"cover\"\r\n                          placeholder=\"cover\"\r\n                          type=\"text\"\r\n                          value={values.cover}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"suggest-review\">\r\n                      <p>\r\n                        Once the character has been accepted to the database you\r\n                        will be able to suggest reviews and stories for them!\r\n                      </p>\r\n                    </div>\r\n\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Suggest Character\r\n                    </button>\r\n                  </form>\r\n                );\r\n              }}\r\n            </Formik>\r\n          ) : (\r\n            \"We are not accepting character suggestions at this moment.\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SuggestCharacter;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-story\\suggest-story.js",["279","280","281","282","283","284","285","286","287"],"import React from \"react\";\r\nimport \"./suggest-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fazerRequisicaoComBody } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default function SuggestStory() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    fetch(`https://aroacedb-back.herokuapp.com/stories/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        //setCharacter(resJson.data.character[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Suggest a Story</h3>\r\n          <Formik\r\n            initialValues={{\r\n              story_title: \"\",\r\n              series_or_anthology: \"\",\r\n              genre: \"\",\r\n              story_length: \"\",\r\n              type_of_rep: \"\",\r\n              character_importance: \"\",\r\n              rep_noteswarnings: \"\",\r\n              other_noteswarnings: \"\",\r\n              cover: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              values.character_id = params.id;\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetch(\"https://aroacedb-back.herokuapp.com/suggest/stories\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n              })\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-story-title\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-story-title\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">Story or book title</div>\r\n                          </ReactTooltip>\r\n                          <label>Story title</label>\r\n                        </div>\r\n\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-story-length\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-story-length\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              {\" \"}\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Short story:</strong>The character is\r\n                                  at the heart of the story’s central storyline\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Novella:</strong>The character plays\r\n                                  an important role in the story and is\r\n                                  frequently on page\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Novel (short):</strong>The character\r\n                                  plays a minor role in the story\r\n                                </li>\r\n\r\n                                <li>\r\n                                  <strong>Novel (long):</strong>More than 80,000\r\n                                  words\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Anthology:</strong>Short story is part\r\n                                  of an anthology\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Webseries:</strong>\r\n                                  Published in several installments on the\r\n                                  internet (blog, Wattpad, etc.)\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Story length</label>\r\n                        </div>\r\n                        <span>\r\n                          <input\r\n                            id=\"story_length\"\r\n                            type=\"text\"\r\n                            placeholder=\"Story length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-character-importance\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-character-importance\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Lead:</strong>The character is at the\r\n                                  heart of the story’s central storyline\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Main:</strong>The character plays an\r\n                                  important role in the story and is frequently\r\n                                  on page\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Lead:</strong>The character plays a\r\n                                  minor role in the story\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Character importance</label>\r\n                        </div>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-series\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-series\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              Name of the series (if applicable). Short stories\r\n                              in an anthology can list the anthology name here.\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Series title</label>\r\n                        </div>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-genres\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-genres\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">{`Story's literary genre. List in alphabetical order, i.e. \"Contemporary, Romance, Young Adult\".`}</div>\r\n                          </ReactTooltip>\r\n                          <label>Genres</label>\r\n                        </div>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-type\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-type\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Word of God:</strong>The character’s\r\n                                  sexuality is not explicit on page, but the\r\n                                  author has confirmed it.\r\n                                </li>\r\n                                <li>\r\n                                  <strong>On page:</strong>The character’s\r\n                                  sexuality is explicitly demonstrated within\r\n                                  the text. It should be showed or discussed to\r\n                                  an extent that makes it clear to the readers.\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Word used:</strong>The identity is\r\n                                  stated using the actual word (usually also On\r\n                                  Page)\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Type of Rep</label>\r\n                        </div>\r\n                        <span className=\"to-capitalize\">\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-repnoteswarnings\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-repnoteswarnings\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">\r\n                            Any noteworthy information about the representation,\r\n                            whether it is tropes (exile or dead ace, allo\r\n                            saviour, etc.) or facets of it (sex\r\n                            repulsed/averse/positive, touch averse, etc.).\r\n                          </div>\r\n                        </ReactTooltip>\r\n                        <label>Rep Notes & Warnings</label>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-othernoteswarnings\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-othernoteswarnings\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">\r\n                            Any noteworthy information about the representation,\r\n                            whether it is tropes (exile or dead ace, allo\r\n                            saviour, etc.) or facets of it (sex\r\n                            repulsed/averse/positive, touch averse, etc.)\r\n                          </div>\r\n                        </ReactTooltip>\r\n                        <label>Other Notes & Warnings</label>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-cover\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-cover\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">URL to cover image.</div>\r\n                        </ReactTooltip>\r\n                        <label>Cover</label>\r\n                      </div>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Suggest\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-story\\suggested-story.js",["288","289","290","291","292","293","294","295"],"import React from \"react\";\r\nimport \"./suggested-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport {\r\n  fazerRequisicaoComBody,\r\n  fetchWithToken,\r\n  fetchWithTokenNoBody,\r\n} from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedStory() {\r\n  const [story, setStory] = React.useState({});\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [cover, setCover] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/suggest/stories/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson.data.story[0]);\r\n        setStory(resJson.data.story[0]);\r\n        console.log(resJson.data.story[0].cover);\r\n        setCover(resJson.data.story[0].cover);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Suggested Story</h3>\r\n\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              story_title: story.story_title,\r\n              series_or_anthology: story.series_or_anthology,\r\n              genre: story.genre,\r\n              story_length: story.story_length,\r\n              type_of_rep: story.type_of_rep,\r\n              character_importance: story.character_importance,\r\n              rep_noteswarnings: story.rep_noteswarnings,\r\n              other_noteswarnings: story.other_noteswarnings,\r\n              character_id: story.character_id,\r\n              cover: story.cover,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/stories`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/suggest/stories/${story.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <label>Story title</label>\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <label>Story length</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"story_length\"\r\n                            type=\"text\"\r\n                            placeholder=\"Story length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Character importance</label>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <label>Series title</label>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <label>Genres</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Type of Rep</label>\r\n                        <span className=\"to-capitalize\">\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <span>Rep Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Other Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Cover</span>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <img src={values.cover} alt=\"cover\" />\r\n                    <div className=\"buttons\">\r\n                      <button\r\n                        onClick={() => {\r\n                          fetchWithTokenNoBody(\r\n                            `https://aroacedb-back.herokuapp.com/suggest/stories/${story.id}`,\r\n                            \"DELETE\",\r\n                            token\r\n                          )\r\n                            .then((res) => res.json())\r\n                            .then((resJson) => {\r\n                              console.log(resJson);\r\n                              history.push(\"/success\");\r\n                            });\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                      <button\r\n                        type=\"submit\"\r\n                        disabled={isSubmitting}\r\n                        className=\"submit\"\r\n                      >\r\n                        Add Story to Database\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\results\\results.js",["296","297","298"],"import React from \"react\";\r\nimport \"./results.css\";\r\nimport SingleCharacter from \"../single-character/single-character\";\r\nimport { ReactComponent as ButtonIcon } from \"../../assets/chevron-right-solid.svg\";\r\nimport Pagination from \"../pagination/pagination\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport Sidebar from \"../sidebar/sidebar\";\r\n\r\nfunction Results() {\r\n  const [search, setSearch] = React.useState([]);\r\n  const [results, setResults] = React.useState([]);\r\n  const [filteredResults, setFilteredResults] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n  const { params } = useRouteMatch();\r\n\r\n  React.useEffect(() => {\r\n    const currentSearch = params.search;\r\n\r\n    if (search) {\r\n      console.log(search);\r\n      fetch(\r\n        `https://aroacedb-back.herokuapp.com/characters?search=${search}&&offset=${\r\n          currentPage * 20 - 20\r\n        }`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((resJson) => {\r\n          console.log(\"first or fake results:\", resJson);\r\n          const newResults = resJson.data.paginated_characters;\r\n\r\n          setResults(newResults);\r\n          setCurrentPage(resJson.data.currentPage);\r\n          setTotalPages(resJson.data.totalPages);\r\n        });\r\n    } else {\r\n      fetch(\r\n        `https://aroacedb-back.herokuapp.com/characters?search=${currentSearch}&&offset=${\r\n          currentPage * 20 - 20\r\n        }`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((resJson) => {\r\n          console.log(\"first or fake results:\", resJson);\r\n          const newResults = resJson.data.paginated_characters;\r\n\r\n          setResults(newResults);\r\n          setCurrentPage(resJson.data.currentPage);\r\n          setTotalPages(resJson.data.totalPages);\r\n        });\r\n    }\r\n    // const result = JSON.parse(localStorage.getItem(\"results\"));\r\n    // console.log(result);\r\n    // setResults(result);\r\n    // const searches = params.search;\r\n    // console.log(searches);\r\n    // console.log(results);\r\n    // fetch(\r\n    //   `https://aroacedb-back.herokuapp.com/characters?search=${search}&&offset=${\r\n    //     currentPage * 20 - 20\r\n    //   }`\r\n    // )\r\n    //   .then((res) => res.json())\r\n    //   .then((resJson) => {\r\n    //     console.log(\"first or fake results:\", resJson);\r\n    //     const newResults = resJson.data.paginated_characters;\r\n\r\n    //     setResults(newResults);\r\n    //     setCurrentPage(resJson.data.currentPage);\r\n    //     setTotalPages(resJson.data.totalPages);\r\n    //   });\r\n  }, [currentPage, search]);\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <Sidebar />\r\n\r\n      <div className=\"home-container\">\r\n        <form\r\n          onSubmit={(event) => {\r\n            console.log(search);\r\n            const newSearch = search.split(\" \");\r\n            console.log(search);\r\n            setCurrentPage(1);\r\n            setTotalPages(0);\r\n            setSearch(newSearch);\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"search...\"\r\n            onBlur={(event) => {\r\n              setSearch(event.target.value);\r\n            }}\r\n          ></input>\r\n          <button>\r\n            <ButtonIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n          </button>\r\n        </form>\r\n        <div className=\"results\">\r\n          {results ? (\r\n            <div>\r\n              {results.map((i) => {\r\n                return (\r\n                  <div>\r\n                    <SingleCharacter character={i} />\r\n                  </div>\r\n                );\r\n              })}\r\n\r\n              <Pagination\r\n                setCurrentPage={setCurrentPage}\r\n                totalPages={totalPages}\r\n                currentPage={currentPage}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-stories\\suggested-stories.js",["299"],"import \"./suggested-stories.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Table from \"../../components/table-character/table\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableStory from \"../../components/table-story/table\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedStories() {\r\n  const [stories, setStories] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/suggest/stories\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        const data = resJson.data.paginated_stories;\r\n        console.log(data);\r\n        setStories(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"SuggestedCharacters\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggested-container\">\r\n        <div className=\"title\">\r\n          <h2>Suggested Stories</h2>\r\n        </div>\r\n        <div className=\"table-container\">\r\n          <TableStory content={stories} type=\"suggest\" id=\"story\" />\r\n        </div>\r\n\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-story\\update-story.js",["300","301","302","303","304","305"],"import React from \"react\";\r\nimport \"./update-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function UpdateStory() {\r\n  const [story, setStory] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n    fetch(`https://aroacedb-back.herokuapp.com/stories/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson.data.story[0]);\r\n\r\n        setStory(resJson.data.story[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Update Story</h3>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              story_title: story.story_title,\r\n              series_or_anthology: story.series_or_anthology,\r\n              genre: story.genre,\r\n              story_length: story.story_length,\r\n              type_of_rep: story.type_of_rep,\r\n              character_importance: story.character_importance,\r\n              rep_noteswarnings: story.rep_noteswarnings,\r\n              other_noteswarnings: story.other_noteswarnings,\r\n              cover: story.cover,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/stories/${story.id}`,\r\n                \"PUT\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <label>Story title</label>\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <label>Story length</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"story_length\"\r\n                            type=\"text\"\r\n                            placeholder=\"Story length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Character importance</label>\r\n                        <input\r\n                          id=\"chracter_importance\"\r\n                          type=\"text\"\r\n                          placeholder=\"Character importance\"\r\n                          value={values.character_importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <label>Series title</label>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <label>Genres</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Type of Rep</label>\r\n                        <span className=\"to-capitalize\">\r\n                          <input\r\n                            id=\"type_of_rep\"\r\n                            type=\"text\"\r\n                            placeholder=\"type of rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <span>Rep Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Other Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Cover</span>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Update\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-story\\add-story.js",["306","307","308"],"import React from \"react\";\r\nimport \"./add-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function AddStory() {\r\n  const [token, setToken] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Add Story</h3>\r\n\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              story_title: \"\",\r\n              series_or_anthology: \"\",\r\n              genre: \"\",\r\n              story_length: \"\",\r\n              type_of_rep: \"\",\r\n              character_importance: \"\",\r\n              rep_noteswarnings: \"\",\r\n              other_noteswarnings: \"\",\r\n              character_id: params.id,\r\n              cover: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/stories`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(`/add-review/${params.id}`);\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <label>Story title</label>\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <label>Story length</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"story_length\"\r\n                            type=\"text\"\r\n                            placeholder=\"Story length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Character importance</label>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <label>Series title</label>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <label>Genres</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Type of Rep</label>\r\n                        <span className=\"to-capitalize\">\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <span>Rep Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Other Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Cover</span>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Add Story to Database\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\character\\character.js",["309"],"import React from \"react\";\r\nimport \"./character.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Stories from \"../../components/stories/stories\";\r\nimport Reviews from \"../../components/reviews/reviews\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SingleCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const [stories, setStories] = React.useState([]);\r\n  const [reviews, setReviews] = React.useState([]);\r\n  const { params } = useRouteMatch();\r\n\r\n  React.useEffect(() => {\r\n    fetch(`https://aroacedb-back.herokuapp.com/characters/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson.data.character[0]);\r\n        setCharacter(resJson.data.character[0]);\r\n        console.log(character);\r\n        console.log(\"params\", params.id);\r\n      });\r\n\r\n    fetch(`https://aroacedb-back.herokuapp.com/stories/character/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const possibleStories = resJson.data.stories;\r\n        if (possibleStories.length !== 0) {\r\n          console.log(possibleStories);\r\n          setStories(possibleStories);\r\n        }\r\n      });\r\n\r\n    fetch(`https://aroacedb-back.herokuapp.com/reviews/character/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        const possibleReviews = resJson.data.reviews;\r\n        console.log(resJson);\r\n        if (possibleReviews.length !== 0) {\r\n          console.log(possibleReviews);\r\n          setReviews(possibleReviews);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Character\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"character-container\">\r\n        <CharacterInfo character={character} />\r\n        {console.log(params.id)}\r\n        <Stories stories={stories} character_id={params.id} />\r\n        <Reviews reviews={reviews} character_id={params.id} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\utils\\fetch.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\sidebar\\sidebar.js",["310","311","312"],"import React from \"react\";\r\nimport \"./sidebar.css\";\r\nimport { ReactComponent as HomeIcon } from \"../../assets/home-solid.svg\";\r\nimport { ReactComponent as DatabaseIcon } from \"../../assets/database-solid.svg\";\r\nimport { ReactComponent as FeatherIcon } from \"../../assets/feather-solid.svg\";\r\nimport { ReactComponent as BookmarkIcon } from \"../../assets/bookmark-solid.svg\";\r\nimport { ReactComponent as LoginIcon } from \"../../assets/user-cog-solid.svg\";\r\n\r\nexport default function Sidebar() {\r\n  const [token, setToken] = React.useState(\"\");\r\n\r\n  const [characterCheck, setCharacterCheck] = React.useState(\"\");\r\n  const [storyCheck, setStoryCheck] = React.useState(\"\");\r\n  const [reviewCheck, setReviewCheck] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n\r\n    fetch(\"https://aroacedb-back.herokuapp.com/permissions\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setCharacterCheck(resJson.data.character.checked);\r\n        setStoryCheck(resJson.data.story.checked);\r\n        setReviewCheck(resJson.data.review.checked);\r\n      });\r\n  }, [characterCheck]);\r\n  return (\r\n    <div className=\"SidebarAdmin\">\r\n      <div className=\"sidebar-container\">\r\n        <div className=\"icons\"></div>\r\n        <div className=\"sidebar-content\"></div>\r\n        <div className=\"sidebar-true-content\">\r\n          <div className=\"top\">\r\n            <div className=\"title-container\">\r\n              <h1>The Aroace Database</h1>\r\n            </div>\r\n            <div className=\"link-container\">\r\n              <a href=\"/\">\r\n                <HomeIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>Home</span>\r\n              </a>\r\n            </div>\r\n            {token ? (\r\n              <div className=\"link-container\">\r\n                <a href=\"/dashboard\">\r\n                  <BookmarkIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                  <span>Dashboard</span>\r\n                </a>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"link-container\">\r\n              <a href=\"/about\">\r\n                <DatabaseIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>About the database</span>\r\n              </a>\r\n            </div>\r\n            {characterCheck ? (\r\n              <div className=\"link-container\">\r\n                <a href=\"/suggest-character\">\r\n                  <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                  <span>Suggest a character</span>\r\n                </a>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            {token ? (\r\n              <div className=\"div-container\">\r\n                <div className=\"link-container\">\r\n                  <a href=\"/all-characters\">\r\n                    <DatabaseIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                    <span>All characters</span>\r\n                  </a>\r\n                </div>\r\n                <div className=\"link-container\">\r\n                  <a href=\"/suggested-characters\">\r\n                    <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                    <span>Suggested characters</span>\r\n                  </a>\r\n                </div>\r\n\r\n                <div className=\"link-container\">\r\n                  <a href=\"/suggested-stories\">\r\n                    <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                    <span>Suggested stories</span>\r\n                  </a>\r\n                </div>\r\n\r\n                <div className=\"link-container\">\r\n                  <a href=\"/suggested-reviews\">\r\n                    <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                    <span>Suggested reviews</span>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          {token ? (\r\n            <div className=\"link-container\">\r\n              <a\r\n                href=\"/\"\r\n                onClick={() => {\r\n                  localStorage.removeItem(\"token\");\r\n                }}\r\n              >\r\n                <LoginIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>Logout</span>\r\n              </a>\r\n            </div>\r\n          ) : (\r\n            <div className=\"link-container\">\r\n              <a href=\"/login\">\r\n                <LoginIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>Admin Login</span>\r\n              </a>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\mobile-header\\mobile-header.js",["313"],"import React from \"react\";\r\nimport \"./mobile-header.css\";\r\nimport { ReactComponent as Bars } from \"../../assets/bars-solid.svg\";\r\nimport { ReactComponent as Close } from \"../../assets/times-solid.svg\";\r\n\r\nfunction MobileHeader() {\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [display, setDisplay] = React.useState(\"menu-container none-display\");\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"Mobile\">\r\n      <header>\r\n        <h1>The Aro Ace Database</h1>\r\n        <Bars\r\n          fill=\"white\"\r\n          height=\"30px\"\r\n          width=\"30px\"\r\n          onClick={() => {\r\n            setDisplay(\"menu-container block-display\");\r\n          }}\r\n        />\r\n      </header>\r\n      <div className={display}>\r\n        <Close\r\n          fill=\"white\"\r\n          height=\"30px\"\r\n          width=\"30px\"\r\n          onClick={() => {\r\n            setDisplay(\"menu-container none-display\");\r\n          }}\r\n        />\r\n        <div className=\"links\">\r\n          <a href=\"/\">Home</a>\r\n          {token ? <a href=\"/dashboard\">Dashboard</a> : \"\"}\r\n          <a href=\"/about\">About</a>\r\n          <a href=\"/suggest-character\">Suggest a character</a>\r\n\r\n          {token ? (\r\n            <div className=\"more-links\">\r\n              <a href=\"/all-characters\">All characters</a>\r\n              <a href=\"/suggested-characters\">Suggested characters</a>\r\n              <a href=\"/suggested-stories\">Suggested stories</a>\r\n              <a href=\"/suggested-reviews\">Suggested Reviews</a>\r\n              <a\r\n                href=\"/\"\r\n                onClick={() => {\r\n                  localStorage.removeItem(\"token\");\r\n                }}\r\n              >\r\n                Logout\r\n              </a>\r\n            </div>\r\n          ) : (\r\n            <a href=\"/login\">Login Admin</a>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MobileHeader;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\single-character\\single-character.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\stats\\stats.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-character\\table.js",["314","315","316"],"import RowCharacter from \"../row-character/row\";\r\nimport Row from \"../row-review/row\";\r\nimport RowReview from \"../row-review/row\";\r\nimport RowStory from \"../row-story/row\";\r\nimport \"./table.css\";\r\n\r\nfunction TableCharacter(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        {id === \"character\" ? (\r\n          <tr>\r\n            <th>Character Name</th>\r\n            <th>Author</th>\r\n            <th>More</th>\r\n          </tr>\r\n        ) : id === \"story\" ? (\r\n          <tr>\r\n            <th>Story Title</th>\r\n            <th>Author</th>\r\n          </tr>\r\n        ) : (\r\n          <tr>\r\n            <th>Review for</th>\r\n            <th>Reviewer</th>\r\n          </tr>\r\n        )}\r\n      </thead>\r\n\r\n      <tbody>\r\n        {content.map((c) => {\r\n          return <RowCharacter content={c} type={type} id={id} />;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TableCharacter;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\pagination\\pagination.js",["317"],"import \"./pagination.css\";\r\nimport React from \"react\";\r\n\r\nexport default function Pagination(props) {\r\n  const { totalPages, setCurrentPage, currentPage } = props;\r\n\r\n  const pages = [];\r\n  const montarPaginas = (total) => {\r\n    for (let i = 1; i <= total; i++) {\r\n      pages.push(i);\r\n    }\r\n  };\r\n\r\n  montarPaginas(totalPages);\r\n  return (\r\n    <div className=\"Pagination\">\r\n      {totalPages ? (\r\n        <div className=\"placeholder\">\r\n          {pages.map((page) => {\r\n            return (\r\n              <span\r\n                onClick={() => {\r\n                  setCurrentPage(page);\r\n                }}\r\n              >\r\n                {page}\r\n              </span>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\recent-suggested\\recent-suggested.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\story-info\\story-info.js",["318"],"import \"./story-info.css\";\r\nimport React from \"react\";\r\nimport { fetchWithTokenNoBody } from \"../../utils/fetch\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function StoryInfo(props) {\r\n  const { story } = props;\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"StoryInfo\">\r\n      {story.cover ? (\r\n        <img src={story.cover} alt=\"cover\" />\r\n      ) : (\r\n        <img\r\n          src=\"https://www.globaluniversityalliance.org/wp-content/uploads/2017/10/No-Cover-Image-01.png\"\r\n          alt=\"cover\"\r\n        />\r\n      )}\r\n\r\n      <div className=\"story-container\">\r\n        <div className=\"line\">\r\n          <h4>{story.story_title}</h4>\r\n          <span>\r\n            <span>{story.story_length}</span>\r\n          </span>\r\n        </div>\r\n        <div className=\"line\">\r\n          {story.series_or_anthology === null ? (\r\n            \"No series/anthology\"\r\n          ) : (\r\n            <span>\r\n              in the <span>{story.series_or_anthology} </span>series\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"line\">\r\n          <span>\r\n            <span>{story.genre}</span>\r\n          </span>\r\n          <span>\r\n            <span className=\"to-capitalize\">{story.type_of_rep} Rep</span>\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"line\">\r\n          <span>\r\n            {story.character_importance === null ? (\r\n              \"No info on character importance\"\r\n            ) : (\r\n              <span>{story.character_importance} Character</span>\r\n            )}\r\n          </span>\r\n        </div>\r\n        <p>\r\n          <span>Rep Notes & Warnings</span>\r\n          {story.rep_noteswarnings === null\r\n            ? \"No rep notes or warnings.\"\r\n            : story.rep_noteswarnings}\r\n        </p>\r\n        <p>\r\n          <span>Other Notes & Warnings</span>\r\n          {story.other_noteswarnings === null\r\n            ? \"No other notes or warnings.\"\r\n            : story.other_noteswarnings}\r\n        </p>\r\n        {token ? (\r\n          <div className=\"buttons-story\">\r\n            <button\r\n              onClick={() => {\r\n                fetchWithTokenNoBody(\r\n                  `https://aroacedb-back.herokuapp.com/stories/${story.id}`,\r\n                  \"DELETE\",\r\n                  token\r\n                )\r\n                  .then((res) => res.json())\r\n                  .then((resJson) => {\r\n                    console.log(resJson);\r\n                    window.location.reload();\r\n                  });\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                history.push(\"/update-story/\" + story.id);\r\n              }}\r\n            >\r\n              Update\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\character-info\\character-info.js",["319"],"import \"./character-info.css\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchWithTokenNoBody } from \"../../utils/fetch\";\r\n\r\nexport default function CharacterInfo(props) {\r\n  const { character } = props;\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"CharacterInfo\">\r\n      <h2>{character.character_name}</h2>\r\n      <div className=\"line\">\r\n        <div className=\"chunk\">\r\n          <span>Author</span>\r\n          {character.author}\r\n        </div>\r\n        <div className=\"chunk\">\r\n          <span>Gender</span> {character.gender}\r\n        </div>\r\n        <div className=\"chunk\">\r\n          <span>Pairing</span>\r\n          {character.pairing_qpp_or_romantic == null\r\n            ? \"Not informed/applicable.\"\r\n            : character.pairing_qpp_or_romantic}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"line\">\r\n        <div className=\"chunk\">\r\n          <span>Series</span>{\" \"}\r\n          {character.main_storyseries == null\r\n            ? \"Not informed or not applicable.\"\r\n            : character.main_storyseries}\r\n        </div>\r\n        <div className=\"chunk\">\r\n          <span>Type of Rep</span> {character.type_of_rep}\r\n        </div>\r\n\r\n        <div className=\"chunk\">\r\n          <span>Importance</span> {character.importance}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"line\">\r\n        <div className=\"chunk\">\r\n          <span>Romantic orientation</span>{\" \"}\r\n          {character.romantic_orientation == null\r\n            ? \"Not informed.\"\r\n            : character.romantic_orientation}\r\n        </div>\r\n        <div className=\"chunk\">\r\n          <span>Sexual Orientation</span>{\" \"}\r\n          {character.sexual_orientation == null\r\n            ? \"Not informed.\"\r\n            : character.sexual_orientation}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"line\">\r\n        <div className=\"chunk\">\r\n          <span>Genre</span> {character.genre}\r\n        </div>\r\n      </div>\r\n\r\n      <div clasName=\"square\">\r\n        <p>\r\n          <span>Relationships</span>\r\n          {character.relationships == null\r\n            ? \"Not informed.\"\r\n            : character.relationships}\r\n        </p>\r\n      </div>\r\n\r\n      <div clasName=\"square\">\r\n        <p>\r\n          <span>Notes & Warnings</span>\r\n          {character.rep_noteswarnings == null\r\n            ? \"No warnings.\"\r\n            : character.rep_noteswarnings}\r\n        </p>\r\n      </div>\r\n      {token ? (\r\n        <div className=\"buttons-character\">\r\n          <button\r\n            onClick={() => {\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/characters/${character.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/stories/character/${character.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/reviews/character/${character.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              history.push(\"/update-character/\" + character.id);\r\n            }}\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\stories\\stories.js",["320","321","322","323"],"import \"./stories.css\";\r\nimport React from \"react\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Stories(props) {\r\n  const { stories, character_id } = props;\r\n  const history = useHistory();\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [characterCheck, setCharacterCheck] = React.useState(\"\");\r\n  const [storyCheck, setStoryCheck] = React.useState(\"\");\r\n  const [reviewCheck, setReviewCheck] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n    fetch(\"https://aroacedb-back.herokuapp.com/permissions\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setCharacterCheck(resJson.data.character.checked);\r\n        setStoryCheck(resJson.data.story.checked);\r\n        setReviewCheck(resJson.data.review.checked);\r\n      });\r\n  }, []);\r\n\r\n  const showButtons = () => {\r\n    if (token) {\r\n      return <a href={`/add-story/${character_id}`}>Add Story</a>;\r\n    } else {\r\n      if (storyCheck) {\r\n        console.log(\"aaaaa\");\r\n        return <a href={`/suggest-story/${character_id}`}>Suggest Story</a>;\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Stories\">\r\n      <h3>Stories</h3>\r\n      {stories.map((story) => {\r\n        return <StoryInfo story={story} />;\r\n      })}\r\n      {showButtons()}\r\n      {/* {token ? (\r\n        <a href={`/add-story/${character_id}`}>Add Story</a>\r\n      ) : (\r\n        <a href={`/suggest-story/${character_id}`}>Suggest Story</a>\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\reviews\\reviews.js",["324","325","326"],"import \"./reviews.css\";\r\nimport React from \"react\";\r\nimport ReviewInfo from \"../../components/review-info/review-info\";\r\n\r\nexport default function Reviews(props) {\r\n  const { reviews, character_id } = props;\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [characterCheck, setCharacterCheck] = React.useState(\"\");\r\n  const [storyCheck, setStoryCheck] = React.useState(\"\");\r\n  const [reviewCheck, setReviewCheck] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n\r\n    fetch(\"https://aroacedb-back.herokuapp.com/permissions\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setCharacterCheck(resJson.data.character.checked);\r\n        setStoryCheck(resJson.data.story.checked);\r\n        setReviewCheck(resJson.data.review.checked);\r\n      });\r\n  });\r\n\r\n  const showButtons = () => {\r\n    if (token) {\r\n      return <a href={`/add-review/${character_id}`}>Add Review</a>;\r\n    } else {\r\n      if (reviewCheck) {\r\n        return <a href={`/suggest-review/${character_id}`}>Suggest Review</a>;\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Reviews\">\r\n      <h3>Reviews</h3>\r\n      {reviews.length !== 0\r\n        ? reviews.map((review) => {\r\n            return <ReviewInfo review={review} />;\r\n          })\r\n        : \"No reviews available.\"}\r\n\r\n      {showButtons()}\r\n      {/* {token ? (\r\n        <a href={`/add-review/${character_id}`}>Add Review</a>\r\n      ) : (\r\n        <a href={`/suggest-review/${character_id}`}>Suggest Review</a>\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-story\\table.js",["327","328","329"],"import RowCharacter from \"../row-review/row\";\r\nimport Row from \"../row-review/row\";\r\nimport RowReview from \"../row-review/row\";\r\nimport RowStory from \"../row-story/row\";\r\nimport \"./table.css\";\r\n\r\nfunction TableStory(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        {id === \"character\" ? (\r\n          <tr>\r\n            <th>Character Name</th>\r\n            <th>Author</th>\r\n            <th>Importance</th>\r\n            <th>Romantic Orientation</th>\r\n            <th>Sexual Orientation</th>\r\n            <th>More</th>\r\n          </tr>\r\n        ) : id === \"story\" ? (\r\n          <tr>\r\n            <th>Story Title</th>\r\n            <th>Author</th>\r\n          </tr>\r\n        ) : (\r\n          <tr>\r\n            <th>Review for</th>\r\n            <th>Reviewer</th>\r\n          </tr>\r\n        )}\r\n      </thead>\r\n\r\n      <tbody>\r\n        {content.map((c) => {\r\n          return <RowStory content={c} type={type} id={id} />;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TableStory;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-review\\table.js",["330","331","332"],"import RowCharacter from \"../row-review/row\";\r\nimport Row from \"../row-review/row\";\r\nimport RowReview from \"../row-review/row\";\r\nimport RowStory from \"../row-story/row\";\r\nimport \"./table.css\";\r\n\r\nfunction TableReview(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        {id === \"character\" ? (\r\n          <tr>\r\n            <th>Character Name</th>\r\n            <th>Author</th>\r\n            <th>Importance</th>\r\n            <th>Romantic Orientation</th>\r\n            <th>Sexual Orientation</th>\r\n            <th>More</th>\r\n          </tr>\r\n        ) : id === \"story\" ? (\r\n          <tr>\r\n            <th>Story Title</th>\r\n            <th>Author</th>\r\n          </tr>\r\n        ) : (\r\n          <tr>\r\n            <th>Review for</th>\r\n            <th>Reviewer</th>\r\n          </tr>\r\n        )}\r\n      </thead>\r\n\r\n      <tbody>\r\n        {content.map((c) => {\r\n          return <RowReview content={c} type={type} id={id} />;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TableReview;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-story\\row.js",["333","334"],"import \"./row.css\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\n\r\nexport default function RowStory(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <tr className=\"tbody\">\r\n      <td>{content.story_title}</td>\r\n      <td>{content.author}</td>\r\n      <td>\r\n        <a href={`/suggested-story/${content.id}`}>\r\n          <img src={ExternalLink} alt=\"profile link\" />\r\n        </a>\r\n      </td>\r\n    </tr>\r\n\r\n    // <tr class=\"tbody\">\r\n    //   {id === \"character\" ? (\r\n    //     <div>\r\n    //   <td>{content.character_name}</td>\r\n    //   <td>{content.author}</td>\r\n    //   <td>{content.importance}</td>\r\n    //   <td>{content.romantic_orientation}</td>\r\n    //   <td>{content.sexual_orientation}</td>\r\n    //   <td>\r\n    //     {type === \"regular\" ? (\r\n    //       <a href={`/character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     ) : (\r\n    //       <a href={`/suggested-character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     )}\r\n    //   </td>\r\n    //     </div>\r\n    //   ) : id === \"story\" ? (\r\n    //     <div>\r\n    //       <td>{content.story_title}</td>\r\n    //       <td>{content.author}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-story/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   ) : (\r\n    //     <div>\r\n    //       <td>{content.review_for}</td>\r\n    //       <td>{content.reviewer}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-review/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   )}\r\n    // </tr>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-review\\row.js",["335","336"],"import \"./row.css\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\n\r\nexport default function RowReview(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <tr className=\"tbody\">\r\n      <td>{content.review_for}</td>\r\n      <td>{content.reviewer}</td>\r\n      <td>\r\n        <a href={`/suggested-review/${content.id}`}>\r\n          <img src={ExternalLink} alt=\"profile link\" />\r\n        </a>\r\n      </td>\r\n    </tr>\r\n\r\n    //   ) : (\r\n    //     <tr class=\"tbody\">\r\n    //       <td>{content.review_for}</td>\r\n    //       <td>{content.reviewer}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-review/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </tr>\r\n    //   )}\r\n\r\n    // <tr class=\"tbody\">\r\n    //   {id === \"character\" ? (\r\n    //     <div>\r\n    //   <td>{content.character_name}</td>\r\n    //   <td>{content.author}</td>\r\n    //   <td>{content.importance}</td>\r\n    //   <td>{content.romantic_orientation}</td>\r\n    //   <td>{content.sexual_orientation}</td>\r\n    //   <td>\r\n    //     {type === \"regular\" ? (\r\n    //       <a href={`/character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     ) : (\r\n    //       <a href={`/suggested-character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     )}\r\n    //   </td>\r\n    //     </div>\r\n    //   ) : id === \"story\" ? (\r\n    //     <div>\r\n    //       <td>{content.story_title}</td>\r\n    //       <td>{content.author}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-story/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   ) : (\r\n    //     <div>\r\n    //       <td>{content.review_for}</td>\r\n    //       <td>{content.reviewer}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-review/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   )}\r\n    // </tr>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-character\\row.js",["337"],"import \"./row.css\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\n\r\nexport default function RowCharacter(props) {\r\n  const { content, type, id } = props;\r\n  return (\r\n    <tr className=\"tbody\">\r\n      <td>{content.character_name}</td>\r\n      <td>{content.author}</td>\r\n      <td>\r\n        {type === \"regular\" ? (\r\n          <a href={`/character/${content.id}`}>\r\n            <img src={ExternalLink} alt=\"profile link\" />\r\n          </a>\r\n        ) : (\r\n          <a href={`/suggested-character/${content.id}`}>\r\n            <img src={ExternalLink} alt=\"profile link\" />\r\n          </a>\r\n        )}\r\n      </td>\r\n    </tr>\r\n\r\n    // <tr class=\"tbody\">\r\n    //   {id === \"character\" ? (\r\n    //     <div>\r\n    //   <td>{content.character_name}</td>\r\n    //   <td>{content.author}</td>\r\n    //   <td>{content.importance}</td>\r\n    //   <td>{content.romantic_orientation}</td>\r\n    //   <td>{content.sexual_orientation}</td>\r\n    //   <td>\r\n    //     {type === \"regular\" ? (\r\n    //       <a href={`/character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     ) : (\r\n    //       <a href={`/suggested-character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     )}\r\n    //   </td>\r\n    //     </div>\r\n    //   ) : id === \"story\" ? (\r\n    //     <div>\r\n    //       <td>{content.story_title}</td>\r\n    //       <td>{content.author}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-story/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   ) : (\r\n    //     <div>\r\n    //       <td>{content.review_for}</td>\r\n    //       <td>{content.reviewer}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-review/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   )}\r\n    // </tr>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\review-info\\review-info.js",["338","339","340"],"import \"./review-info.css\";\r\nimport React, { Component } from \"react\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchWithTokenNoBody } from \"../../utils/fetch\";\r\nimport SuggestReview from \"../../pages/suggest-review/suggest-review\";\r\n\r\nexport default function ReviewInfo(props) {\r\n  const { review } = props;\r\n  const history = useHistory();\r\n  const [token, setToken] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"ReviewInfo\">\r\n      <div className=\"container\">\r\n        <div className=\"content\">\r\n          <h4>{review.review_for}</h4>\r\n          <span>\r\n            by {review.reviewer} | Ownvoices for {review.ownvoice_for}.\r\n          </span>\r\n        </div>\r\n\r\n        <a href={review.link}>\r\n          <img src={ExternalLink} alt=\"link para resenha em site externo\" />\r\n        </a>\r\n      </div>\r\n      {token ? (\r\n        <div className=\"buttons-review\">\r\n          <button\r\n            onClick={() => {\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/reviews/${review.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n\r\n                  window.location.reload();\r\n                });\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              history.push(\"/update-review/\" + review.id);\r\n            }}\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"341","replacedBy":"342"},{"ruleId":"343","replacedBy":"344"},{"ruleId":"345","severity":1,"message":"346","line":26,"column":8,"nodeType":"347","messageId":"348","endLine":26,"endColumn":15},{"ruleId":"345","severity":1,"message":"349","line":10,"column":10,"nodeType":"347","messageId":"348","endLine":10,"endColumn":17},{"ruleId":"345","severity":1,"message":"350","line":10,"column":19,"nodeType":"347","messageId":"348","endLine":10,"endColumn":29},{"ruleId":"351","severity":1,"message":"352","line":24,"column":6,"nodeType":"353","endLine":24,"endColumn":8,"suggestions":"354"},{"ruleId":"345","severity":1,"message":"355","line":70,"column":17,"nodeType":"347","messageId":"348","endLine":70,"endColumn":29},{"ruleId":"345","severity":1,"message":"356","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":13},{"ruleId":"345","severity":1,"message":"357","line":6,"column":8,"nodeType":"347","messageId":"348","endLine":6,"endColumn":21},{"ruleId":"345","severity":1,"message":"358","line":1,"column":17,"nodeType":"347","messageId":"348","endLine":1,"endColumn":27},{"ruleId":"345","severity":1,"message":"359","line":7,"column":8,"nodeType":"347","messageId":"348","endLine":7,"endColumn":19},{"ruleId":"345","severity":1,"message":"360","line":8,"column":25,"nodeType":"347","messageId":"348","endLine":8,"endColumn":45},{"ruleId":"345","severity":1,"message":"361","line":17,"column":23,"nodeType":"347","messageId":"348","endLine":17,"endColumn":37},{"ruleId":"345","severity":1,"message":"362","line":19,"column":9,"nodeType":"347","messageId":"348","endLine":19,"endColumn":22},{"ruleId":"345","severity":1,"message":"363","line":31,"column":9,"nodeType":"347","messageId":"348","endLine":31,"endColumn":23},{"ruleId":"345","severity":1,"message":"364","line":44,"column":9,"nodeType":"347","messageId":"348","endLine":44,"endColumn":23},{"ruleId":"345","severity":1,"message":"365","line":4,"column":8,"nodeType":"347","messageId":"348","endLine":4,"endColumn":21},{"ruleId":"345","severity":1,"message":"366","line":6,"column":10,"nodeType":"347","messageId":"348","endLine":6,"endColumn":32},{"ruleId":"345","severity":1,"message":"367","line":8,"column":13,"nodeType":"347","messageId":"348","endLine":8,"endColumn":16},{"ruleId":"345","severity":1,"message":"368","line":9,"column":8,"nodeType":"347","messageId":"348","endLine":9,"endColumn":17},{"ruleId":"345","severity":1,"message":"369","line":15,"column":10,"nodeType":"347","messageId":"348","endLine":15,"endColumn":19},{"ruleId":"345","severity":1,"message":"370","line":15,"column":21,"nodeType":"347","messageId":"348","endLine":15,"endColumn":33},{"ruleId":"345","severity":1,"message":"371","line":53,"column":17,"nodeType":"347","messageId":"348","endLine":53,"endColumn":24},{"ruleId":"345","severity":1,"message":"372","line":54,"column":17,"nodeType":"347","messageId":"348","endLine":54,"endColumn":23},{"ruleId":"345","severity":1,"message":"355","line":55,"column":17,"nodeType":"347","messageId":"348","endLine":55,"endColumn":29},{"ruleId":"345","severity":1,"message":"365","line":4,"column":8,"nodeType":"347","messageId":"348","endLine":4,"endColumn":21},{"ruleId":"345","severity":1,"message":"366","line":7,"column":3,"nodeType":"347","messageId":"348","endLine":7,"endColumn":25},{"ruleId":"345","severity":1,"message":"367","line":12,"column":13,"nodeType":"347","messageId":"348","endLine":12,"endColumn":16},{"ruleId":"351","severity":1,"message":"373","line":30,"column":6,"nodeType":"353","endLine":30,"endColumn":8,"suggestions":"374"},{"ruleId":"345","severity":1,"message":"365","line":4,"column":8,"nodeType":"347","messageId":"348","endLine":4,"endColumn":21},{"ruleId":"345","severity":1,"message":"375","line":6,"column":10,"nodeType":"347","messageId":"348","endLine":6,"endColumn":23},{"ruleId":"345","severity":1,"message":"367","line":8,"column":13,"nodeType":"347","messageId":"348","endLine":8,"endColumn":16},{"ruleId":"351","severity":1,"message":"373","line":25,"column":6,"nodeType":"353","endLine":25,"endColumn":8,"suggestions":"376"},{"ruleId":"345","severity":1,"message":"356","line":4,"column":8,"nodeType":"347","messageId":"348","endLine":4,"endColumn":13},{"ruleId":"345","severity":1,"message":"365","line":4,"column":8,"nodeType":"347","messageId":"348","endLine":4,"endColumn":21},{"ruleId":"345","severity":1,"message":"367","line":8,"column":13,"nodeType":"347","messageId":"348","endLine":8,"endColumn":16},{"ruleId":"345","severity":1,"message":"368","line":9,"column":8,"nodeType":"347","messageId":"348","endLine":9,"endColumn":17},{"ruleId":"351","severity":1,"message":"377","line":29,"column":6,"nodeType":"353","endLine":29,"endColumn":8,"suggestions":"378"},{"ruleId":"345","severity":1,"message":"371","line":65,"column":17,"nodeType":"347","messageId":"348","endLine":65,"endColumn":24},{"ruleId":"345","severity":1,"message":"372","line":66,"column":17,"nodeType":"347","messageId":"348","endLine":66,"endColumn":23},{"ruleId":"345","severity":1,"message":"355","line":67,"column":17,"nodeType":"347","messageId":"348","endLine":67,"endColumn":29},{"ruleId":"345","severity":1,"message":"367","line":8,"column":13,"nodeType":"347","messageId":"348","endLine":8,"endColumn":16},{"ruleId":"345","severity":1,"message":"370","line":12,"column":21,"nodeType":"347","messageId":"348","endLine":12,"endColumn":33},{"ruleId":"345","severity":1,"message":"365","line":4,"column":8,"nodeType":"347","messageId":"348","endLine":4,"endColumn":21},{"ruleId":"345","severity":1,"message":"366","line":7,"column":3,"nodeType":"347","messageId":"348","endLine":7,"endColumn":25},{"ruleId":"345","severity":1,"message":"367","line":12,"column":13,"nodeType":"347","messageId":"348","endLine":12,"endColumn":16},{"ruleId":"345","severity":1,"message":"368","line":13,"column":8,"nodeType":"347","messageId":"348","endLine":13,"endColumn":17},{"ruleId":"351","severity":1,"message":"373","line":33,"column":6,"nodeType":"353","endLine":33,"endColumn":8,"suggestions":"379"},{"ruleId":"345","severity":1,"message":"371","line":80,"column":17,"nodeType":"347","messageId":"348","endLine":80,"endColumn":24},{"ruleId":"345","severity":1,"message":"372","line":81,"column":17,"nodeType":"347","messageId":"348","endLine":81,"endColumn":23},{"ruleId":"345","severity":1,"message":"355","line":82,"column":17,"nodeType":"347","messageId":"348","endLine":82,"endColumn":29},{"ruleId":"345","severity":1,"message":"367","line":7,"column":13,"nodeType":"347","messageId":"348","endLine":7,"endColumn":16},{"ruleId":"345","severity":1,"message":"368","line":9,"column":8,"nodeType":"347","messageId":"348","endLine":9,"endColumn":17},{"ruleId":"351","severity":1,"message":"380","line":22,"column":6,"nodeType":"353","endLine":22,"endColumn":8,"suggestions":"381"},{"ruleId":"345","severity":1,"message":"371","line":58,"column":17,"nodeType":"347","messageId":"348","endLine":58,"endColumn":24},{"ruleId":"345","severity":1,"message":"372","line":59,"column":17,"nodeType":"347","messageId":"348","endLine":59,"endColumn":23},{"ruleId":"345","severity":1,"message":"355","line":60,"column":17,"nodeType":"347","messageId":"348","endLine":60,"endColumn":29},{"ruleId":"345","severity":1,"message":"367","line":9,"column":13,"nodeType":"347","messageId":"348","endLine":9,"endColumn":16},{"ruleId":"345","severity":1,"message":"382","line":14,"column":10,"nodeType":"347","messageId":"348","endLine":14,"endColumn":15},{"ruleId":"345","severity":1,"message":"383","line":16,"column":10,"nodeType":"347","messageId":"348","endLine":16,"endColumn":20},{"ruleId":"345","severity":1,"message":"384","line":17,"column":10,"nodeType":"347","messageId":"348","endLine":17,"endColumn":21},{"ruleId":"345","severity":1,"message":"365","line":4,"column":8,"nodeType":"347","messageId":"348","endLine":4,"endColumn":21},{"ruleId":"345","severity":1,"message":"366","line":6,"column":10,"nodeType":"347","messageId":"348","endLine":6,"endColumn":32},{"ruleId":"345","severity":1,"message":"367","line":8,"column":13,"nodeType":"347","messageId":"348","endLine":8,"endColumn":16},{"ruleId":"345","severity":1,"message":"368","line":9,"column":8,"nodeType":"347","messageId":"348","endLine":9,"endColumn":17},{"ruleId":"345","severity":1,"message":"369","line":14,"column":10,"nodeType":"347","messageId":"348","endLine":14,"endColumn":19},{"ruleId":"345","severity":1,"message":"370","line":14,"column":21,"nodeType":"347","messageId":"348","endLine":14,"endColumn":33},{"ruleId":"351","severity":1,"message":"373","line":25,"column":6,"nodeType":"353","endLine":25,"endColumn":8,"suggestions":"385"},{"ruleId":"345","severity":1,"message":"371","line":66,"column":17,"nodeType":"347","messageId":"348","endLine":66,"endColumn":24},{"ruleId":"345","severity":1,"message":"372","line":67,"column":17,"nodeType":"347","messageId":"348","endLine":67,"endColumn":23},{"ruleId":"345","severity":1,"message":"365","line":4,"column":8,"nodeType":"347","messageId":"348","endLine":4,"endColumn":21},{"ruleId":"345","severity":1,"message":"366","line":7,"column":3,"nodeType":"347","messageId":"348","endLine":7,"endColumn":25},{"ruleId":"345","severity":1,"message":"367","line":12,"column":13,"nodeType":"347","messageId":"348","endLine":12,"endColumn":16},{"ruleId":"345","severity":1,"message":"368","line":13,"column":8,"nodeType":"347","messageId":"348","endLine":13,"endColumn":17},{"ruleId":"345","severity":1,"message":"386","line":19,"column":10,"nodeType":"347","messageId":"348","endLine":19,"endColumn":15},{"ruleId":"351","severity":1,"message":"373","line":35,"column":6,"nodeType":"353","endLine":35,"endColumn":8,"suggestions":"387"},{"ruleId":"345","severity":1,"message":"371","line":86,"column":17,"nodeType":"347","messageId":"348","endLine":86,"endColumn":24},{"ruleId":"345","severity":1,"message":"372","line":87,"column":17,"nodeType":"347","messageId":"348","endLine":87,"endColumn":23},{"ruleId":"345","severity":1,"message":"388","line":12,"column":10,"nodeType":"347","messageId":"348","endLine":12,"endColumn":25},{"ruleId":"345","severity":1,"message":"389","line":12,"column":27,"nodeType":"347","messageId":"348","endLine":12,"endColumn":45},{"ruleId":"351","severity":1,"message":"390","line":72,"column":6,"nodeType":"353","endLine":72,"endColumn":27,"suggestions":"391"},{"ruleId":"345","severity":1,"message":"356","line":4,"column":8,"nodeType":"347","messageId":"348","endLine":4,"endColumn":13},{"ruleId":"345","severity":1,"message":"365","line":4,"column":8,"nodeType":"347","messageId":"348","endLine":4,"endColumn":21},{"ruleId":"345","severity":1,"message":"367","line":7,"column":13,"nodeType":"347","messageId":"348","endLine":7,"endColumn":16},{"ruleId":"345","severity":1,"message":"368","line":8,"column":8,"nodeType":"347","messageId":"348","endLine":8,"endColumn":17},{"ruleId":"351","severity":1,"message":"377","line":29,"column":6,"nodeType":"353","endLine":29,"endColumn":8,"suggestions":"392"},{"ruleId":"345","severity":1,"message":"371","line":69,"column":17,"nodeType":"347","messageId":"348","endLine":69,"endColumn":24},{"ruleId":"345","severity":1,"message":"372","line":70,"column":17,"nodeType":"347","messageId":"348","endLine":70,"endColumn":23},{"ruleId":"351","severity":1,"message":"380","line":18,"column":6,"nodeType":"353","endLine":18,"endColumn":8,"suggestions":"393"},{"ruleId":"345","severity":1,"message":"371","line":60,"column":17,"nodeType":"347","messageId":"348","endLine":60,"endColumn":24},{"ruleId":"345","severity":1,"message":"372","line":61,"column":17,"nodeType":"347","messageId":"348","endLine":61,"endColumn":23},{"ruleId":"351","severity":1,"message":"394","line":47,"column":6,"nodeType":"353","endLine":47,"endColumn":8,"suggestions":"395"},{"ruleId":"345","severity":1,"message":"383","line":13,"column":10,"nodeType":"347","messageId":"348","endLine":13,"endColumn":20},{"ruleId":"345","severity":1,"message":"384","line":14,"column":10,"nodeType":"347","messageId":"348","endLine":14,"endColumn":21},{"ruleId":"351","severity":1,"message":"380","line":28,"column":6,"nodeType":"353","endLine":28,"endColumn":22,"suggestions":"396"},{"ruleId":"351","severity":1,"message":"380","line":14,"column":6,"nodeType":"353","endLine":14,"endColumn":8,"suggestions":"397"},{"ruleId":"345","severity":1,"message":"398","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":11},{"ruleId":"345","severity":1,"message":"399","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":17},{"ruleId":"345","severity":1,"message":"400","line":4,"column":8,"nodeType":"347","messageId":"348","endLine":4,"endColumn":16},{"ruleId":"345","severity":1,"message":"401","line":5,"column":39,"nodeType":"347","messageId":"348","endLine":5,"endColumn":50},{"ruleId":"351","severity":1,"message":"380","line":14,"column":6,"nodeType":"353","endLine":14,"endColumn":8,"suggestions":"402"},{"ruleId":"351","severity":1,"message":"380","line":15,"column":6,"nodeType":"353","endLine":15,"endColumn":8,"suggestions":"403"},{"ruleId":"345","severity":1,"message":"404","line":8,"column":9,"nodeType":"347","messageId":"348","endLine":8,"endColumn":16},{"ruleId":"345","severity":1,"message":"405","line":10,"column":10,"nodeType":"347","messageId":"348","endLine":10,"endColumn":24},{"ruleId":"345","severity":1,"message":"384","line":12,"column":10,"nodeType":"347","messageId":"348","endLine":12,"endColumn":21},{"ruleId":"351","severity":1,"message":"380","line":26,"column":6,"nodeType":"353","endLine":26,"endColumn":8,"suggestions":"406"},{"ruleId":"345","severity":1,"message":"405","line":8,"column":10,"nodeType":"347","messageId":"348","endLine":8,"endColumn":24},{"ruleId":"345","severity":1,"message":"383","line":9,"column":10,"nodeType":"347","messageId":"348","endLine":9,"endColumn":20},{"ruleId":"351","severity":1,"message":"407","line":11,"column":3,"nodeType":"408","endLine":11,"endColumn":18,"suggestions":"409"},{"ruleId":"345","severity":1,"message":"410","line":1,"column":8,"nodeType":"347","messageId":"348","endLine":1,"endColumn":20},{"ruleId":"345","severity":1,"message":"398","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":11},{"ruleId":"345","severity":1,"message":"399","line":3,"column":8,"nodeType":"347","messageId":"348","endLine":3,"endColumn":17},{"ruleId":"345","severity":1,"message":"410","line":1,"column":8,"nodeType":"347","messageId":"348","endLine":1,"endColumn":20},{"ruleId":"345","severity":1,"message":"398","line":2,"column":8,"nodeType":"347","messageId":"348","endLine":2,"endColumn":11},{"ruleId":"345","severity":1,"message":"400","line":4,"column":8,"nodeType":"347","messageId":"348","endLine":4,"endColumn":16},{"ruleId":"345","severity":1,"message":"411","line":5,"column":20,"nodeType":"347","messageId":"348","endLine":5,"endColumn":24},{"ruleId":"345","severity":1,"message":"412","line":5,"column":26,"nodeType":"347","messageId":"348","endLine":5,"endColumn":28},{"ruleId":"345","severity":1,"message":"411","line":5,"column":20,"nodeType":"347","messageId":"348","endLine":5,"endColumn":24},{"ruleId":"345","severity":1,"message":"412","line":5,"column":26,"nodeType":"347","messageId":"348","endLine":5,"endColumn":28},{"ruleId":"345","severity":1,"message":"412","line":5,"column":26,"nodeType":"347","messageId":"348","endLine":5,"endColumn":28},{"ruleId":"345","severity":1,"message":"413","line":2,"column":17,"nodeType":"347","messageId":"348","endLine":2,"endColumn":26},{"ruleId":"345","severity":1,"message":"414","line":6,"column":8,"nodeType":"347","messageId":"348","endLine":6,"endColumn":21},{"ruleId":"351","severity":1,"message":"380","line":16,"column":6,"nodeType":"353","endLine":16,"endColumn":8,"suggestions":"415"},"no-native-reassign",["416"],"no-negated-in-lhs",["417"],"no-unused-vars","'Results' is defined but never used.","Identifier","unusedVar","'stories' is assigned a value but never used.","'setStories' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'filteredResults.length'. Either include it or remove the dependency array.","ArrayExpression",["418"],"'isSubmitting' is assigned a value but never used.","'Table' is defined but never used.","'ReactPaginate' is defined but never used.","'useContext' is defined but never used.","'DataContext' is defined but never used.","'fetchWithTokenNoBody' is defined but never used.","'setPermissions' is assigned a value but never used.","'onChangeValue' is assigned a value but never used.","'onChangeValueC' is assigned a value but never used.","'onChangeValueS' is assigned a value but never used.","'CharacterInfo' is defined but never used.","'fazerRequisicaoComBody' is defined but never used.","'Yup' is defined but never used.","'StoryInfo' is defined but never used.","'character' is assigned a value but never used.","'setCharacter' is assigned a value but never used.","'touched' is assigned a value but never used.","'errors' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["419"],"'fetchWithBody' is defined but never used.",["420"],"React Hook React.useEffect has missing dependencies: 'params.id' and 'token'. Either include them or remove the dependency array.",["421"],["422"],"React Hook React.useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["423"],"'token' is assigned a value but never used.","'storyCheck' is assigned a value but never used.","'reviewCheck' is assigned a value but never used.",["424"],"'cover' is assigned a value but never used.",["425"],"'filteredResults' is assigned a value but never used.","'setFilteredResults' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'params.search'. Either include it or remove the dependency array.",["426"],["427"],["428"],"React Hook React.useEffect has missing dependencies: 'character' and 'params.id'. Either include them or remove the dependency array.",["429"],["430"],["431"],"'Row' is defined but never used.","'RowReview' is defined but never used.","'RowStory' is defined but never used.","'currentPage' is assigned a value but never used.",["432"],["433"],"'history' is assigned a value but never used.","'characterCheck' is assigned a value but never used.",["434"],"React Hook useEffect contains a call to 'setToken'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [token] as a second argument to the useEffect Hook.","MemberExpression",["435"],"'RowCharacter' is defined but never used.","'type' is assigned a value but never used.","'id' is assigned a value but never used.","'Component' is defined but never used.","'SuggestReview' is defined but never used.",["436"],"no-global-assign","no-unsafe-negation",{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"439","fix":"441"},{"desc":"442","fix":"443"},{"desc":"439","fix":"444"},{"desc":"445","fix":"446"},{"desc":"439","fix":"447"},{"desc":"439","fix":"448"},{"desc":"449","fix":"450"},{"desc":"442","fix":"451"},{"desc":"445","fix":"452"},{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},{"desc":"445","fix":"457"},{"desc":"445","fix":"458"},{"desc":"445","fix":"459"},{"desc":"445","fix":"460"},{"desc":"461","fix":"462"},{"desc":"445","fix":"463"},"Update the dependencies array to be: [filteredResults.length]",{"range":"464","text":"465"},"Update the dependencies array to be: [params.id]",{"range":"466","text":"467"},{"range":"468","text":"467"},"Update the dependencies array to be: [params.id, token]",{"range":"469","text":"470"},{"range":"471","text":"467"},"Update the dependencies array to be: [token]",{"range":"472","text":"473"},{"range":"474","text":"467"},{"range":"475","text":"467"},"Update the dependencies array to be: [currentPage, params.search, search]",{"range":"476","text":"477"},{"range":"478","text":"470"},{"range":"479","text":"473"},"Update the dependencies array to be: [character, params.id]",{"range":"480","text":"481"},"Update the dependencies array to be: [characterCheck, token]",{"range":"482","text":"483"},{"range":"484","text":"473"},{"range":"485","text":"473"},{"range":"486","text":"473"},{"range":"487","text":"473"},"Add dependencies array: [token]",{"range":"488","text":"489"},{"range":"490","text":"473"},[944,946],"[filteredResults.length]",[1103,1105],"[params.id]",[998,1000],[1119,1121],"[params.id, token]",[1167,1169],[768,770],"[token]",[996,998],[1287,1289],[2591,2612],"[currentPage, params.search, search]",[1093,1095],[634,636],[1791,1793],"[character, params.id]",[1201,1217],"[characterCheck, token]",[498,500],[454,456],[468,470],[992,994],[912,912],", [token]",[604,606]]