[{"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\index.js":"1","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\reportWebVitals.js":"2","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\App.js":"3","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\utils\\data.js":"4","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\home\\home.js":"5","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success\\success.js":"6","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\character\\character.js":"7","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\login\\login.js":"8","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-characters\\suggested-characters.js":"9","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-character\\suggest-character.js":"10","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\dashboard\\dashboard.js":"11","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\all-characters\\all-characters.js":"12","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\about\\about.js":"13","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-character\\suggested-character.js":"14","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-story\\update-story.js":"15","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-reviews\\suggested-reviews.js":"16","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-story\\suggest-story.js":"17","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-stories\\suggested-stories.js":"18","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-character\\update-character.js":"19","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-review\\suggest-review.js":"20","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-character\\add-character.js":"21","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-review\\suggested-review.js":"22","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-review\\update-review.js":"23","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-story\\suggested-story.js":"24","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success-st-sc\\success.js":"25","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\sc-suggested-stories\\suggested-stories.js":"26","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-story\\add-story.js":"27","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-review\\add-review.js":"28","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\about-team\\about.js":"29","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\results\\results.js":"30","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\sc-suggested-story\\suggested-story.js":"31","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-story-sc\\suggest-story.js":"32","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\contact\\contact.js":"33","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\utils\\fetch.js":"34","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\mobile-header\\mobile-header.js":"35","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\single-character\\single-character.js":"36","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\stories\\stories.js":"37","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\sidebar\\sidebar.js":"38","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\character-info\\character-info.js":"39","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\reviews\\reviews.js":"40","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-character\\table.js":"41","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\pagination\\pagination.js":"42","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\story-info\\story-info.js":"43","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\stats\\stats.js":"44","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\recent-suggested\\recent-suggested.js":"45","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-sc-story\\table.js":"46","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-story\\table.js":"47","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-review\\table.js":"48","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-story\\row.js":"49","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\review-info\\review-info.js":"50","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-review\\row.js":"51","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-character\\row.js":"52","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-sc-story\\row.js":"53","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\search-bar\\search-bar.js":"54","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success-delete\\success.js":"55","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success-delete-all\\success.js":"56","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\mode-selector\\mode-selector.js":"57","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\utils\\theme-context.js":"58"},{"size":618,"mtime":1616347906964,"results":"59","hashOfConfig":"60"},{"size":362,"mtime":499162500000,"results":"61","hashOfConfig":"60"},{"size":5350,"mtime":1616347906898,"results":"62","hashOfConfig":"60"},{"size":109,"mtime":1612579596337,"results":"63","hashOfConfig":"60"},{"size":5894,"mtime":1616347906998,"results":"64","hashOfConfig":"60"},{"size":995,"mtime":1616347907024,"results":"65","hashOfConfig":"60"},{"size":2233,"mtime":1616347906987,"results":"66","hashOfConfig":"60"},{"size":3989,"mtime":1616347907000,"results":"67","hashOfConfig":"60"},{"size":1761,"mtime":1616347907043,"results":"68","hashOfConfig":"60"},{"size":30914,"mtime":1616347907027,"results":"69","hashOfConfig":"60"},{"size":9978,"mtime":1616347906994,"results":"70","hashOfConfig":"60"},{"size":2226,"mtime":1616347906984,"results":"71","hashOfConfig":"60"},{"size":8686,"mtime":1616347906974,"results":"72","hashOfConfig":"60"},{"size":17583,"mtime":1616347907039,"results":"73","hashOfConfig":"60"},{"size":7718,"mtime":1616347907063,"results":"74","hashOfConfig":"60"},{"size":1651,"mtime":1616347907048,"results":"75","hashOfConfig":"60"},{"size":20079,"mtime":1616347907036,"results":"76","hashOfConfig":"60"},{"size":1679,"mtime":1616347907051,"results":"77","hashOfConfig":"60"},{"size":11470,"mtime":1616347907058,"results":"78","hashOfConfig":"60"},{"size":8579,"mtime":1616347907029,"results":"79","hashOfConfig":"60"},{"size":14484,"mtime":1616347906977,"results":"80","hashOfConfig":"60"},{"size":6683,"mtime":1616347907045,"results":"81","hashOfConfig":"60"},{"size":5157,"mtime":1616347907060,"results":"82","hashOfConfig":"60"},{"size":10896,"mtime":1616347907054,"results":"83","hashOfConfig":"60"},{"size":1525,"mtime":1616347907020,"results":"84","hashOfConfig":"60"},{"size":1692,"mtime":1616347907008,"results":"85","hashOfConfig":"60"},{"size":20544,"mtime":1616347906981,"results":"86","hashOfConfig":"60"},{"size":4911,"mtime":1616347906978,"results":"87","hashOfConfig":"60"},{"size":3423,"mtime":1616347906968,"results":"88","hashOfConfig":"60"},{"size":4775,"mtime":1616347907004,"results":"89","hashOfConfig":"60"},{"size":11828,"mtime":1616347907011,"results":"90","hashOfConfig":"60"},{"size":18940,"mtime":1616347907032,"results":"91","hashOfConfig":"60"},{"size":4186,"mtime":1616347906990,"results":"92","hashOfConfig":"60"},{"size":985,"mtime":1613788084395,"results":"93","hashOfConfig":"60"},{"size":1999,"mtime":1612199890181,"results":"94","hashOfConfig":"60"},{"size":1881,"mtime":1616347906936,"results":"95","hashOfConfig":"60"},{"size":2172,"mtime":1616347906942,"results":"96","hashOfConfig":"60"},{"size":8278,"mtime":1616347906932,"results":"97","hashOfConfig":"60"},{"size":4491,"mtime":1616347906902,"results":"98","hashOfConfig":"60"},{"size":2149,"mtime":1616347906916,"results":"99","hashOfConfig":"60"},{"size":2075,"mtime":1616347906948,"results":"100","hashOfConfig":"60"},{"size":890,"mtime":1616347906909,"results":"101","hashOfConfig":"60"},{"size":4009,"mtime":1616347906945,"results":"102","hashOfConfig":"60"},{"size":1028,"mtime":1616347906939,"results":"103","hashOfConfig":"60"},{"size":1527,"mtime":1616347906913,"results":"104","hashOfConfig":"60"},{"size":1807,"mtime":1616347906954,"results":"105","hashOfConfig":"60"},{"size":1754,"mtime":1616347906959,"results":"106","hashOfConfig":"60"},{"size":1757,"mtime":1616347906951,"results":"107","hashOfConfig":"60"},{"size":514,"mtime":1616347906929,"results":"108","hashOfConfig":"60"},{"size":1834,"mtime":1612198628178,"results":"109","hashOfConfig":"60"},{"size":2252,"mtime":1616347906922,"results":"110","hashOfConfig":"60"},{"size":2390,"mtime":1616347906919,"results":"111","hashOfConfig":"60"},{"size":519,"mtime":1616347906926,"results":"112","hashOfConfig":"60"},{"size":9299,"mtime":1614273175459,"results":"113","hashOfConfig":"60"},{"size":1030,"mtime":1616347907017,"results":"114","hashOfConfig":"60"},{"size":1042,"mtime":1616347907014,"results":"115","hashOfConfig":"60"},{"size":1085,"mtime":1616347906904,"results":"116","hashOfConfig":"60"},{"size":1531,"mtime":1616347907065,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"g77tix",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"120"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"120"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"120"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"120"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"120"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"120"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"120"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"120"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"120"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"120"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"120"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"120"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"120"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"120"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"120"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"120"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"120"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"120"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"120"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"120"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"120"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"120"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"120"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"120"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"120"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"120"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"120"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"120"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"120"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"120"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"120"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"120"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"120"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"120"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"120"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"120"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"120"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"120"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"120"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"120"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\index.js",[],["279","280"],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\reportWebVitals.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\App.js",["281"],"import \"./App.css\";\r\nimport React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./pages/home/home\";\r\nimport Login from \"./pages/login/login\";\r\nimport Character from \"./pages/character/character\";\r\nimport SuggestCharacter from \"./pages/suggest-character/suggest-character\";\r\nimport Success from \"./pages/success/success\";\r\nimport About from \"./pages/about/about\";\r\nimport Dashboard from \"./pages/dashboard/dashboard\";\r\nimport SuggestedCharacters from \"./pages/suggested-characters/suggested-characters\";\r\nimport SuggestedCharacter from \"./pages/suggested-character/suggested-character\";\r\nimport AllCharacters from \"./pages/all-characters/all-characters\";\r\nimport SuggestStory from \"./pages/suggest-story/suggest-story\";\r\nimport UpdateStory from \"./pages/update-story/update-story\";\r\nimport SuggestReview from \"./pages/suggest-review/suggest-review\";\r\nimport SuggestedStories from \"./pages/suggested-stories/suggested-stories\";\r\nimport SuggestedReviews from \"./pages/suggested-reviews/suggested-reviews\";\r\nimport UpdateCharacter from \"./pages/update-character/update-character\";\r\nimport AddCharacter from \"./pages/add-character/add-character\";\r\nimport UpdateReview from \"./pages/update-review/update-review\";\r\nimport SuggestedStory from \"./pages/suggested-story/suggested-story\";\r\nimport AddStory from \"./pages/add-story/add-story\";\r\nimport SuggestedReview from \"./pages/suggested-review/suggested-review\";\r\nimport AddReview from \"./pages/add-review/add-review\";\r\n\r\nimport DataContext from \"./utils/data\";\r\nimport AboutTeam from \"./pages/about-team/about\";\r\nimport SuggestStorySC from \"./pages/suggest-story-sc/suggest-story\";\r\nimport SuccessSTSC from \"./pages/success-st-sc/success\";\r\nimport SuggestedStoriesSC from \"./pages/sc-suggested-stories/suggested-stories\";\r\nimport SCSuggestedStory from \"./pages/sc-suggested-story/suggested-story\";\r\nimport Contact from \"./pages/contact/contact\";\r\nimport Results from \"./pages/results/results\";\r\nimport SuccessDelete from \"./pages/success-delete/success\";\r\nimport SuccessDeleteCharacter from \"./pages/success-delete-all/success\";\r\nimport useDarkMode from \"./utils/theme-context\";\r\n\r\nfunction App() {\r\n  //   useDarkMode();\r\n  const [characterCheck, setCharacterCheck] = React.useState(true);\r\n  const [reviewCheck, setReviewCheck] = React.useState(true);\r\n  const [storyCheck, setStoryCheck] = React.useState(true);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <DataContext.Provider\r\n        value={{\r\n          characterCheck,\r\n          setCharacterCheck,\r\n          storyCheck,\r\n          setStoryCheck,\r\n          reviewCheck,\r\n          setReviewCheck,\r\n        }}\r\n      >\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/character/:id\" component={Character} />\r\n            <Route path=\"/suggest-character\" component={SuggestCharacter} />\r\n            <Route path=\"/success\" component={Success} />\r\n            <Route path=\"/about\" component={About} />\r\n            <Route path=\"/dashboard\" component={Dashboard} />\r\n            <Route\r\n              path=\"/suggested-characters\"\r\n              component={SuggestedCharacters}\r\n            />\r\n            <Route\r\n              path=\"/suggested-character/:id\"\r\n              component={SuggestedCharacter}\r\n            />\r\n            <Route path=\"/all-characters\" component={AllCharacters} />\r\n            <Route path=\"/update-character/:id\" component={UpdateCharacter} />\r\n            <Route path=\"/suggest-story/:id\" component={SuggestStory} />\r\n            <Route path=\"/suggest-story-sc/:id\" component={SuggestStorySC} />\r\n            <Route path=\"/update-story/:id\" component={UpdateStory} />\r\n            <Route path=\"/suggest-review/:id\" component={SuggestReview} />\r\n            <Route path=\"/suggested-stories\" component={SuggestedStories} />\r\n            <Route path=\"/suggested-reviews\" component={SuggestedReviews} />\r\n            <Route path=\"/add-character\" component={AddCharacter} />\r\n            <Route path=\"/update-review/:id\" component={UpdateReview} />\r\n            <Route path=\"/suggested-story/:id\" component={SuggestedStory} />\r\n            <Route path=\"/suggested-review/:id\" component={SuggestedReview} />\r\n            <Route path=\"/add-story/:id\" component={AddStory} />\r\n            <Route path=\"/add-review/:id\" component={AddReview} />\r\n            <Route path=\"/success\" component={Success} />\r\n            <Route path=\"/success-stsc/:id\" component={SuccessSTSC} />\r\n            <Route path=\"/success-deleted\" component={SuccessDelete} />\r\n            <Route\r\n              path=\"/success-deleted-ch\"\r\n              component={SuccessDeleteCharacter}\r\n            />\r\n            <Route path=\"/about-the-team\" component={AboutTeam} />\r\n            <Route\r\n              path=\"/sc-suggested-stories\"\r\n              component={SuggestedStoriesSC}\r\n            />\r\n\r\n            <Route\r\n              path=\"/sc-suggested-story/:id\"\r\n              component={SCSuggestedStory}\r\n            />\r\n            <Route path=\"/contact\" component={Contact} />\r\n            <Route path=\"/results\" component={Results} />\r\n          </Switch>\r\n        </div>\r\n      </DataContext.Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\utils\\data.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\home\\home.js",["282","283","284"],"import React from \"react\";\r\nimport \"./home.css\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport SingleCharacter from \"../../components/single-character/single-character\";\r\nimport { ReactComponent as ButtonIcon } from \"../../assets/chevron-right-solid.svg\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SearchBar from \"../../components/search-bar/search-bar\";\r\n\r\nfunction Home() {\r\n  const [random, setRandom] = React.useState([]);\r\n  const [stories, setStories] = React.useState([]);\r\n  const [search, setSearch] = React.useState([]);\r\n  const [filteredResults, setFilteredResults] = React.useState([]);\r\n  const [advancedSearch, setAdvancedSearch] = React.useState(false);\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/character\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const newRandom = resJson.data;\r\n        console.log(newRandom);\r\n        console.log(filteredResults.length);\r\n        setRandom(newRandom);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n\r\n      <div className=\"home-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"welcome\">\r\n          <h2>Welcome to the database</h2>\r\n          <p>\r\n            Enter a few keywords in the search bar below to find an aromantic or\r\n            asexual character in the database! These can be orientations\r\n            (demisexual, grayromantic, etc.), story genres (fantasy,\r\n            contemporary), or many more—and you can use more than one.\r\n          </p>\r\n          <p>\r\n            Not sure what to enter? Check out the{\" \"}\r\n            <a href=\"/about\">About the Database</a> page for the list of\r\n            categories and terms used, or hit the “Give me a new character”\r\n            button for inspiration!\r\n          </p>\r\n        </div>\r\n        <div className=\"free-search\">\r\n          <form\r\n            onSubmit={(event) => {\r\n              console.log(search);\r\n\r\n              event.preventDefault();\r\n              history.push(`/results?search=${search}`);\r\n              fetch(\r\n                `https://aroacedb-back.herokuapp.com/character/infinite?search=${search}`\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(search);\r\n                  console.log(resJson.data);\r\n\r\n                  if (resJson.data) {\r\n                    const newResults = resJson.data.characters;\r\n                    setFilteredResults(newResults);\r\n                    console.log(filteredResults);\r\n                  }\r\n                });\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your keywords here to search\"\r\n              onChange={(event) => {\r\n                setSearch(event.target.value);\r\n              }}\r\n            ></input>\r\n            <button className=\"bg-secondary dark:bg-darkdetail\">\r\n              <ButtonIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"button-container text-secondary dark:text-darksecondary\">\r\n          <div className=\"common-searches\">\r\n            <span>Common searches: </span>\r\n            <a\r\n              href=\"/results?search=acespec\"\r\n              className=\"text-detail dark:text-darkdetail\"\r\n            >\r\n              All Aces\r\n            </a>\r\n            <a\r\n              href=\"/results?search=arospec\"\r\n              className=\"text-detail dark:text-darkdetail\"\r\n            >\r\n              All Aros\r\n            </a>\r\n            <a\r\n              href=\"/results?search=canonleads\"\r\n              className=\"text-detail dark:text-darkdetail\"\r\n            >\r\n              In-Canon Aro/Ace leads{\" \"}\r\n            </a>\r\n          </div>\r\n\r\n          <button\r\n            className=\"bg-secondary dark:bg-darksecondary text-detail dark:text-darkdetail hover:bg-detail hover:text-primary dark:hover:bg-darkdetail dark:hover:text-darksecondary\"\r\n            onClick={() => {\r\n              setAdvancedSearch(!advancedSearch);\r\n            }}\r\n          >\r\n            Advanced Search\r\n          </button>\r\n        </div>\r\n        {advancedSearch ? <SearchBar /> : \"\"}\r\n\r\n        <div className=\"results\">\r\n          {filteredResults.map((i) => {\r\n            return (\r\n              <div>\r\n                <SingleCharacter character={i} />\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          {filteredResults.length !== 0 ? (\r\n            <div></div>\r\n          ) : (\r\n            <div className=\"random\">\r\n              <h2 className=\"dark:text-darksecondary text-secondary\">\r\n                Your random character\r\n              </h2>\r\n              <SingleCharacter character={random} />\r\n              <div className=\"char-btn\">\r\n                <button\r\n                  className=\"bg-secondary dark:bg-darksecondary text-detail dark:text-darkdetail hover:bg-detail hover:text-primary dark:hover:bg-darkdetail dark:hover:text-darksecondary\"\r\n                  onClick={() => {\r\n                    fetch(\"https://aroacedb-back.herokuapp.com/character\")\r\n                      .then((res) => res.json())\r\n                      .then((resJson) => {\r\n                        console.log(resJson.data);\r\n                        const newRandom = resJson.data;\r\n                        setRandom(newRandom);\r\n                      });\r\n                  }}\r\n                >\r\n                  Give me a new character!\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success\\success.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\character\\character.js",["285"],"import React from \"react\";\r\nimport \"./character.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Stories from \"../../components/stories/stories\";\r\nimport Reviews from \"../../components/reviews/reviews\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SingleCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const [stories, setStories] = React.useState([]);\r\n  const [reviews, setReviews] = React.useState([]);\r\n  const { params } = useRouteMatch();\r\n\r\n  React.useEffect(() => {\r\n    fetch(`https://aroacedb-back.herokuapp.com/characters/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson.data.character[0]);\r\n        setCharacter(resJson.data.character[0]);\r\n        console.log(character);\r\n        console.log(\"params\", params.id);\r\n      });\r\n\r\n    fetch(`https://aroacedb-back.herokuapp.com/stories/character/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const possibleStories = resJson.data.stories;\r\n        if (possibleStories.length !== 0) {\r\n          console.log(possibleStories);\r\n          setStories(possibleStories);\r\n        }\r\n      });\r\n\r\n    fetch(`https://aroacedb-back.herokuapp.com/reviews/character/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        const possibleReviews = resJson.data.reviews;\r\n        console.log(resJson);\r\n        if (possibleReviews.length !== 0) {\r\n          console.log(possibleReviews);\r\n          setReviews(possibleReviews);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Character\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"character-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <CharacterInfo character={character} />\r\n        {console.log(params.id)}\r\n        <Stories stories={stories} character_id={params.id} />\r\n        <Reviews reviews={reviews} character_id={params.id} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\login\\login.js",["286"],"import React from \"react\";\r\nimport \"./login.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { fetchWithBody } from \"../../utils/fetch\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"Login\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n\r\n      <div className=\"login-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"login-box\">\r\n          <h2>Login</h2>\r\n          <p>Admin login for the database. Non-admin users can't be created.</p>\r\n          <Formik\r\n            initialValues={{\r\n              email: \"\",\r\n              password: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n\r\n              fetchWithBody(\r\n                \"https://aroacedb-back.herokuapp.com/auth\",\r\n                \"POST\",\r\n                {\r\n                  email: values.email,\r\n                  password: values.password,\r\n                }\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  const data = resJson.data;\r\n                  console.log(data);\r\n                  console.log(resJson.data.token);\r\n\r\n                  localStorage.setItem(\"token\", resJson.data.token);\r\n                  const newToken = localStorage.getItem(\"token\");\r\n\r\n                  const decodedToken = jwt_decode(newToken);\r\n                  console.log(decodedToken);\r\n\r\n                  if (newToken) {\r\n                    history.push(\"/dashboard\");\r\n                  }\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err);\r\n                  alert(\r\n                    \"Error loging in. Are you sure your credentials are correct?\"\r\n                  );\r\n                });\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string().email().required(\"Required\"),\r\n            })}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <input\r\n                    id=\"email\"\r\n                    placeholder=\"User\"\r\n                    type=\"text\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.email && touched.email\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                  />\r\n                  {errors.email && touched.email && (\r\n                    <div className=\"input-feedback\">{errors.email}</div>\r\n                  )}\r\n\r\n                  <input\r\n                    id=\"password\"\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"submit bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n                  >\r\n                    Login\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-characters\\suggested-characters.js",["287"],"import \"./suggested-characters.css\";\r\nimport React from \"react\";\r\nimport Table from \"../../components/table-character/table\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableCharacter from \"../../components/table-character/table\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedCharacters() {\r\n  const [characters, setCharacters] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/suggest/characters\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const data = resJson.data.paginated_characters;\r\n        console.log(data);\r\n        setCharacters(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"SuggestedCharacters\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggested-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"title\">\r\n          <h2 className=\"text-secondary dark:text-darksecondary\">\r\n            Suggested Characters\r\n          </h2>\r\n        </div>\r\n        <div className=\"table-container\">\r\n          <TableCharacter content={characters} type=\"suggest\" id=\"character\" />\r\n          <Pagination\r\n            totalPages={totalPages}\r\n            setCurrentPage={setCurrentPage}\r\n            currentPage={currentPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-character\\suggest-character.js",["288","289","290","291","292"],"import React, { useState } from \"react\";\r\nimport { fetchWithBody } from \"../../utils/fetch\";\r\nimport \"./suggest-character.css\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nfunction SuggestCharacter() {\r\n  const history = useHistory();\r\n  const [token, setToken] = useState(\"\");\r\n  const [characterCheck, setCharacterCheck] = React.useState(\"\");\r\n  const [storyCheck, setStoryCheck] = React.useState(\"\");\r\n  const [reviewCheck, setReviewCheck] = React.useState(\"\");\r\n  const [stories, setStories] = React.useState({\r\n    story_title: [],\r\n    series_or_anthology: [],\r\n    story_length: [],\r\n    genre: [],\r\n    type_of_rep: [],\r\n    character_importance: [],\r\n    rep_noteswarnings: [],\r\n    other_noteswarnings: [],\r\n    cover: [],\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    fetch(\"https://aroacedb-back.herokuapp.com/permissions\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setCharacterCheck(resJson.data.character.checked);\r\n        setStoryCheck(resJson.data.story.checked);\r\n        setReviewCheck(resJson.data.review.checked);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestCharacter\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggest-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"suggest\">\r\n          <h2 className=\"title text-secondary dark:text-darksecondary\">\r\n            Suggest a character\r\n          </h2>\r\n          {characterCheck ? (\r\n            <Formik\r\n              initialValues={{\r\n                character_name: \"\",\r\n                author: \"\",\r\n                gender: \"\",\r\n                importance: \"\",\r\n                pairing_qpp_or_romantic: \"\",\r\n                main_storyseries: \"\",\r\n                type_of_rep: \"\",\r\n                romantic_orientation: \"\",\r\n                sexual_orientation: \"\",\r\n                genre: \"\",\r\n                relationships: \"\",\r\n                rep_noteswarnings: \"\",\r\n                cover: \"\",\r\n                reference: \"\",\r\n              }}\r\n              onSubmit={(values) => {\r\n                console.log(JSON.stringify(values, null, 2));\r\n                fetchWithBody(\r\n                  \"https://aroacedb-back.herokuapp.com/suggest/characters\",\r\n                  \"POST\",\r\n                  values\r\n                )\r\n                  .then((res) => res.json())\r\n                  .then((resJson) => {\r\n                    console.log(resJson.data.dbCharacter[0].id);\r\n                    let id = resJson.data.dbCharacter[0].id;\r\n                    history.push(`/suggest-story-sc/${id}`);\r\n                  });\r\n              }}\r\n            >\r\n              {(props) => {\r\n                const {\r\n                  values,\r\n                  isSubmitting,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                } = props;\r\n                return (\r\n                  <form onSubmit={handleSubmit}>\r\n                    <div className=\"content\">\r\n                      <p>\r\n                        Welcome to the “Suggest a Character” page. Before you\r\n                        fill out the form, please remember all entries meet\r\n                        these criterias:\r\n                      </p>\r\n                      <ul>\r\n                        <li>\r\n                          Prose only (no films, tv series, (web)comics, etc.)\r\n                        </li>\r\n                        <li>\r\n                          Currently published original fiction (online, digital,\r\n                          in print)\r\n                        </li>\r\n                        <li>Confirmed characters only</li>\r\n                      </ul>\r\n\r\n                      <p>\r\n                        Every field has a tooltip, so check those out if you’re\r\n                        unsure what to fill in! With all of that said, thank you\r\n                        so much for your suggestion and help.\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"suggest-character-info\">\r\n                      <div className=\"line\">\r\n                        <h2>\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-name\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-name\"\r\n                              effect=\"solid\"\r\n                              palce=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">Character’s name</div>\r\n                            </ReactTooltip>\r\n                          </div>\r\n                          <input\r\n                            id=\"character_name\"\r\n                            placeholder=\"Insert Character Name\"\r\n                            type=\"text\"\r\n                            value={values.character_name}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </h2>\r\n                        <div className=\"importance-container\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-importance\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-importance\"\r\n                              effect=\"solid\"\r\n                              place=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                <ul>\r\n                                  <li>\r\n                                    <strong>Lead: </strong>The character is at\r\n                                    the heart{\" \"}\r\n                                    <p>of the story’s central storyline</p>\r\n                                  </li>\r\n                                  <li>\r\n                                    <strong>Main: </strong>The character plays\r\n                                    an important{\" \"}\r\n                                    <p>\r\n                                      role in the story and is frequently on\r\n                                      page\r\n                                    </p>\r\n                                  </li>\r\n                                  <li>\r\n                                    <strong>Lead: </strong>The character plays a\r\n                                    <p> minor role in the story</p>\r\n                                  </li>\r\n                                </ul>\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Importance</span>\r\n                          </div>\r\n                          <select\r\n                            name=\"importance\"\r\n                            value={values.importance}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Lead\" label=\"Lead\" />\r\n                            <option value=\"Main\" label=\"Main\" />\r\n                            <option value=\"Side\" label=\"Side\" />\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"line\">\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-author\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-author\"\r\n                              effect=\"solid\"\r\n                              palce=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">Author’s name</div>\r\n                            </ReactTooltip>\r\n                            <span>Author</span>\r\n                          </div>\r\n                          <input\r\n                            id=\"author\"\r\n                            placeholder=\"Author\"\r\n                            type=\"text\"\r\n                            value={values.author}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </div>\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-tip\r\n                              data-for=\"tooltip-gender\"\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-gender\"\r\n                              effect=\"solid\"\r\n                              palce=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                Character’s gender (nonbinary characters are\r\n                                grouped)\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Gender</span>\r\n                          </div>\r\n\r\n                          <select\r\n                            name=\"gender\"\r\n                            value={values.gender}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select gender\" />\r\n                            <option value=\"M\" label=\"M\" />\r\n                            <option value=\"F\" label=\"F\" />\r\n                            <option value=\"Enby\" label=\"Enby\" />\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-pairing\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-pairing\"\r\n                              effect=\"solid\"\r\n                              place=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                <p>\r\n                                  Write only the letters of the genders\r\n                                  involved,\r\n                                </p>\r\n                                <p>\r\n                                  in the order of M, then F, then NB, i.e. F/NB\r\n                                  or M/F/F\r\n                                </p>\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Pairing</span>\r\n                          </div>\r\n                          <input\r\n                            id=\"pairing_qpp_or_romantic\"\r\n                            placeholder=\"Insert Pairing\"\r\n                            type=\"text\"\r\n                            value={values.pairing_qpp_or_romantic}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"line\">\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-main-storyseries\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-main-storyseries\"\r\n                              effect=\"solid\"\r\n                              place=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                <p>\r\n                                  Name of the series (if applicable). Short\r\n                                  stories in an anthology\r\n                                </p>{\" \"}\r\n                                <p>can list the anthology name here.</p>\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Series</span>\r\n                          </div>\r\n                          <input\r\n                            id=\"main_storyseries\"\r\n                            placeholder=\"Insert Series\"\r\n                            type=\"text\"\r\n                            value={values.main_storyseries}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </div>\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-type\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-type\"\r\n                              effect=\"solid\"\r\n                              place=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                <ul>\r\n                                  <li>\r\n                                    <strong>Word of God: </strong>The\r\n                                    character’s sexuality{\" \"}\r\n                                    <p>\r\n                                      is not explicit on page, but the author\r\n                                      has confirmed it.\r\n                                    </p>\r\n                                  </li>\r\n                                  <li>\r\n                                    <strong>On page:</strong> The character’s\r\n                                    sexuality is explicitly\r\n                                    <p>\r\n                                      demonstrated within the text. It should be\r\n                                      showed or\r\n                                    </p>\r\n                                    <p>\r\n                                      discussed to an extent that makes it clear\r\n                                      to the readers.\r\n                                    </p>\r\n                                  </li>\r\n                                  <li>\r\n                                    <strong>Word used: </strong>The identity is\r\n                                    stated using the{\" \"}\r\n                                    <p> actual word (usually also On Page)</p>\r\n                                  </li>\r\n                                </ul>\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Type of Rep</span>\r\n                          </div>\r\n\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"line\">\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-romantic\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-romantic\"\r\n                              effect=\"solid\"\r\n                              palce=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                <p> Leave blank if you're unsure. </p>\r\n                                <p>If a specific aromantic label is used</p>\r\n\r\n                                <p>but not listed here, pick \"Arospec\" and</p>\r\n\r\n                                <p>write us the label in the Rep Notes &</p>\r\n                                <p>Warnings sections</p>\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Romantic orientation</span>\r\n                          </div>\r\n\r\n                          <select\r\n                            name=\"romantic_orientation\"\r\n                            value={values.romantic_orientation}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Alloromantic\" label=\"Alloromantic\" />\r\n                            <option value=\"Aroflux\" label=\"Aroflux\" />\r\n                            <option value=\"Aromantic\" label=\"Aromantic\" />\r\n                            <option value=\"Arospec\" label=\"Arospec\" />\r\n                            <option value=\"Biromantic\" label=\"Biromantic\" />\r\n                            <option value=\"Greyromantic\" label=\"Grayromantic\" />\r\n                            <option value=\"Demiromantic\" label=\"Demiromantic\" />\r\n                            <option\r\n                              value=\"Heteroromantic\"\r\n                              label=\"Heteroromantic\"\r\n                            />\r\n                            <option value=\"Homoromantic\" label=\"Homoromantic\" />\r\n                            <option value=\"Panromantic\" label=\"Panromantic\" />\r\n                            <option value=\"Queer\" label=\"Queer\" />\r\n                            <option value=\"WTFRomantic\" label=\"WTFRomantic\" />\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"tooltip-sexual\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"tooltip-sexual\"\r\n                              effect=\"solid\"\r\n                              palce=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                <p> Leave blank if you're unsure. </p>\r\n                                <p>If a specific asexual label is used</p>\r\n\r\n                                <p>but not listed here, pick \"Acepec\" and</p>\r\n\r\n                                <p>write us the label in the Rep Notes &</p>\r\n                                <p>Warnings sections</p>\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Sexual Orientation</span>\r\n                          </div>\r\n                          <select\r\n                            name=\"sexual_orientation\"\r\n                            value={values.sexual_orientation}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Allosexual\" label=\"Allosexual\" />\r\n                            <option value=\"Asexual\" label=\"Asexual\" />\r\n                            <option value=\"Acespec\" label=\"Acespec\" />\r\n                            <option value=\"Demisexual\" label=\"Demisexual\" />\r\n                            <option value=\"Bisexual\" label=\"Bisexual\" />\r\n                            <option value=\"Gay\" label=\"Gay\" />\r\n                            <option value=\"Gray-asexual\" label=\"Graysexual\" />\r\n                            <option value=\"Heterosexual\" label=\"Heterosexual\" />\r\n                            <option value=\"Pansexual\" label=\"Pansexual\" />\r\n                            <option value=\"Queer\" label=\"Queer\" />\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"line\">\r\n                        <div className=\"chunk\">\r\n                          <div className=\"group\">\r\n                            <span\r\n                              className=\"hover\"\r\n                              data-for=\"genre-field\"\r\n                              data-tip\r\n                            >\r\n                              ?\r\n                            </span>\r\n                            <ReactTooltip\r\n                              id=\"genre-field\"\r\n                              effect=\"solid\"\r\n                              palce=\"right\"\r\n                              type=\"dark\"\r\n                            >\r\n                              <div className=\"tooltip\">\r\n                                Story's literary genre.{\" \"}\r\n                                <p>List in alphabetical order, i.e.</p>{\" \"}\r\n                                \"Contemporary, Romance, Young Adult\".\r\n                              </div>\r\n                            </ReactTooltip>\r\n                            <span>Genre</span>\r\n                          </div>\r\n                          <input\r\n                            id=\"genre\"\r\n                            placeholder=\"Insert Genres\"\r\n                            type=\"text\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div clasName=\"square\">\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"relationships\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"relationships\"\r\n                            effect=\"solid\"\r\n                            palce=\"right\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              Please list general terms, such as \"Friendship\",{\" \"}\r\n                              <p>\r\n                                \"Mentor\", or \"Family\", \"Romance\" that describe\r\n                              </p>{\" \"}\r\n                              the most important relationships to the character.\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <p>\r\n                            <span>Relationships</span>\r\n                          </p>\r\n                        </div>\r\n                        <textarea\r\n                          id=\"relationships\"\r\n                          placeholder=\"Insert Relationships\"\r\n                          type=\"text\"\r\n                          value={values.relationships}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n\r\n                      <div clasName=\"square\">\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"noteswarnings\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"noteswarnings\"\r\n                            effect=\"solid\"\r\n                            palce=\"right\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              Any noteworthy information about the\r\n                              representation,\r\n                              <p>\r\n                                {\" \"}\r\n                                whether it is tropes (exile or dead ace, allo\r\n                                saviour, etc.)\r\n                              </p>{\" \"}\r\n                              or facets of it (sex repulsed/averse/positive,\r\n                              touch averse, etc.).\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <p>\r\n                            <span>Notes & Warnings</span>\r\n                          </p>\r\n                        </div>\r\n                        <textarea\r\n                          id=\"rep_noteswarnings\"\r\n                          placeholder=\"Insert Representation Notes & Warnings\"\r\n                          type=\"text\"\r\n                          value={values.rep_noteswarnings}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n\r\n                      <div clasName=\"square\">\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-ref\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-ref\"\r\n                            effect=\"solid\"\r\n                            palce=\"right\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              If there is an author’s post/tweet,{\" \"}\r\n                              <p>a review, or a list where you heard of this</p>{\" \"}\r\n                              character being aspec, please link to it!\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <p>\r\n                            <span>References to mention of representation</span>\r\n                          </p>\r\n                        </div>\r\n\r\n                        <textarea\r\n                          id=\"reference\"\r\n                          placeholder=\"Insert references\"\r\n                          type=\"text\"\r\n                          value={values.reference}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n\r\n                      <div clasName=\"square\">\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"cover\"\r\n                            data-tip=\"URL to cover image.\"\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"cover\"\r\n                            effect=\"solid\"\r\n                            palce=\"right\"\r\n                            type=\"dark\"\r\n                          />\r\n                          <p>\r\n                            <span>Cover</span>\r\n                          </p>\r\n                        </div>\r\n                        <input\r\n                          id=\"cover\"\r\n                          placeholder=\"cover\"\r\n                          type=\"text\"\r\n                          value={values.cover}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n                    >\r\n                      Suggest Character\r\n                    </button>\r\n                  </form>\r\n                );\r\n              }}\r\n            </Formik>\r\n          ) : (\r\n            \"We are not accepting character suggestions at this moment.\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SuggestCharacter;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\dashboard\\dashboard.js",["293","294","295","296","297","298","299"],"import React, { useContext } from \"react\";\r\nimport \"./dashboard.css\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Stats from \"../../components/stats/stats\";\r\nimport RecentSuggested from \"../../components/recent-suggested/recent-suggested\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport DataContext from \"../../utils/data\";\r\nimport { fetchWithBody, fetchWithTokenNoBody } from \"../../utils/fetch\";\r\n\r\nfunction Dashboard() {\r\n  const [recentlyAdded, setRecentlyAdded] = React.useState([]);\r\n  const [stats, setStats] = React.useState([]);\r\n\r\n  const [characterCheck, setCharacterCheck] = React.useState(false);\r\n  const [storyCheck, setStoryCheck] = React.useState(\"\");\r\n  const [reviewCheck, setReviewCheck] = React.useState(false);\r\n  const [permissions, setPermissions] = React.useState(false);\r\n\r\n  const onChangeValue = (event) => {\r\n    fetchWithBody(\r\n      \"https://aroacedb-back.herokuapp.com/permissions/review\",\r\n      \"POST\",\r\n      { checked: event.target.value }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n      });\r\n  };\r\n\r\n  const onChangeValueC = (event) => {\r\n    setCharacterCheck(event.target.value);\r\n    fetchWithBody(\r\n      \"https://aroacedb-back.herokuapp.com/permissions/character\",\r\n      \"POST\",\r\n      { checked: event.target.value }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n      });\r\n  };\r\n\r\n  const onChangeValueS = (event) => {\r\n    const newValue = event.target.value;\r\n    setStoryCheck(newValue);\r\n    console.log(storyCheck);\r\n    fetchWithBody(\r\n      \"https://aroacedb-back.herokuapp.com/permissions/story\",\r\n      \"POST\",\r\n      { checked: event.target.value }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/permissions\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setCharacterCheck(resJson.data.character.checked);\r\n        setStoryCheck(resJson.data.story.checked);\r\n        setReviewCheck(resJson.data.review.checked);\r\n      });\r\n  }, [permissions]);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/suggest/characters/recent\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        const suggested = resJson.data.recentlyAdded;\r\n        console.log(suggested);\r\n        setRecentlyAdded(suggested);\r\n      });\r\n\r\n    fetch(\"https://aroacedb-back.herokuapp.com/stats\").then((res) =>\r\n      res.json().then((resJson) => {\r\n        const data = resJson.data;\r\n        console.log(data);\r\n        setStats(data);\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Dashboard\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n\r\n      <div className=\"dashboard-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"header\">\r\n          <h2 className=\"text-secondary dark:text-darksecondary\">Dashboard</h2>\r\n        </div>\r\n        <Stats stats={stats} />\r\n        <RecentSuggested characters={recentlyAdded} />\r\n\r\n        <div className=\"header\">\r\n          <a\r\n            href=\"/suggested-characters\"\r\n            className=\"bg-secondary dark:bg-darksecondary text-detail dark:text-darkdetail hover:bg-detail hover:text-primary dark:hover:bg-darkdetail dark:hover:text-darksecondary\"\r\n          >\r\n            View All\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"export\">\r\n          <a\r\n            href=\"https://aroacedb-back.herokuapp.com/download/characters\"\r\n            className=\"bg-secondary dark:bg-darksecondary text-detail dark:text-darkdetail hover:bg-detail hover:text-primary dark:hover:bg-darkdetail dark:hover:text-darksecondary\"\r\n          >\r\n            Export Characters\r\n          </a>\r\n\r\n          <a\r\n            href=\"https://aroacedb-back.herokuapp.com/download/stories\"\r\n            className=\"bg-secondary dark:bg-darksecondary text-detail dark:text-darkdetail hover:bg-detail hover:text-primary dark:hover:bg-darkdetail dark:hover:text-darksecondary\"\r\n          >\r\n            Export Stories\r\n          </a>\r\n\r\n          <a\r\n            href=\"https://aroacedb-back.herokuapp.com/download/reviews\"\r\n            className=\"bg-secondary dark:bg-darksecondary text-detail dark:text-darkdetail hover:bg-detail hover:text-primary dark:hover:bg-darkdetail dark:hover:text-darksecondary\"\r\n          >\r\n            Export Reviews\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"toggle-container\">\r\n          <div className=\"toggle-input\">\r\n            <span className=\"text-secondary dark:text-darksecondary\">\r\n              Currently character suggestions are\r\n              <b> {characterCheck ? \"enabled\" : \"disabled\"}</b>, story\r\n              suggestions are<b> {storyCheck ? \"enabled\" : \"disabled\"}</b> and\r\n              review suggestions are{\" \"}\r\n              <b>{reviewCheck ? \"enabled\" : \"disabled\"}</b>.\r\n            </span>\r\n            <label className=\"switch text-secondary dark:text-darksecondary\">\r\n              Character Suggestions\r\n              <div>\r\n                Enable\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"character\"\r\n                  value={true}\r\n                  checked={characterCheck ? \"checked\" : \"\"}\r\n                  onClick={() => {\r\n                    setCharacterCheck(true);\r\n                    fetchWithBody(\r\n                      \"https://aroacedb-back.herokuapp.com/permissions/character\",\r\n                      \"POST\",\r\n                      { checked: true }\r\n                    )\r\n                      .then((res) => res.json())\r\n                      .then((resJson) => {\r\n                        console.log(resJson);\r\n                      });\r\n                  }}\r\n                />\r\n                Disable\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"character\"\r\n                  value={false}\r\n                  checked={characterCheck ? \"\" : \"checked\"}\r\n                  onClick={() => {\r\n                    setCharacterCheck(false);\r\n                    fetchWithBody(\r\n                      \"https://aroacedb-back.herokuapp.com/permissions/character\",\r\n                      \"POST\",\r\n                      { checked: false }\r\n                    )\r\n                      .then((res) => res.json())\r\n                      .then((resJson) => {\r\n                        console.log(resJson);\r\n                      });\r\n                  }}\r\n                />\r\n              </div>\r\n            </label>\r\n            <label className=\"switch text-secondary dark:text-darksecondary\">\r\n              Review Suggestions\r\n              <div>\r\n                Enable\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"review\"\r\n                  value={true}\r\n                  checked={reviewCheck ? \"checked\" : \"\"}\r\n                  onClick={() => {\r\n                    setReviewCheck(true);\r\n                    fetchWithBody(\r\n                      \"https://aroacedb-back.herokuapp.com/permissions/review\",\r\n                      \"POST\",\r\n                      { checked: true }\r\n                    )\r\n                      .then((res) => res.json())\r\n                      .then((resJson) => {\r\n                        console.log(resJson);\r\n                      });\r\n                  }}\r\n                />\r\n                Disable\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"review\"\r\n                  value={false}\r\n                  checked={reviewCheck ? \"\" : \"checked\"}\r\n                  onClick={() => {\r\n                    setReviewCheck(false);\r\n                    fetchWithBody(\r\n                      \"https://aroacedb-back.herokuapp.com/permissions/review\",\r\n                      \"POST\",\r\n                      { checked: false }\r\n                    )\r\n                      .then((res) => res.json())\r\n                      .then((resJson) => {\r\n                        console.log(resJson);\r\n                      });\r\n                  }}\r\n                />\r\n              </div>\r\n            </label>\r\n            <label className=\"switch text-secondary dark:text-darksecondary\">\r\n              Story Suggestions\r\n              <div>\r\n                Enable\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"story\"\r\n                  value={true}\r\n                  checked={storyCheck ? \"checked\" : \"\"}\r\n                  onClick={() => {\r\n                    setStoryCheck(true);\r\n                    fetchWithBody(\r\n                      \"https://aroacedb-back.herokuapp.com/permissions/story\",\r\n                      \"POST\",\r\n                      { checked: true }\r\n                    )\r\n                      .then((res) => res.json())\r\n                      .then((resJson) => {\r\n                        console.log(resJson);\r\n                      });\r\n                  }}\r\n                />\r\n                Disable\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"story\"\r\n                  value={false}\r\n                  checked={storyCheck ? \"\" : \"checked\"}\r\n                  onClick={() => {\r\n                    setStoryCheck(false);\r\n                    fetchWithBody(\r\n                      \"https://aroacedb-back.herokuapp.com/permissions/story\",\r\n                      \"POST\",\r\n                      { checked: false }\r\n                    )\r\n                      .then((res) => res.json())\r\n                      .then((resJson) => {\r\n                        console.log(resJson);\r\n                      });\r\n                  }}\r\n                />\r\n              </div>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\all-characters\\all-characters.js",["300"],"import \"./all-characters.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableCharacter from \"../../components/table-character/table\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function AllCharacters() {\r\n  const [characters, setCharacters] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n  const [token, setToken] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    fetch(\r\n      `https://aroacedb-back.herokuapp.com/characters?offset=${\r\n        currentPage * 20 - 20\r\n      }`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const data = resJson.data.paginated_characters;\r\n        console.log(\"characters:\", data);\r\n        setCharacters(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"AllCharacters\">\r\n      <Sidebar />\r\n\r\n      <MobileHeader />\r\n      <div className=\"all-characters-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"title\">\r\n          <h2 className=\"text-secondary dark:text-darksecondary\">\r\n            All Characters\r\n          </h2>\r\n          {token ? (\r\n            <a\r\n              href=\"/add-character\"\r\n              className=\"bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darksecondary dark:hover:text-darkdetail\"\r\n            >\r\n              Add character\r\n            </a>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <TableCharacter content={characters} type=\"regular\" id=\"character\" />\r\n\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\about\\about.js",["301","302"],"import \"./about.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Globe from \"../../assets/globe.png\";\r\nimport Twitter from \"../../assets/twitter.png\";\r\nimport Stats from \"../../components/stats/stats\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function About() {\r\n  const [stats, setStats] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/stats\").then((res) =>\r\n      res.json().then((resJson) => {\r\n        const data = resJson.data;\r\n        console.log(data);\r\n        setStats(data);\r\n      })\r\n    );\r\n  }, []);\r\n  return (\r\n    <div className=\"About\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"about-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"about\">\r\n          <h2>the database</h2>\r\n          <p>\r\n            The AroAce Database is a <strong>searchable</strong> compilation of\r\n            all <strong>aromantic and asexual characters</strong> in prose\r\n            fiction out there--or all that we could find so far, at any rate.\r\n            Enter as many search terms as you need and narrow down the results\r\n            to what you’re looking for!\r\n          </p>\r\n\r\n          <p>\r\n            None of the stories within are recommendations. You can, however,\r\n            find Claudie’s recommendations on her website:{\" \"}\r\n            <a href=\"http://claudiearseneault.com/?page_id=2107\">Aromantic</a> |\r\n            <a href=\"http://claudiearseneault.com/?page_id=2013\"> Asexual</a>\r\n          </p>\r\n        </div>\r\n\r\n        <Stats stats={stats} />\r\n\r\n        <div className=\"about\">\r\n          <h2>Database structure</h2>\r\n          <p>\r\n            Each character has a single entry, to which is attached information\r\n            on individual stories and reviews, when available. Entries are\r\n            separated in three sections: the character, the stories they feature\r\n            in, and the reviews.\r\n          </p>\r\n\r\n          <p>\r\n            A caveat, however: classification is a great tool, but it has its\r\n            flaws. Broad categories had to be created in order to keep the\r\n            information easily searchable, and some stories won’t fit neatly\r\n            into them, or will be grossly oversimplified by the term. The\r\n            database has a lot of potential, but it is still missing some key\r\n            parameter, and even those present won’t always give the best idea of\r\n            what to expect.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"about\">\r\n          <h2>The terminology</h2>\r\n          <div className=\"terminology\">\r\n            <div className=\"single\">\r\n              <div>Character name</div>\r\n              <div>Character's name</div>\r\n            </div>\r\n            <div className=\"single\">\r\n              <div>Author</div>\r\n              <div>Author's name</div>\r\n            </div>\r\n            <div className=\"single\">\r\n              <div>Title</div>\r\n              <div>Story or book title</div>\r\n            </div>\r\n            <div className=\"single\">\r\n              <div>Series</div>\r\n              <div>Name of the series (if applicable)</div>\r\n            </div>\r\n            <div className=\"single\">\r\n              <div>Genre</div>\r\n              <div>The story's literary genre(s) and age category</div>\r\n            </div>\r\n\r\n            <div className=\"multi\">\r\n              <div className=\"title\">Length</div>\r\n              <div className=\"side-container\">\r\n                <div className=\"info\">The length of the story</div>\r\n                <div className=\"side\">\r\n                  <div>Short story</div>\r\n                  <div>Up to 10.000 words</div>\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>Novella</div>\r\n                  <div>10,000 to 50,000 words</div>\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>Novel (short)</div>\r\n                  <div>50,000 to 80,000 words</div>\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>Novel (long)</div>\r\n                  <div>More than 80,000 words</div>\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>Anthology</div>\r\n                  <div>Short story is part of an anthology</div>\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>Webseries</div>\r\n                  <div>\r\n                    Published in several installments on the internet (blog,\r\n                    Wattpad, etc.)\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"multi\">\r\n              <div className=\"title\">Type of Rep</div>\r\n              <div className=\"side-container\">\r\n                <div className=\"info\">\r\n                  How “involved” the representation is.\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>Word of God</div>\r\n                  <div>\r\n                    The character’s sexuality is not explicit on page, but the\r\n                    author has confirmed it\r\n                  </div>\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>On page</div>\r\n                  <div>\r\n                    The character’s sexuality is explicitly demonstrated within\r\n                    the text. It should be showed or discussed to an extent that\r\n                    makes it clear to the readers.\r\n                  </div>\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>Word used</div>\r\n                  <div>\r\n                    The identity is stated using the actual word (usually also\r\n                    On Page)\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"single\">\r\n              <div>Gender</div>\r\n              <div> Character’s gender (nonbinary characters are grouped)</div>\r\n            </div>\r\n\r\n            <div className=\"multi\">\r\n              <div className=\"title\">Character importance</div>\r\n              <div className=\"side-container\">\r\n                <div className=\"info\">\r\n                  The character’s importance to the story\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>Lead</div>\r\n                  <div>\r\n                    The character is at the heart of the story’s central\r\n                    storyline\r\n                  </div>\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>Main</div>\r\n                  <div>\r\n                    The character plays an important role in the story and is\r\n                    frequently on page\r\n                  </div>\r\n                </div>\r\n                <div className=\"side\">\r\n                  <div>Side</div>\r\n                  <div>The character plays a minor role in the story</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"single\">\r\n              <div>Sexual Orientation</div>\r\n              <div>The character’s sexual orientation</div>\r\n            </div>\r\n\r\n            <div className=\"single\">\r\n              <div>Romantic Orientation</div>\r\n              <div>The character’s romantic orientation </div>\r\n            </div>\r\n\r\n            <div className=\"single\">\r\n              <div>Relationships</div>\r\n              <div>Most important relationships to the character.</div>\r\n            </div>\r\n\r\n            <div className=\"single\">\r\n              <div>Pairing</div>\r\n              <div>\r\n                Genders of the relationship (qpr or romantic) in which the\r\n                character is involved, if any.\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"single\">\r\n              <div>Rep Notes&Warnings</div>\r\n              <div> Warnings or notes with regards to the representation.</div>\r\n            </div>\r\n\r\n            <div className=\"single\">\r\n              <div>Other Notes&Warnings</div>\r\n              <div>\r\n                Everything else! This includes notes about polyamory, race,\r\n                disability, known content warnings, explanations, etc.\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"single\">\r\n              <div>Reviews</div>\r\n              <div>Ownvoices reviews for this story</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-character\\suggested-character.js",["303","304","305","306","307"],"import React from \"react\";\r\nimport \"./suggested-character.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport {\r\n  fazerRequisicaoComBody,\r\n  fetchWithToken,\r\n  fetchWithTokenNoBody,\r\n} from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const [token, setToken] = React.useState(\"\");\r\n\r\n  const history = useHistory();\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/suggest/characters/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setCharacter(resJson.data.character[0]);\r\n        console.log(resJson.data.character[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Character\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"character-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"suggest\">\r\n          <h2 className=\"title text-secondary dark:text-darksecondary\">\r\n            Suggested character\r\n          </h2>\r\n\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              character_name: character.character_name,\r\n              author: character.author,\r\n              gender: character.gender,\r\n              importance: character.importance,\r\n              pairing_qpp_or_romantic: character.pairing_qpp_or_romantic,\r\n              main_storyseries: character.main_storyseries,\r\n              type_of_rep: character.type_of_rep,\r\n              romantic_orientation: character.romantic_orientation,\r\n              sexual_orientation: character.sexual_orientation,\r\n              genre: character.genre,\r\n              relationships: character.relationships,\r\n              rep_noteswarnings: character.rep_noteswarnings,\r\n              cover: character.cover,\r\n              reference: character.reference,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                //add character to database\r\n                \"https://aroacedb-back.herokuapp.com/characters\",\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  let character_id = resJson.data.dbCharacter[0].id;\r\n\r\n                  fetch(\r\n                    //get character stories from st_sc_suggestions\r\n                    `https://aroacedb-back.herokuapp.com/suggest/sc/character/stories/${params.id}`\r\n                  )\r\n                    .then((res) => res.json())\r\n                    .then((resJson) => {\r\n                      console.log(resJson);\r\n                      const stories = resJson.data.stories;\r\n\r\n                      stories.forEach((story) => {\r\n                        story.character_id = character_id;\r\n                        console.log(story);\r\n                        fetchWithToken(\r\n                          // add to real story database\r\n                          `https://aroacedb-back.herokuapp.com/stories`,\r\n                          \"POST\",\r\n                          story,\r\n                          token\r\n                        )\r\n                          .then((res) => res.json())\r\n                          .then((resJson) => {\r\n                            console.log(resJson);\r\n\r\n                            fetchWithTokenNoBody(\r\n                              //delete from sc suggested stories\r\n                              `https://aroacedb-back.herokuapp.com/suggest/sc/character/stories/${params.id}`,\r\n                              \"DELETE\",\r\n                              token\r\n                            )\r\n                              .then((res) => res.json())\r\n                              .then((resJson) => {\r\n                                console.log(resJson);\r\n                                fetchWithTokenNoBody(\r\n                                  //delete character from suggestions\r\n                                  `https://aroacedb-back.herokuapp.com/suggest/characters/${params.id}`,\r\n                                  \"DELETE\",\r\n                                  token\r\n                                )\r\n                                  .then((res) => res.json())\r\n                                  .then((resJson) => {\r\n                                    console.log(resJson);\r\n                                    history.push(\"/success\");\r\n                                  });\r\n                              });\r\n                          });\r\n                      });\r\n                    });\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"suggest-character-info\">\r\n                    <div className=\"line\">\r\n                      <h2>\r\n                        <input\r\n                          id=\"character_name\"\r\n                          placeholder={character.character_name}\r\n                          type=\"text\"\r\n                          value={values.character_name}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h2>\r\n\r\n                      <select\r\n                        name=\"importance\"\r\n                        value={values.importance}\r\n                        onChange={handleChange}\r\n                        onBlur={handleChange}\r\n                      >\r\n                        <option value=\"\" label=\"Select one\" />\r\n                        <option value=\"Lead\" label=\"Lead\" />\r\n                        <option value=\"Main\" label=\"Main\" />\r\n                        <option value=\"Side\" label=\"Side\" />\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Author</span>\r\n                        <input\r\n                          id=\"author\"\r\n                          placeholder={character.author}\r\n                          type=\"text\"\r\n                          value={values.author}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Gender</span>{\" \"}\r\n                        <select\r\n                          name=\"gender\"\r\n                          value={values.gender}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select gender\" />\r\n                          <option value=\"M\" label=\"M\" />\r\n                          <option value=\"F\" label=\"F\" />\r\n                          <option value=\"Enby\" label=\"Enby\" />\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Pairing</span>\r\n                        <input\r\n                          id=\"pairing_qpp_or_romantic\"\r\n                          placeholder={character.pairing_qpp_or_romantic}\r\n                          type=\"text\"\r\n                          value={values.pairing_qpp_or_romantic}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Series</span>\r\n                        <input\r\n                          id=\"main_storyseries\"\r\n                          placeholder={character.main_storyseries}\r\n                          type=\"text\"\r\n                          value={values.main_storyseries}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Type of Rep</span>\r\n                        <select\r\n                          name=\"type_of_rep\"\r\n                          value={values.type_of_rep}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Word of God\" label=\"Word of God\" />\r\n                          <option value=\"On Page\" label=\"On Page\" />\r\n                          <option value=\"Word Used\" label=\"Word Used\" />\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Romantic orientation</span>\r\n\r\n                        <select\r\n                          name=\"romantic_orientation\"\r\n                          value={values.romantic_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Alloromantic\" label=\"Alloromantic\" />\r\n                          <option value=\"Aroflux\" label=\"Aroflux\" />\r\n                          <option value=\"Aromantic\" label=\"Aromantic\" />\r\n                          <option value=\"Arospec\" label=\"Arospec\" />\r\n                          <option value=\"Biromantic\" label=\"Biromantic\" />\r\n                          <option value=\"Greyromantic\" label=\"Grayromantic\" />\r\n                          <option value=\"Demiromantic\" label=\"Demiromantic\" />\r\n                          <option\r\n                            value=\"Heteroromantic\"\r\n                            label=\"Heteroromantic\"\r\n                          />\r\n                          <option value=\"Homoromantic\" label=\"Homoromantic\" />\r\n                          <option value=\"Panromantic\" label=\"Panromantic\" />\r\n                          <option value=\"Queer\" label=\"Queer\" />\r\n                          <option value=\"WTFRomantic\" label=\"WTFRomantic\" />\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Sexual Orientation</span>\r\n                        <select\r\n                          name=\"sexual_orientation\"\r\n                          value={values.sexual_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Allosexual\" label=\"Allosexual\" />\r\n                          <option value=\"Asexual\" label=\"Asexual\" />\r\n                          <option value=\"Acespec\" label=\"Acespec\" />\r\n                          <option value=\"Demisexual\" label=\"Demisexual\" />\r\n                          <option value=\"Bisexual\" label=\"Bisexual\" />\r\n                          <option value=\"Gay\" label=\"Gay\" />\r\n                          <option value=\"Gray-asexual\" label=\"Graysexual\" />\r\n                          <option value=\"Heterosexual\" label=\"Heterosexual\" />\r\n                          <option value=\"Pansexual\" label=\"Pansexual\" />\r\n                          <option value=\"Queer\" label=\"Queer\" />\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Genre</span>\r\n                        <input\r\n                          id=\"genre\"\r\n                          placeholder={character.genre}\r\n                          type=\"text\"\r\n                          value={values.genre}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Relationships</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"relationships\"\r\n                        placeholder={character.relationships}\r\n                        type=\"text\"\r\n                        value={values.relationships}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Notes & Warnings</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder={character.rep_noteswarnings}\r\n                        type=\"text\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>References to mention of representation</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"reference\"\r\n                        placeholder=\"Insert references\"\r\n                        type=\"text\"\r\n                        value={values.reference}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Cover</span>\r\n                      </p>\r\n                      <input\r\n                        id=\"cover\"\r\n                        placeholder={character.cover}\r\n                        type=\"text\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"buttons \">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n                      onClick={() => {\r\n                        console.log(\"delete from database\");\r\n                        fetchWithTokenNoBody(\r\n                          `https://aroacedb-back.herokuapp.com/suggest/characters/${params.id}`,\r\n                          \"DELETE\",\r\n                          token\r\n                        )\r\n                          .then((res) => res.json())\r\n                          .then((resJson) => {\r\n                            console.log(resJson);\r\n                            history.push(\"/success-deleted\");\r\n                          });\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n                      onClick={() => {\r\n                        // update character but don't add it to database/\r\n                        fetchWithToken(\r\n                          `https://aroacedb-back.herokuapp.com/suggest/characters/${params.id}`,\r\n                          \"PUT\",\r\n                          values,\r\n                          token\r\n                        )\r\n                          .then((res) => res.json())\r\n                          .then((resJson) => {\r\n                            console.log(resJson);\r\n                            history.push(\"/success\");\r\n                          });\r\n                      }}\r\n                    >\r\n                      Update\r\n                    </button>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"submit bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n                    >\r\n                      Add Character to Database\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-story\\update-story.js",["308","309","310","311","312","313"],"import React from \"react\";\r\nimport \"./update-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function UpdateStory() {\r\n  const [story, setStory] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n    fetch(`https://aroacedb-back.herokuapp.com/stories/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson.data.story[0]);\r\n\r\n        setStory(resJson.data.story[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"stories\">\r\n          <h3>Update Story</h3>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              story_title: story.story_title,\r\n              series_or_anthology: story.series_or_anthology,\r\n              genre: story.genre,\r\n              story_length: story.story_length,\r\n              type_of_rep: story.type_of_rep,\r\n              character_importance: story.character_importance,\r\n              rep_noteswarnings: story.rep_noteswarnings,\r\n              other_noteswarnings: story.other_noteswarnings,\r\n              cover: story.cover,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/stories/${story.id}`,\r\n                \"PUT\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <label>Story title</label>\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <label>Story length</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"story_length\"\r\n                            type=\"text\"\r\n                            placeholder=\"Story length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Character importance</label>\r\n                        <input\r\n                          id=\"character_importance\"\r\n                          type=\"text\"\r\n                          placeholder=\"Character importance\"\r\n                          value={values.character_importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <label>Series title</label>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <label>Genres</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Type of Rep</label>\r\n                        <span className=\"to-capitalize\">\r\n                          <input\r\n                            id=\"type_of_rep\"\r\n                            type=\"text\"\r\n                            placeholder=\"type of rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <span>Rep Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Other Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Cover</span>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Update\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-reviews\\suggested-reviews.js",["314"],"import \"./suggested-reviews.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Table from \"../../components/table-character/table\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableReview from \"../../components/table-review/table\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedReviews() {\r\n  const [reviews, setReviews] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/suggest/reviews\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const data = resJson.data.paginated_reviews;\r\n        console.log(data);\r\n        setReviews(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"SuggestedCharacters\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggested-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"title\">\r\n          <h2 className=\"text-secondary dark:text-darksecondary\">\r\n            Suggested Reviews\r\n          </h2>\r\n        </div>\r\n        <TableReview content={reviews} type=\"suggest\" id=\"review\" />\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-story\\suggest-story.js",["315","316"],"import React from \"react\";\r\nimport \"./suggest-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { Formik } from \"formik\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default function SuggestStory() {\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"stories\">\r\n          <h3>Suggest a Story</h3>\r\n          <Formik\r\n            initialValues={{\r\n              story_title: \"\",\r\n              series_or_anthology: \"\",\r\n              genre: \"\",\r\n              story_length: \"\",\r\n              type_of_rep: \"\",\r\n              character_importance: \"\",\r\n              rep_noteswarnings: \"\",\r\n              other_noteswarnings: \"\",\r\n              cover: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              values.character_id = params.id;\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetch(\"https://aroacedb-back.herokuapp.com/suggest/stories\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n              })\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-story-title\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-story-title\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">Story or book title</div>\r\n                          </ReactTooltip>\r\n                          <label>Story title</label>\r\n                        </div>\r\n\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-story-length\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-story-length\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              {\" \"}\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Short story:</strong>The character is\r\n                                  at the heart of the story’s central storyline\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Novella:</strong>The character plays\r\n                                  an important role in the story and is\r\n                                  frequently on page\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Novel (short):</strong>The character\r\n                                  plays a minor role in the story\r\n                                </li>\r\n\r\n                                <li>\r\n                                  <strong>Novel (long):</strong>More than 80,000\r\n                                  words\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Anthology:</strong>Short story is part\r\n                                  of an anthology\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Webseries:</strong>\r\n                                  Published in several installments on the\r\n                                  internet (blog, Wattpad, etc.)\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Story length</label>\r\n                        </div>\r\n                        <span>\r\n                          <select\r\n                            name=\"story_length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Short story\" label=\"Short story\" />\r\n                            <option value=\"Novella\" label=\"Novella\" />\r\n                            <option\r\n                              value=\"Novel (short)\"\r\n                              label=\"Novel (short)\"\r\n                            />\r\n                            <option value=\"Novel (long)\" label=\"Novel (long)\" />\r\n                            <option value=\"Anthology\" label=\"Anthology\" />\r\n                            <option value=\"Webseries\" label=\"Webseries\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-character-importance\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-character-importance\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Lead: </strong>The character is at the\r\n                                  heart <p>of the story’s central storyline</p>\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Main: </strong>The character plays an\r\n                                  important{\" \"}\r\n                                  <p>\r\n                                    role in the story and is frequently on page\r\n                                  </p>\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Lead: </strong>The character plays a\r\n                                  <p> minor role in the story</p>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Character importance</label>\r\n                        </div>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-series\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-series\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <p>\r\n                                Name of the series (if applicable). Short\r\n                                stories in an anthology\r\n                              </p>{\" \"}\r\n                              <p>can list the anthology name here.</p>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Series title</label>\r\n                        </div>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-genres\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-genres\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              {\" \"}\r\n                              <p>Story's literary genre. </p>{\" \"}\r\n                              <p>\r\n                                List in alphabetical order, i.e. \"Contemporary,\r\n                                Romance, Young Adult\".\r\n                              </p>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Genres</label>\r\n                        </div>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-type\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-type\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Word of God: </strong>The character’s\r\n                                  sexuality{\" \"}\r\n                                  <p>\r\n                                    is not explicit on page, but the author has\r\n                                    confirmed it.\r\n                                  </p>\r\n                                </li>\r\n                                <li>\r\n                                  <strong>On page:</strong> The character’s\r\n                                  sexuality is explicitly\r\n                                  <p>\r\n                                    demonstrated within the text. It should be\r\n                                    showed or\r\n                                  </p>\r\n                                  <p>\r\n                                    discussed to an extent that makes it clear\r\n                                    to the readers.\r\n                                  </p>\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Word used: </strong>The identity is\r\n                                  stated using the{\" \"}\r\n                                  <p> actual word (usually also On Page)</p>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Type of Rep</label>\r\n                        </div>\r\n                        <span className=\"to-capitalize\">\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-repnoteswarnings\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-repnoteswarnings\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">\r\n                            Any noteworthy information about the representation,\r\n                            <p>\r\n                              {\" \"}\r\n                              whether it is tropes (exile or dead ace, allo\r\n                              saviour, etc.)\r\n                            </p>{\" \"}\r\n                            or facets of it (sex repulsed/averse/positive, touch\r\n                            averse, etc.).\r\n                          </div>\r\n                        </ReactTooltip>\r\n                        <label>Rep Notes & Warnings</label>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-othernoteswarnings\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-othernoteswarnings\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">\r\n                            <p>\r\n                              Any noteworthy information about the\r\n                              representation,\r\n                            </p>\r\n                            <p>whether it is tropes (exile or dead ace, allo</p>\r\n                            <p>\r\n                              saviour, etc.) or facets of it (sex\r\n                              repulsed/averse/positive, touch averse, etc.)\r\n                            </p>\r\n                          </div>\r\n                        </ReactTooltip>\r\n                        <label>Other Notes & Warnings</label>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-cover\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-cover\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">URL to cover image.</div>\r\n                        </ReactTooltip>\r\n                        <label>Cover</label>\r\n                      </div>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n                    >\r\n                      Suggest\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-stories\\suggested-stories.js",["317"],"import \"./suggested-stories.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Table from \"../../components/table-character/table\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableStory from \"../../components/table-story/table\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedStories() {\r\n  const [stories, setStories] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/suggest/stories\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        const data = resJson.data.paginated_stories;\r\n        console.log(data);\r\n        setStories(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"SuggestedCharacters\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggested-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"title\">\r\n          <h2 className=\"text-secondary dark:text-darksecondary\">\r\n            Suggested Stories\r\n          </h2>\r\n        </div>\r\n        <div className=\"table-container\">\r\n          <TableStory content={stories} type=\"suggest\" id=\"story\" />\r\n        </div>\r\n\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-character\\update-character.js",["318","319","320","321"],"import React from \"react\";\r\nimport \"./update-character.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithBody, fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function UpdateCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const [token, setToken] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/characters/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setCharacter(resJson.data.character[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Character\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"character-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"suggest\">\r\n          <h2 className=\"title\">Update character</h2>\r\n\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              character_name: character.character_name,\r\n              author: character.author,\r\n              gender: character.gender,\r\n              importance: character.importance,\r\n              pairing_qpp_or_romantic: character.pairing_qpp_or_romantic,\r\n              main_storyseries: character.main_storyseries,\r\n              type_of_rep: character.type_of_rep,\r\n              romantic_orientation: character.romantic_orientation,\r\n              sexual_orientation: character.sexual_orientation,\r\n              genre: character.genre,\r\n              relationships: character.relationships,\r\n              rep_noteswarnings: character.rep_noteswarnings,\r\n              cover: character.cover,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(token);\r\n              console.log(`http:localhost:8081/characters/${params.id}`);\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/characters/${params.id}`,\r\n                \"PUT\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n              //s history.push(\"/success\");\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"suggest-character-info\">\r\n                    <div className=\"line\">\r\n                      <h2>\r\n                        <input\r\n                          id=\"character_name\"\r\n                          placeholder={character.character_name}\r\n                          type=\"text\"\r\n                          value={values.character_name}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h2>\r\n                      <input\r\n                        id=\"importance\"\r\n                        placeholder={character.importance}\r\n                        type=\"text\"\r\n                        value={values.importance}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Author</span>\r\n                        <input\r\n                          id=\"author\"\r\n                          placeholder={character.author}\r\n                          type=\"text\"\r\n                          value={values.author}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Gender</span>{\" \"}\r\n                        <input\r\n                          id=\"gender\"\r\n                          placeholder={character.gender}\r\n                          type=\"text\"\r\n                          value={values.gender}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Pairing</span>\r\n                        <input\r\n                          id=\"pairing_qpp_or_romantic\"\r\n                          placeholder={character.pairing_qpp_or_romantic}\r\n                          type=\"text\"\r\n                          value={values.pairing_qpp_or_romantic}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Series</span>\r\n                        <input\r\n                          id=\"main_storyseries\"\r\n                          placeholder={character.main_storyseries}\r\n                          type=\"text\"\r\n                          value={values.main_storyseries}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Type of Rep</span>\r\n                        <input\r\n                          id=\"type_of_rep\"\r\n                          placeholder={character.type_of_rep}\r\n                          type=\"text\"\r\n                          value={values.type_of_rep}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Romantic orientation</span>\r\n                        <input\r\n                          id=\"romantic_orientation\"\r\n                          placeholder={character.romantic_orientation}\r\n                          type=\"text\"\r\n                          value={values.romantic_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Sexual Orientation</span>\r\n                        <input\r\n                          id=\"sexual_orientation\"\r\n                          placeholder={character.sexual_orientation}\r\n                          type=\"text\"\r\n                          value={values.sexual_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Genre</span>\r\n                        <input\r\n                          id=\"genre\"\r\n                          placeholder={character.genre}\r\n                          type=\"text\"\r\n                          value={values.genre}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Relationships</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"relationships\"\r\n                        placeholder={character.relationships}\r\n                        type=\"text\"\r\n                        value={values.relationships}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Notes & Warnings</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder={character.rep_noteswarnings}\r\n                        type=\"text\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Cover</span>\r\n                      </p>\r\n                      <input\r\n                        id=\"cover\"\r\n                        placeholder={character.cover}\r\n                        type=\"text\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"buttons\">\r\n                    <button\r\n                      type=\"button bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n                      onClick={() => {\r\n                        console.log(\"delete from database\");\r\n                        fetch(\r\n                          `https://aroacedb-back.herokuapp.com/suggest/${params}`,\r\n                          {\r\n                            method: \"DELETE\",\r\n                            headers: { \"Content-Type\": \"application/json\" },\r\n                          }\r\n                        )\r\n                          .then((res) => res.json())\r\n                          .then((resJson) => {\r\n                            console.log(resJson);\r\n                            history.push(\"/success-deleted-ch\");\r\n                          });\r\n\r\n                        //history.push(\"/success\");\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n                    >\r\n                      Update Character to Database\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-review\\suggest-review.js",["322","323","324","325","326","327","328","329","330"],"import React from \"react\";\r\nimport \"./suggest-review.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fazerRequisicaoComBody } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestReview() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"stories\">\r\n          <h3>Suggest a Review</h3>\r\n          <Formik\r\n            initialValues={{\r\n              review_for: \"\",\r\n              reviewer: \"\",\r\n              ownvoice_for: \"\",\r\n              link: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              values.character_id = params.id;\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetch(\"https://aroacedb-back.herokuapp.com/suggest/reviews\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n              })\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"ReviewInfo\">\r\n                    <div className=\"container\">\r\n                      <div className=\"content-hundred\">\r\n                        <div className=\"block\">\r\n                          <label>\r\n                            <div className=\"group\">\r\n                              <span\r\n                                className=\"hover\"\r\n                                data-for=\"tooltip-review-for\"\r\n                                data-tip\r\n                              >\r\n                                ?\r\n                              </span>\r\n                              <ReactTooltip\r\n                                id=\"tooltip-review-for\"\r\n                                effect=\"solid\"\r\n                                place=\"top\"\r\n                                type=\"dark\"\r\n                              >\r\n                                <div className=\"tooltip\">\r\n                                  Story the review was written about.\r\n                                </div>\r\n                              </ReactTooltip>\r\n                              <span>Review for</span>\r\n                            </div>\r\n\r\n                            <input\r\n                              id=\"review_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Review for\"\r\n                              value={values.review_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n\r\n                          <label>\r\n                            <div className=\"group\">\r\n                              <span\r\n                                className=\"hover\"\r\n                                data-for=\"tooltip-link\"\r\n                                data-tip\r\n                              >\r\n                                ?\r\n                              </span>\r\n                              <ReactTooltip\r\n                                id=\"tooltip-link\"\r\n                                effect=\"solid\"\r\n                                place=\"top\"\r\n                                type=\"dark\"\r\n                              >\r\n                                <div className=\"tooltip\">\r\n                                  A link to where the review is hosted.\r\n                                </div>\r\n                              </ReactTooltip>\r\n                              <span>Link</span>\r\n                            </div>\r\n                            <input\r\n                              id=\"link\"\r\n                              type=\"text\"\r\n                              placeholder=\"Link\"\r\n                              value={values.link}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <span className=\"block\">\r\n                          <label>\r\n                            <div className=\"group\">\r\n                              <span\r\n                                className=\"hover\"\r\n                                data-for=\"tooltip-reviewer\"\r\n                                data-tip\r\n                              >\r\n                                ?\r\n                              </span>\r\n                              <ReactTooltip\r\n                                id=\"tooltip-reviewer\"\r\n                                effect=\"solid\"\r\n                                place=\"top\"\r\n                                type=\"dark\"\r\n                              >\r\n                                <div className=\"tooltip\">\r\n                                  The person who reviewed the story.\r\n                                </div>\r\n                              </ReactTooltip>\r\n                              <span>Reviewer</span>\r\n                            </div>\r\n                            <input\r\n                              id=\"reviewer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Reviewer\"\r\n                              value={values.reviewer}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            <div className=\"group\">\r\n                              <span\r\n                                className=\"hover\"\r\n                                data-for=\"tooltip-ownvoice-for\"\r\n                                data-tip\r\n                              >\r\n                                ?\r\n                              </span>\r\n                              <ReactTooltip\r\n                                id=\"tooltip-ownvoice-for\"\r\n                                effect=\"solid\"\r\n                                place=\"top\"\r\n                                type=\"dark\"\r\n                              >\r\n                                <div className=\"tooltip\">\r\n                                  Ownvoices aspects of the review.\r\n                                </div>\r\n                              </ReactTooltip>\r\n                              <span>Ownvoice for</span>\r\n                            </div>\r\n                            <input\r\n                              id=\"ownvoice_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Ownvoice for\"\r\n                              value={values.ownvoice_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"review-right bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n                  >\r\n                    Suggest\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-character\\add-character.js",["331","332"],"import React from \"react\";\r\nimport \"./add-character.css\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default function AddCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"Character\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"character-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"suggest\">\r\n          <h2 className=\"title text-secondary dark:text-darksecondary\">\r\n            Add a character\r\n          </h2>\r\n\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              character_name: \"\",\r\n              author: \"\",\r\n              gender: \"\",\r\n              importance: \"\",\r\n              pairing_qpp_or_romantic: \"\",\r\n              main_storyseries: \"\",\r\n              type_of_rep: \"\",\r\n              romantic_orientation: \"\",\r\n              sexual_orientation: \"\",\r\n              genre: \"\",\r\n              relationships: \"\",\r\n              rep_noteswarnings: \"\",\r\n              cover: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              const token = localStorage.getItem(\"token\");\r\n              console.log(token);\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                \"https://aroacedb-back.herokuapp.com/characters\",\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n              //s history.push(\"/success\");\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"suggest-character-info\">\r\n                    <div className=\"line\">\r\n                      <h2>\r\n                        <input\r\n                          id=\"character_name\"\r\n                          placeholder={character.character_name}\r\n                          type=\"text\"\r\n                          value={values.character_name}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h2>\r\n                      <div className=\"importance-container\">\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover \"\r\n                            data-for=\"tooltip-importance\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-importance\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Lead:</strong>The character is at the\r\n                                  heart of the story’s central storyline\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Main:</strong>The character plays an\r\n                                  important role in the story and is frequently\r\n                                  on page\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Lead:</strong>The character plays a\r\n                                  minor role in the story\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <span>Importance</span>\r\n                        </div>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Author</span>\r\n                        </div>\r\n                        <input\r\n                          id=\"author\"\r\n                          placeholder={character.author}\r\n                          type=\"text\"\r\n                          value={values.author}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Gender</span>\r\n                        </div>\r\n\r\n                        <select\r\n                          name=\"gender\"\r\n                          value={values.gender}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select gender\" />\r\n                          <option value=\"M\" label=\"M\" />\r\n                          <option value=\"F\" label=\"F\" />\r\n                          <option value=\"Enby\" label=\"Enby\" />\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Pairing</span>\r\n                        </div>\r\n                        <input\r\n                          id=\"pairing_qpp_or_romantic\"\r\n                          placeholder={character.pairing_qpp_or_romantic}\r\n                          type=\"text\"\r\n                          value={values.pairing_qpp_or_romantic}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Series</span>\r\n                        </div>\r\n                        <input\r\n                          id=\"main_storyseries\"\r\n                          placeholder={character.main_storyseries}\r\n                          type=\"text\"\r\n                          value={values.main_storyseries}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Type of Rep</span>\r\n                        </div>\r\n\r\n                        <select\r\n                          name=\"type_of_rep\"\r\n                          value={values.type_of_rep}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Word of God\" label=\"Word of God\" />\r\n                          <option value=\"On Page\" label=\"On Page\" />\r\n                          <option value=\"Word Used\" label=\"Word Used\" />\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Romantic orientation</span>\r\n                        </div>\r\n                        <select\r\n                          name=\"romantic_orientation\"\r\n                          value={values.romantic_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Alloromantic\" label=\"Alloromantic\" />\r\n                          <option value=\"Aroflux\" label=\"Aroflux\" />\r\n                          <option value=\"Aromantic\" label=\"Aromantic\" />\r\n                          <option value=\"Arospec\" label=\"Arospec\" />\r\n                          <option value=\"Biromantic\" label=\"Biromantic\" />\r\n                          <option value=\"Greyromantic\" label=\"Grayromantic\" />\r\n                          <option value=\"Demiromantic\" label=\"Demiromantic\" />\r\n                          <option\r\n                            value=\"Heteroromantic\"\r\n                            label=\"Heteroromantic\"\r\n                          />\r\n                          <option value=\"Homoromantic\" label=\"Homoromantic\" />\r\n                          <option value=\"Panromantic\" label=\"Panromantic\" />\r\n                          <option value=\"Queer\" label=\"Queer\" />\r\n                          <option value=\"WTFRomantic\" label=\"WTFRomantic\" />\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Sexual Orientation</span>\r\n                        </div>\r\n\r\n                        <select\r\n                          name=\"sexual_orientation\"\r\n                          value={values.sexual_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Allosexual\" label=\"Allosexual\" />\r\n                          <option value=\"Asexual\" label=\"Asexual\" />\r\n                          <option value=\"Acespec\" label=\"Acespec\" />\r\n                          <option value=\"Demisexual\" label=\"Demisexual\" />\r\n                          <option value=\"Bisexual\" label=\"Bisexual\" />\r\n                          <option value=\"Gay\" label=\"Gay\" />\r\n                          <option value=\"Gray-asexual\" label=\"Graysexual\" />\r\n                          <option value=\"Heterosexual\" label=\"Heterosexual\" />\r\n                          <option value=\"Pansexual\" label=\"Pansexual\" />\r\n                          <option value=\"Queer\" label=\"Queer\" />\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Genre</span>\r\n                        </div>\r\n                        <input\r\n                          id=\"genre\"\r\n                          placeholder={character.genre}\r\n                          type=\"text\"\r\n                          value={values.genre}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <div className=\"group\">\r\n                        <p>\r\n                          <span>Relationships</span>\r\n                        </p>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"relationships\"\r\n                        placeholder={character.relationships}\r\n                        type=\"text\"\r\n                        value={values.relationships}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <div className=\"group\">\r\n                        <p>\r\n                          <span>Notes & Warnings</span>\r\n                        </p>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder={character.rep_noteswarnings}\r\n                        type=\"text\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <div className=\"group\">\r\n                        <p>\r\n                          <span>Cover</span>\r\n                        </p>\r\n                      </div>\r\n                      <input\r\n                        id=\"cover\"\r\n                        placeholder={character.cover}\r\n                        type=\"text\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"buttons-add\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Add Character to Database\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-review\\suggested-review.js",["333","334","335","336","337","338","339","340"],"import React from \"react\";\r\nimport \"./suggested-review.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport {\r\n  fazerRequisicaoComBody,\r\n  fetchWithToken,\r\n  fetchWithTokenNoBody,\r\n} from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedReview() {\r\n  const [review, setReview] = React.useState({});\r\n  const [token, setToken] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/suggest/reviews/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setReview(resJson.data.review[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"stories\">\r\n          <h3>Suggested Review</h3>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              review_for: review.review_for,\r\n              reviewer: review.reviewer,\r\n              ownvoice_for: review.ownvoice_for,\r\n              link: review.link,\r\n              character_id: review.character_id,\r\n            }}\r\n            onSubmit={(values) => {\r\n              values.character_id = review.character_id;\r\n              console.log(JSON.stringify(values, null, 2));\r\n              console.log(review.character_id);\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/reviews`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/suggest/reviews/${review.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"ReviewInfo\">\r\n                    <div className=\"container\">\r\n                      <div className=\"content-hundred\">\r\n                        <div className=\"block\">\r\n                          <label>\r\n                            Review for\r\n                            <input\r\n                              id=\"review_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Review for\"\r\n                              value={values.review_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n\r\n                          <label>\r\n                            Link\r\n                            <input\r\n                              id=\"link\"\r\n                              type=\"text\"\r\n                              placeholder=\"Link\"\r\n                              value={values.link}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <span className=\"block\">\r\n                          <label>\r\n                            Reviewer\r\n                            <input\r\n                              id=\"reviewer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Reviewer\"\r\n                              value={values.reviewer}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            Ownvoices for\r\n                            <input\r\n                              id=\"ownvoices_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Ownvoice for\"\r\n                              value={values.ownvoice_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    className=\"bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n                    onClick={() => {\r\n                      fetchWithTokenNoBody(\r\n                        `https://aroacedb-back.herokuapp.com/suggest/reviews/${review.id}`,\r\n                        \"DELETE\",\r\n                        token\r\n                      )\r\n                        .then((res) => res.json())\r\n                        .then((resJson) => {\r\n                          console.log(resJson);\r\n                          history.push(\"/success\");\r\n                        });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"review-right bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n                  >\r\n                    Add to Database\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-review\\update-review.js",["341","342","343","344","345","346","347"],"import React from \"react\";\r\nimport \"./update-review.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function UpdateReview() {\r\n  const [review, setReview] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n    fetch(`https://aroacedb-back.herokuapp.com/reviews/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setReview(resJson.data.review[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"stories\">\r\n          <h3>Update Review</h3>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              review_for: review.review_for,\r\n              reviewer: review.reviewer,\r\n              ownvoice_for: review.ownvoice_for,\r\n              link: review.link,\r\n              character_id: review.character_id,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/reviews/${review.id}`,\r\n                \"PUT\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"ReviewInfo\">\r\n                    <div className=\"container\">\r\n                      <div className=\"content-hundred\">\r\n                        <div className=\"block\">\r\n                          <label>\r\n                            Review for\r\n                            <input\r\n                              id=\"review_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Review for\"\r\n                              value={values.review_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n\r\n                          <label>\r\n                            Link\r\n                            <input\r\n                              id=\"link\"\r\n                              type=\"text\"\r\n                              placeholder=\"Link\"\r\n                              value={values.link}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <span className=\"block\">\r\n                          <label>\r\n                            Reviewer\r\n                            <input\r\n                              id=\"reviewer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Reviewer\"\r\n                              value={values.reviewer}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            Ownvoices for\r\n                            <input\r\n                              id=\"ownvoices_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Ownvoice for\"\r\n                              value={values.ownvoice_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"review-right\">\r\n                    Update\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-story\\suggested-story.js",["348","349","350","351","352","353","354","355"],"import React from \"react\";\r\nimport \"./suggested-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport {\r\n  fazerRequisicaoComBody,\r\n  fetchWithToken,\r\n  fetchWithTokenNoBody,\r\n} from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedStory() {\r\n  const [story, setStory] = React.useState({});\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [cover, setCover] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/suggest/stories/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson.data.story[0]);\r\n        setStory(resJson.data.story[0]);\r\n        console.log(resJson.data.story[0].cover);\r\n        setCover(resJson.data.story[0].cover);\r\n        let character_id = resJson.data.story[0].character_id;\r\n        fetch(`https://aroacedb-back.herokuapp.com/characters/${character_id}`)\r\n          .then((res) => res.json())\r\n          .then((resJson) => {\r\n            console.log(resJson);\r\n            setName(resJson.data.character[0].character_name);\r\n          });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"stories\">\r\n          <h3>Suggested Story</h3>\r\n          <h4>Character: {name}</h4>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              story_title: story.story_title,\r\n              series_or_anthology: story.series_or_anthology,\r\n              genre: story.genre,\r\n              story_length: story.story_length,\r\n              type_of_rep: story.type_of_rep,\r\n              character_importance: story.character_importance,\r\n              rep_noteswarnings: story.rep_noteswarnings,\r\n              other_noteswarnings: story.other_noteswarnings,\r\n              character_id: story.character_id,\r\n              cover: story.cover,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/stories`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/suggest/stories/${story.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <label>Story title</label>\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <label>Story length</label>\r\n                        <span>\r\n                          <select\r\n                            name=\"story_length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Short story\" label=\"Short story\" />\r\n                            <option value=\"Novella\" label=\"Novella\" />\r\n                            <option\r\n                              value=\"Novel (short)\"\r\n                              label=\"Novel (short)\"\r\n                            />\r\n                            <option value=\"Novel (long)\" label=\"Novel (long)\" />\r\n                            <option value=\"Anthology\" label=\"Anthology\" />\r\n                            <option value=\"Webseries\" label=\"Webseries\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Character importance</label>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <label>Series title</label>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <label>Genres</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Type of Rep</label>\r\n                        <span className=\"to-capitalize\">\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <span>Rep Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Other Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Cover</span>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <img src={values.cover} alt=\"cover\" />\r\n                    <div className=\"buttons\">\r\n                      <button\r\n                        className=\"bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n                        onClick={() => {\r\n                          fetchWithTokenNoBody(\r\n                            `https://aroacedb-back.herokuapp.com/suggest/stories/${story.id}`,\r\n                            \"DELETE\",\r\n                            token\r\n                          )\r\n                            .then((res) => res.json())\r\n                            .then((resJson) => {\r\n                              console.log(resJson);\r\n                              history.push(\"/success\");\r\n                            });\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                      <button\r\n                        type=\"submit\"\r\n                        disabled={isSubmitting}\r\n                        className=\"submit bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n                      >\r\n                        Add Story to Database\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success-st-sc\\success.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\sc-suggested-stories\\suggested-stories.js",["356"],"import \"./suggested-stories.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableStory from \"../../components/table-story/table\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport TableSCStory from \"../../components/table-sc-story/table\";\r\n\r\nexport default function SuggestedStoriesSC() {\r\n  const [stories, setStories] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/suggest/sc/stories\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        const data = resJson.data.paginated_stories;\r\n        console.log(data);\r\n        setStories(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"SuggestedCharacters\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggested-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"title\">\r\n          <h2 className=\"text-secondary dark:text-darksecondary\">\r\n            Suggested Stories\r\n          </h2>\r\n        </div>\r\n        <div className=\"table-container\">\r\n          <TableSCStory content={stories} type=\"suggest\" id=\"story\" />\r\n        </div>\r\n\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-story\\add-story.js",["357","358","359"],"import React from \"react\";\r\nimport \"./add-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default function AddStory() {\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n\r\n    fetch(`https://aroacedb-back.herokuapp.com/characters/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setName(resJson.data.character[0].character_name);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Add Story</h3>\r\n          <h4>Character: {name}</h4>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              story_title: \"\",\r\n              series_or_anthology: \"\",\r\n              genre: \"\",\r\n              story_length: \"\",\r\n              type_of_rep: \"\",\r\n              character_importance: \"\",\r\n              rep_noteswarnings: \"\",\r\n              other_noteswarnings: \"\",\r\n              character_id: params.id,\r\n              cover: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/stories`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(`/character/${params.id}`);\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-story-title\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-story-title\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">Story or book title</div>\r\n                          </ReactTooltip>\r\n                          <label>Story title</label>\r\n                        </div>\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-story-length\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-story-length\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              {\" \"}\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Short story:</strong>The character is\r\n                                  at the heart of the story’s central storyline\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Novella:</strong>The character plays\r\n                                  an important role in the story and is\r\n                                  frequently on page\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Novel (short):</strong>The character\r\n                                  plays a minor role in the story\r\n                                </li>\r\n\r\n                                <li>\r\n                                  <strong>Novel (long):</strong>More than 80,000\r\n                                  words\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Anthology:</strong>Short story is part\r\n                                  of an anthology\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Webseries:</strong>\r\n                                  Published in several installments on the\r\n                                  internet (blog, Wattpad, etc.)\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Story length</label>\r\n                        </div>\r\n                        <span>\r\n                          <select\r\n                            name=\"story_length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Short story\" label=\"Short story\" />\r\n                            <option value=\"Novella\" label=\"Novella\" />\r\n                            <option\r\n                              value=\"Novel (short)\"\r\n                              label=\"Novel (short)\"\r\n                            />\r\n                            <option value=\"Novel (long)\" label=\"Novel (long)\" />\r\n                            <option value=\"Anthology\" label=\"Anthology\" />\r\n                            <option value=\"Webseries\" label=\"Webseries\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-character-importance\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-character-importance\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Lead: </strong>The character is at the\r\n                                  heart <p>of the story’s central storyline</p>\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Main: </strong>The character plays an\r\n                                  important{\" \"}\r\n                                  <p>\r\n                                    role in the story and is frequently on page\r\n                                  </p>\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Lead: </strong>The character plays a\r\n                                  <p> minor role in the story</p>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Character importance</label>\r\n                        </div>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-series\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-series\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <p>\r\n                                Name of the series (if applicable). Short\r\n                                stories in an anthology\r\n                              </p>{\" \"}\r\n                              <p>can list the anthology name here.</p>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Series title</label>\r\n                        </div>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-genres\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-genres\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              {\" \"}\r\n                              <p>Story's literary genre. </p>{\" \"}\r\n                              <p>\r\n                                List in alphabetical order, i.e. \"Contemporary,\r\n                                Romance, Young Adult\".\r\n                              </p>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Genres</label>\r\n                        </div>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-type\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-type\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Word of God: </strong>The character’s\r\n                                  sexuality{\" \"}\r\n                                  <p>\r\n                                    is not explicit on page, but the author has\r\n                                    confirmed it.\r\n                                  </p>\r\n                                </li>\r\n                                <li>\r\n                                  <strong>On page:</strong> The character’s\r\n                                  sexuality is explicitly\r\n                                  <p>\r\n                                    demonstrated within the text. It should be\r\n                                    showed or\r\n                                  </p>\r\n                                  <p>\r\n                                    discussed to an extent that makes it clear\r\n                                    to the readers.\r\n                                  </p>\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Word used: </strong>The identity is\r\n                                  stated using the{\" \"}\r\n                                  <p> actual word (usually also On Page)</p>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Type of Rep</label>\r\n                        </div>\r\n                        <span className=\"to-capitalize\">\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-repnoteswarnings\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-repnoteswarnings\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">\r\n                            Any noteworthy information about the representation,\r\n                            <p>\r\n                              {\" \"}\r\n                              whether it is tropes (exile or dead ace, allo\r\n                              saviour, etc.)\r\n                            </p>{\" \"}\r\n                            or facets of it (sex repulsed/averse/positive, touch\r\n                            averse, etc.).\r\n                          </div>\r\n                        </ReactTooltip>\r\n                        <label>Rep Notes & Warnings</label>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-othernoteswarnings\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-othernoteswarnings\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">\r\n                            <p>\r\n                              Any noteworthy information about the\r\n                              representation,\r\n                            </p>\r\n                            <p>whether it is tropes (exile or dead ace, allo</p>\r\n                            <p>\r\n                              saviour, etc.) or facets of it (sex\r\n                              repulsed/averse/positive, touch averse, etc.)\r\n                            </p>\r\n                          </div>\r\n                        </ReactTooltip>\r\n                        <label>Other Notes & Warnings</label>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-cover\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-cover\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">URL to cover image.</div>\r\n                        </ReactTooltip>\r\n                        <label>Cover</label>\r\n                      </div>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n                    >\r\n                      Add Story to Database\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-review\\add-review.js",["360","361","362","363","364","365"],"import React from \"react\";\r\nimport \"./add-review.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function AddReview() {\r\n  const { params } = useRouteMatch();\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Add a Review</h3>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              review_for: \"\",\r\n              reviewer: \"\",\r\n              ownvoice_for: \"\",\r\n              link: \"\",\r\n              character_id: params.id,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/reviews`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"ReviewInfo\">\r\n                    <div className=\"container\">\r\n                      <div className=\"content-hundred\">\r\n                        <div className=\"block\">\r\n                          <label>\r\n                            Review for\r\n                            <input\r\n                              id=\"review_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Review for\"\r\n                              value={values.review_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n\r\n                          <label>\r\n                            Link\r\n                            <input\r\n                              id=\"link\"\r\n                              type=\"text\"\r\n                              placeholder=\"Link\"\r\n                              value={values.link}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <span className=\"block\">\r\n                          <label>\r\n                            Reviewer\r\n                            <input\r\n                              id=\"reviewer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Reviewer\"\r\n                              value={values.reviewer}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            Ownvoices for\r\n                            <input\r\n                              id=\"ownvoices_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Ownvoice for\"\r\n                              value={values.ownvoice_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"review-right bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n                  >\r\n                    Add Review to Database\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\about-team\\about.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\results\\results.js",["366","367","368"],"import React from \"react\";\r\nimport \"./results.css\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport SingleCharacter from \"../../components/single-character/single-character\";\r\nimport { ReactComponent as ButtonIcon } from \"../../assets/chevron-right-solid.svg\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport { useHistory, useRouteMatch, useParams } from \"react-router-dom\";\r\nimport SearchBar from \"../../components/search-bar/search-bar\";\r\n\r\nfunction Results({ location }) {\r\n  const [search, setSearch] = React.useState(\"\");\r\n  const [changed, setChanged] = React.useState(0);\r\n  const [filteredResults, setFilteredResults] = React.useState([]);\r\n  const [advancedSearch, setAdvancedSearch] = React.useState(false);\r\n  const [count, setCount] = React.useState(0);\r\n\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    return history.listen((location) => {\r\n      console.log(`You changed the page to: ${location.pathname}`);\r\n      let count = changed + 1;\r\n      setChanged(count);\r\n      console.log(changed);\r\n    });\r\n  }, [history]);\r\n\r\n  React.useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const url_params = [];\r\n    for (const key of params.entries()) {\r\n      if (url_params.length > 0) {\r\n        url_params.push(\"&\");\r\n        url_params.push(`${key[0]}=${key[1]}`);\r\n      } else {\r\n        url_params.push(`${key[0]}=${key[1]}`);\r\n      }\r\n    }\r\n    const final = url_params.join(\"\");\r\n    console.log(final);\r\n    if (final.includes(\"canonleads\")) {\r\n      console.log(\"fetch canon leads pls\");\r\n      fetch(\"https://aroacedb-back.herokuapp.com/characters/search/canonleads\")\r\n        .then((res) => res.json())\r\n        .then((resJson) => {\r\n          console.log(resJson);\r\n          if (resJson.data) {\r\n            console.log(resJson.data);\r\n            const newResults = resJson.data.character;\r\n            setFilteredResults(newResults);\r\n\r\n            const newCount = resJson.data.length;\r\n            console.log(newCount);\r\n            setCount(newCount);\r\n          }\r\n        });\r\n    } else {\r\n      fetch(`https://aroacedb-back.herokuapp.com/character/infinite?${final}`)\r\n        .then((res) => res.json())\r\n        .then((resJson) => {\r\n          if (resJson.data) {\r\n            console.log(resJson.data);\r\n            const newResults = resJson.data.characters;\r\n            setFilteredResults(newResults);\r\n            const newCount = resJson.data.length;\r\n            console.log(newCount);\r\n            setCount(newCount);\r\n          }\r\n        });\r\n    }\r\n  }, [location.search]);\r\n\r\n  return (\r\n    <div className=\"Results\">\r\n      <Sidebar setFilteredResults={setFilteredResults} />\r\n      <MobileHeader />\r\n\r\n      <div className=\"results-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"free-search\">\r\n          <form\r\n            onSubmit={(event) => {\r\n              console.log(search);\r\n\r\n              event.preventDefault();\r\n              history.push(`/results?search=${search}`);\r\n              fetch(\r\n                `https://aroacedb-back.herokuapp.com/character/infinite?search=${search}`\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(search);\r\n                  console.log(resJson);\r\n\r\n                  if (resJson.data) {\r\n                    const newResults = resJson.data.characters;\r\n                    setFilteredResults(newResults);\r\n                    console.log(filteredResults);\r\n                  }\r\n                });\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your keywords here to search\"\r\n              onChange={(event) => {\r\n                setSearch(event.target.value);\r\n              }}\r\n            ></input>\r\n            <button>\r\n              <ButtonIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"button-container\">\r\n          <button\r\n            onClick={() => {\r\n              setAdvancedSearch(!advancedSearch);\r\n            }}\r\n          >\r\n            Advanced Search\r\n          </button>\r\n        </div>\r\n        {advancedSearch ? <SearchBar /> : \"\"}\r\n\r\n        <div className=\"count\">The database found {count} entries.</div>\r\n        {filteredResults ? (\r\n          <div className=\"results\">\r\n            {filteredResults.map((i) => {\r\n              return (\r\n                <div>\r\n                  <SingleCharacter character={i} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\sc-suggested-story\\suggested-story.js",["369","370","371","372"],"import React from \"react\";\r\nimport \"./suggested-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithToken, fetchWithTokenNoBody } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SCSuggestedStory() {\r\n  const [story, setStory] = React.useState({});\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const [cover, setCover] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/suggest/sc/stories/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson.data.story[0]);\r\n\r\n        setStory(resJson.data.story[0]);\r\n        console.log(resJson.data.story[0].cover);\r\n        setCover(resJson.data.story[0].cover);\r\n        let character_id = resJson.data.story[0].character_id;\r\n        fetch(\r\n          `https://aroacedb-back.herokuapp.com/suggest/characters/${character_id}`\r\n        )\r\n          .then((res) => res.json())\r\n          .then((resJson) => {\r\n            console.log(resJson);\r\n            setName(resJson.data.character[0].character_name);\r\n          });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"stories\">\r\n          <h3>Suggested Story</h3>\r\n          <h4>Character: {name}</h4>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              story_title: story.story_title,\r\n              series_or_anthology: story.series_or_anthology,\r\n              genre: story.genre,\r\n              story_length: story.story_length,\r\n              type_of_rep: story.type_of_rep,\r\n              character_importance: story.character_importance,\r\n              rep_noteswarnings: story.rep_noteswarnings,\r\n              other_noteswarnings: story.other_noteswarnings,\r\n              character_id: story.character_id,\r\n              cover: story.cover,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/stories`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/suggest/sc/stories/${story.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <label>Story title</label>\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <label>Story length</label>\r\n                        <span>\r\n                          <select\r\n                            name=\"story_length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Short story\" label=\"Short story\" />\r\n                            <option value=\"Novella\" label=\"Novella\" />\r\n                            <option\r\n                              value=\"Novel (short)\"\r\n                              label=\"Novel (short)\"\r\n                            />\r\n                            <option value=\"Novel (long)\" label=\"Novel (long)\" />\r\n                            <option value=\"Anthology\" label=\"Anthology\" />\r\n                            <option value=\"Webseries\" label=\"Webseries\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Character importance</label>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <label>Series title</label>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <label>Genres</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Type of Rep</label>\r\n                        <span className=\"to-capitalize\">\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <span>Rep Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Other Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Cover</span>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <img src={values.cover} alt=\"cover\" />\r\n                    <div className=\"buttons\">\r\n                      <button\r\n                        className=\"bg-secondary dark:bg-darksecondary text-detail dark:text-darkdetail hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n                        onClick={() => {\r\n                          fetchWithTokenNoBody(\r\n                            `https://aroacedb-back.herokuapp.com/suggest/stories/${story.id}`,\r\n                            \"DELETE\",\r\n                            token\r\n                          )\r\n                            .then((res) => res.json())\r\n                            .then((resJson) => {\r\n                              console.log(resJson);\r\n                              history.push(\"/success\");\r\n                            });\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                      <button\r\n                        className=\"bg-secondary dark:bg-darksecondary text-detail dark:text-darkdetail hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          // update story but don't add it to database/\r\n                          fetchWithToken(\r\n                            `https://aroacedb-back.herokuapp.com/suggest/sc/stories/${params.id}`,\r\n                            \"PUT\",\r\n                            values,\r\n                            token\r\n                          )\r\n                            .then((res) => res.json())\r\n                            .then((resJson) => {\r\n                              console.log(resJson);\r\n                              history.push(\"/success\");\r\n                            });\r\n                        }}\r\n                      >\r\n                        Update\r\n                      </button>\r\n                      <button\r\n                        type=\"submit\"\r\n                        disabled={isSubmitting}\r\n                        className=\"submit bg-secondary dark:bg-darksecondary text-detail dark:text-darkdetail hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n                      >\r\n                        Add Story to Database\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-story-sc\\suggest-story.js",["373","374"],"import React from \"react\";\r\nimport \"./suggest-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { Formik } from \"formik\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default function SuggestStorySC() {\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"stories\">\r\n          <h3>Suggest a Story</h3>\r\n          <Formik\r\n            initialValues={{\r\n              story_title: \"\",\r\n              series_or_anthology: \"\",\r\n              genre: \"\",\r\n              story_length: \"\",\r\n              type_of_rep: \"\",\r\n              character_importance: \"\",\r\n              rep_noteswarnings: \"\",\r\n              other_noteswarnings: \"\",\r\n              cover: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              values.character_id = params.id;\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetch(\"https://aroacedb-back.herokuapp.com/suggest/sc/stories\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n              })\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(`/success-stsc/${params.id}`);\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-story-title\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-story-title\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">Story or book title</div>\r\n                          </ReactTooltip>\r\n                          <label>Story title</label>\r\n                        </div>\r\n\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-story-length\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-story-length\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              {\" \"}\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Short story:</strong>The character is\r\n                                  at the heart of the story’s central storyline\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Novella:</strong>The character plays\r\n                                  an important role in the story and is\r\n                                  frequently on page\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Novel (short):</strong>The character\r\n                                  plays a minor role in the story\r\n                                </li>\r\n\r\n                                <li>\r\n                                  <strong>Novel (long):</strong>More than 80,000\r\n                                  words\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Anthology:</strong>Short story is part\r\n                                  of an anthology\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Webseries:</strong>\r\n                                  Published in several installments on the\r\n                                  internet (blog, Wattpad, etc.)\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Story length</label>\r\n                        </div>\r\n                        <span>\r\n                          <select\r\n                            name=\"story_length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Short story\" label=\"Short story\" />\r\n                            <option value=\"Novella\" label=\"Novella\" />\r\n                            <option\r\n                              value=\"Novel (short)\"\r\n                              label=\"Novel (short)\"\r\n                            />\r\n                            <option value=\"Novel (long)\" label=\"Novel (long)\" />\r\n                            <option value=\"Anthology\" label=\"Anthology\" />\r\n                            <option value=\"Webseries\" label=\"Webseries\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-character-importance\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-character-importance\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Lead:</strong>The character is at the\r\n                                  heart of the story’s central storyline\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Main:</strong>The character plays an\r\n                                  important role in the story and is frequently\r\n                                  on page\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Lead:</strong>The character plays a\r\n                                  minor role in the story\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Character importance</label>\r\n                        </div>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-series\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-series\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              Name of the series (if applicable). Short stories\r\n                              in an anthology can list the anthology name here.\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Series title</label>\r\n                        </div>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-genres\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-genres\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">{`Story's literary genre. List in alphabetical order, i.e. \"Contemporary, Romance, Young Adult\".`}</div>\r\n                          </ReactTooltip>\r\n                          <label>Genres</label>\r\n                        </div>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-type\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-type\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Word of God:</strong>The character’s\r\n                                  sexuality is not explicit on page, but the\r\n                                  author has confirmed it.\r\n                                </li>\r\n                                <li>\r\n                                  <strong>On page:</strong>The character’s\r\n                                  sexuality is explicitly demonstrated within\r\n                                  the text. It should be showed or discussed to\r\n                                  an extent that makes it clear to the readers.\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Word used:</strong>The identity is\r\n                                  stated using the actual word (usually also On\r\n                                  Page)\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Type of Rep</label>\r\n                        </div>\r\n                        <span className=\"to-capitalize\">\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-repnoteswarnings\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-repnoteswarnings\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">\r\n                            Any noteworthy information about the representation,\r\n                            whether it is tropes (exile or dead ace, allo\r\n                            saviour, etc.) or facets of it (sex\r\n                            repulsed/averse/positive, touch averse, etc.).\r\n                          </div>\r\n                        </ReactTooltip>\r\n                        <label>Rep Notes & Warnings</label>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-othernoteswarnings\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-othernoteswarnings\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">\r\n                            Any noteworthy information about the representation,\r\n                            whether it is tropes (exile or dead ace, allo\r\n                            saviour, etc.) or facets of it (sex\r\n                            repulsed/averse/positive, touch averse, etc.)\r\n                          </div>\r\n                        </ReactTooltip>\r\n                        <label>Other Notes & Warnings</label>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-cover\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-cover\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">URL to cover image.</div>\r\n                        </ReactTooltip>\r\n                        <label>Cover</label>\r\n                      </div>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n                    >\r\n                      Suggest\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\contact\\contact.js",["375"],"import \"./contact.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Globe from \"../../assets/globe.png\";\r\nimport Twitter from \"../../assets/twitter.png\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport { Formik } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Contact() {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"Contact\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"contact-container bg-primary dark:bg-darkprimary transition duration-500\">\r\n        <div className=\"contact\">\r\n          <h2>Contact</h2>\r\n          <p>\r\n            Want to provide further information on a character? Ran into a bug\r\n            you want to report? Thought of a cool feature you'd want to see (no\r\n            promise!)? We're always open to suggest and information, so contact\r\n            us!\r\n          </p>\r\n\r\n          <div className=\"social-media\">\r\n            <a href=\"https://twitter.com/AroAceDB\">\r\n              <img src={Twitter} alt=\"twitter\" />\r\n            </a>\r\n          </div>\r\n\r\n          <Formik\r\n            initialValues={{\r\n              name: \"\",\r\n              email: \"\",\r\n              subject: \"\",\r\n              message: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              fetch(\"https://aroacedb-back.herokuapp.com/email\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                  Accept: \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n              })\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n\r\n                  console.log(JSON.stringify(values, null, 2));\r\n                  history.push(\"/success\");\r\n                  // redirect to success page\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const { values, handleChange, handleBlur, handleSubmit } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <label>\r\n                    Name\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Name\"\r\n                      id=\"name\"\r\n                      value={values.name}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                  </label>\r\n                  <label>\r\n                    E-mail\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"E-mail\"\r\n                      id=\"email\"\r\n                      value={values.email}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                  </label>\r\n\r\n                  <label>\r\n                    Subject\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Subject\"\r\n                      id=\"subject\"\r\n                      value={values.subject}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                  </label>\r\n                  <label>\r\n                    Message\r\n                    <textarea\r\n                      placeholder=\"Insert your message here\"\r\n                      id=\"message\"\r\n                      value={values.message}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    ></textarea>\r\n                  </label>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\utils\\fetch.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\mobile-header\\mobile-header.js",["376"],"import React from \"react\";\r\nimport \"./mobile-header.css\";\r\nimport { ReactComponent as Bars } from \"../../assets/bars-solid.svg\";\r\nimport { ReactComponent as Close } from \"../../assets/times-solid.svg\";\r\n\r\nfunction MobileHeader() {\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [display, setDisplay] = React.useState(\"menu-container none-display\");\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"Mobile\">\r\n      <header>\r\n        <h1>The Aro Ace Database</h1>\r\n        <Bars\r\n          fill=\"white\"\r\n          height=\"30px\"\r\n          width=\"30px\"\r\n          onClick={() => {\r\n            setDisplay(\"menu-container block-display\");\r\n          }}\r\n        />\r\n      </header>\r\n      <div className={display}>\r\n        <Close\r\n          fill=\"white\"\r\n          height=\"30px\"\r\n          width=\"30px\"\r\n          onClick={() => {\r\n            setDisplay(\"menu-container none-display\");\r\n          }}\r\n        />\r\n        <div className=\"links\">\r\n          <a href=\"/\">Home</a>\r\n          {token ? <a href=\"/dashboard\">Dashboard</a> : \"\"}\r\n          <a href=\"/about\">About</a>\r\n          <a href=\"/suggest-character\">Suggest a character</a>\r\n\r\n          {token ? (\r\n            <div className=\"more-links\">\r\n              <a href=\"/all-characters\">All characters</a>\r\n              <a href=\"/suggested-characters\">Suggested characters</a>\r\n              <a href=\"/suggested-stories\">Suggested stories</a>\r\n              <a href=\"/suggested-reviews\">Suggested Reviews</a>\r\n              <a\r\n                href=\"/\"\r\n                onClick={() => {\r\n                  localStorage.removeItem(\"token\");\r\n                }}\r\n              >\r\n                Logout\r\n              </a>\r\n            </div>\r\n          ) : (\r\n            <a href=\"/login\">Login Admin</a>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MobileHeader;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\single-character\\single-character.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\stories\\stories.js",["377","378","379","380"],"import \"./stories.css\";\r\nimport React from \"react\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Stories(props) {\r\n  const { stories, character_id } = props;\r\n  const history = useHistory();\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [characterCheck, setCharacterCheck] = React.useState(\"\");\r\n  const [storyCheck, setStoryCheck] = React.useState(\"\");\r\n  const [reviewCheck, setReviewCheck] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n    fetch(\"https://aroacedb-back.herokuapp.com/permissions\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setCharacterCheck(resJson.data.character.checked);\r\n        setStoryCheck(resJson.data.story.checked);\r\n        setReviewCheck(resJson.data.review.checked);\r\n      });\r\n  }, []);\r\n\r\n  const showButtons = () => {\r\n    if (token) {\r\n      return (\r\n        <a\r\n          href={`/add-story/${character_id}`}\r\n          className=\"bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n        >\r\n          Add Story\r\n        </a>\r\n      );\r\n    } else {\r\n      if (storyCheck) {\r\n        console.log(\"aaaaa\");\r\n        return (\r\n          <a\r\n            href={`/suggest-story/${character_id}`}\r\n            className=\"bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n          >\r\n            Suggest Story\r\n          </a>\r\n        );\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Stories\">\r\n      <h3>Stories</h3>\r\n      {stories.map((story) => {\r\n        return <StoryInfo story={story} />;\r\n      })}\r\n      {showButtons()}\r\n      {/* {token ? (\r\n        <a href={`/add-story/${character_id}`}>Add Story</a>\r\n      ) : (\r\n        <a href={`/suggest-story/${character_id}`}>Suggest Story</a>\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\sidebar\\sidebar.js",["381","382","383"],"import React from \"react\";\r\nimport \"./sidebar.css\";\r\nimport { ReactComponent as HomeIcon } from \"../../assets/home-solid.svg\";\r\nimport { ReactComponent as DatabaseIcon } from \"../../assets/database-solid.svg\";\r\nimport { ReactComponent as FeatherIcon } from \"../../assets/feather-solid.svg\";\r\nimport { ReactComponent as BookmarkIcon } from \"../../assets/bookmark-solid.svg\";\r\nimport { ReactComponent as LoginIcon } from \"../../assets/user-cog-solid.svg\";\r\nimport ModeSelector from \"../mode-selector/mode-selector\";\r\n\r\nexport default function Sidebar() {\r\n  const [token, setToken] = React.useState(\"\");\r\n\r\n  const [characterCheck, setCharacterCheck] = React.useState(\"\");\r\n  const [storyCheck, setStoryCheck] = React.useState(\"\");\r\n  const [reviewCheck, setReviewCheck] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n\r\n    fetch(\"https://aroacedb-back.herokuapp.com/permissions\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setCharacterCheck(resJson.data.character.checked);\r\n        setStoryCheck(resJson.data.story.checked);\r\n        setReviewCheck(resJson.data.review.checked);\r\n      });\r\n  }, [characterCheck]);\r\n  return (\r\n    <div className=\"SidebarAdmin\">\r\n      <div className=\"sidebar-container bg-primary dark:bg-darkprimary  transition duration-500\">\r\n        <div className=\"icons bg-detail dark:bg-darkdetail\"></div>\r\n        <div className=\"sidebar-content\"></div>\r\n        <div className=\"sidebar-true-content\">\r\n          <div className=\"top\">\r\n            <div className=\"title-container\">\r\n              <h1 className=\"border text-secondary font-bold border-secondary dark:text-darksecondary dark:border-darksecondary\">\r\n                The Aroace Database\r\n              </h1>\r\n            </div>\r\n            <ModeSelector />\r\n            <div className=\"link-container\">\r\n              <a href=\"/\" className=\"text-secondary dark:text-darksecondary\">\r\n                <HomeIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span className=\"hover:bg-detail dark:hover:bg-darkdetail\">\r\n                  Home\r\n                </span>\r\n              </a>\r\n            </div>\r\n            {token ? (\r\n              <div className=\"link-container\">\r\n                <a\r\n                  href=\"/dashboard\"\r\n                  className=\"text-secondary dark:text-darksecondary\"\r\n                >\r\n                  <BookmarkIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                  <span className=\"hover:bg-detail dark:hover:bg-darkdetail\">\r\n                    Dashboard\r\n                  </span>\r\n                </a>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"link-container\">\r\n              <a\r\n                href=\"/about\"\r\n                className=\"text-secondary dark:text-darksecondary\"\r\n              >\r\n                <DatabaseIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span className=\"hover:bg-detail dark:hover:bg-darkdetail\">\r\n                  About the database\r\n                </span>\r\n              </a>\r\n            </div>\r\n            <div className=\"link-container\">\r\n              <a\r\n                href=\"/about-the-team\"\r\n                className=\"text-secondary dark:text-darksecondary\"\r\n              >\r\n                <DatabaseIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span className=\"hover:bg-detail dark:hover:bg-darkdetail\">\r\n                  About the team\r\n                </span>\r\n              </a>\r\n            </div>\r\n            <div className=\"link-container\">\r\n              <a\r\n                href=\"/all-characters\"\r\n                className=\"text-secondary dark:text-darksecondary\"\r\n              >\r\n                <DatabaseIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span className=\"hover:bg-detail dark:hover:bg-darkdetail\">\r\n                  All characters\r\n                </span>\r\n              </a>\r\n            </div>\r\n            {characterCheck ? (\r\n              <div className=\"link-container\">\r\n                <a\r\n                  href=\"/suggest-character\"\r\n                  className=\"text-secondary dark:text-darksecondary\"\r\n                >\r\n                  <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                  <span className=\"hover:bg-detail dark:hover:bg-darkdetail\">\r\n                    Suggest a character\r\n                  </span>\r\n                </a>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <div className=\"link-container\">\r\n              <a\r\n                href=\"/contact\"\r\n                className=\"text-secondary dark:text-darksecondary\"\r\n              >\r\n                <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span className=\"hover:bg-detail dark:hover:bg-darkdetail\">\r\n                  Contact\r\n                </span>\r\n              </a>\r\n            </div>\r\n\r\n            {token ? (\r\n              <div className=\"div-container\">\r\n                <div className=\"link-container\">\r\n                  <a\r\n                    href=\"/suggested-characters\"\r\n                    className=\"text-secondary dark:text-darksecondary\"\r\n                  >\r\n                    <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                    <span className=\"hover:bg-detail dark:hover:bg-darkdetail\">\r\n                      Suggested characters\r\n                    </span>\r\n                  </a>\r\n                </div>\r\n\r\n                <div className=\"link-container\">\r\n                  <a\r\n                    href=\"/suggested-stories\"\r\n                    className=\"text-secondary dark:text-darksecondary\"\r\n                  >\r\n                    <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                    <span className=\"hover:bg-detail dark:hover:bg-darkdetail\">\r\n                      Suggested stories\r\n                    </span>\r\n                  </a>\r\n                </div>\r\n\r\n                <div className=\"link-container\">\r\n                  <a\r\n                    href=\"/sc-suggested-stories\"\r\n                    className=\"text-secondary dark:text-darksecondary\"\r\n                  >\r\n                    <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                    <span className=\"hover:bg-detail dark:hover:bg-darkdetail\">\r\n                      SC Suggested stories\r\n                    </span>\r\n                  </a>\r\n                </div>\r\n\r\n                <div className=\"link-container\">\r\n                  <a\r\n                    href=\"/suggested-reviews\"\r\n                    className=\"text-secondary dark:text-darksecondary\"\r\n                  >\r\n                    <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                    <span className=\"hover:bg-detail dark:hover:bg-darkdetail\">\r\n                      Suggested reviews\r\n                    </span>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          {token ? (\r\n            <div className=\"link-container\">\r\n              <a\r\n                href=\"/\"\r\n                className=\"text-secondary dark:text-darksecondary\"\r\n                onClick={() => {\r\n                  localStorage.removeItem(\"token\");\r\n                }}\r\n              >\r\n                <LoginIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span className=\"hover:bg-detail dark:hover:bg-darkdetail\">\r\n                  Logout\r\n                </span>\r\n              </a>\r\n            </div>\r\n          ) : (\r\n            <div className=\"link-container\">\r\n              <a\r\n                href=\"/login\"\r\n                className=\"text-secondary dark:text-darksecondary\"\r\n              >\r\n                <LoginIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span className=\"hover:bg-detail dark:hover:bg-darkdetail\">\r\n                  Admin Login\r\n                </span>\r\n              </a>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\character-info\\character-info.js",["384"],"import \"./character-info.css\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchWithTokenNoBody } from \"../../utils/fetch\";\r\n\r\nexport default function CharacterInfo(props) {\r\n  const { character } = props;\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"CharacterInfo\">\r\n      <h2>{character.character_name}</h2>\r\n      <div className=\"line\">\r\n        <div className=\"chunk\">\r\n          <span>Author</span>\r\n          {character.author}\r\n        </div>\r\n        <div className=\"chunk\">\r\n          <span>Gender</span> {character.gender}\r\n        </div>\r\n        <div className=\"chunk\">\r\n          <span>Pairing</span>\r\n          {character.pairing_qpp_or_romantic == null\r\n            ? \"Not informed/applicable.\"\r\n            : character.pairing_qpp_or_romantic}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"line\">\r\n        <div className=\"chunk\">\r\n          <span>Series</span>{\" \"}\r\n          {character.main_storyseries == null\r\n            ? \"Not informed or not applicable.\"\r\n            : character.main_storyseries}\r\n        </div>\r\n        <div className=\"chunk\">\r\n          <span>Type of Rep</span> {character.type_of_rep}\r\n        </div>\r\n\r\n        <div className=\"chunk\">\r\n          <span>Importance</span> {character.importance}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"line\">\r\n        <div className=\"chunk\">\r\n          <span>Romantic orientation</span>{\" \"}\r\n          {character.romantic_orientation == null\r\n            ? \"Not informed.\"\r\n            : character.romantic_orientation}\r\n        </div>\r\n        <div className=\"chunk\">\r\n          <span>Sexual Orientation</span>{\" \"}\r\n          {character.sexual_orientation == null\r\n            ? \"Not informed.\"\r\n            : character.sexual_orientation}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"line\">\r\n        <div className=\"chunk\">\r\n          <span>Genre</span> {character.genre}\r\n        </div>\r\n      </div>\r\n\r\n      <div clasName=\"square\">\r\n        <p>\r\n          <span>Relationships</span>\r\n          {character.relationships == null\r\n            ? \"Not informed.\"\r\n            : character.relationships}\r\n        </p>\r\n      </div>\r\n\r\n      <div clasName=\"square\">\r\n        <p>\r\n          <span>Notes & Warnings</span>\r\n          {character.rep_noteswarnings == null\r\n            ? \"No warnings.\"\r\n            : character.rep_noteswarnings}\r\n        </p>\r\n      </div>\r\n      {token ? (\r\n        <div className=\"buttons-character\">\r\n          <button\r\n            className=\"bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n            onClick={() => {\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/characters/${character.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/stories/character/${character.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/reviews/character/${character.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n          <button\r\n            className=\"bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n            onClick={() => {\r\n              history.push(\"/update-character/\" + character.id);\r\n            }}\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\reviews\\reviews.js",["385","386","387"],"import \"./reviews.css\";\r\nimport React from \"react\";\r\nimport ReviewInfo from \"../../components/review-info/review-info\";\r\n\r\nexport default function Reviews(props) {\r\n  const { reviews, character_id } = props;\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [characterCheck, setCharacterCheck] = React.useState(\"\");\r\n  const [storyCheck, setStoryCheck] = React.useState(\"\");\r\n  const [reviewCheck, setReviewCheck] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n\r\n    fetch(\"https://aroacedb-back.herokuapp.com/permissions\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setCharacterCheck(resJson.data.character.checked);\r\n        setStoryCheck(resJson.data.story.checked);\r\n        setReviewCheck(resJson.data.review.checked);\r\n      });\r\n  });\r\n\r\n  const showButtons = () => {\r\n    if (token) {\r\n      return (\r\n        <a\r\n          href={`/add-review/${character_id}`}\r\n          className=\"bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n        >\r\n          Add Review\r\n        </a>\r\n      );\r\n    } else {\r\n      if (reviewCheck) {\r\n        return (\r\n          <a\r\n            href={`/suggest-review/${character_id}`}\r\n            className=\"bg-secondary dark:bg-darkdetail text-detail dark:text-darksecondary hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n          >\r\n            Suggest Review\r\n          </a>\r\n        );\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Reviews\">\r\n      <h3>Reviews</h3>\r\n      {reviews.length !== 0\r\n        ? reviews.map((review) => {\r\n            return <ReviewInfo review={review} />;\r\n          })\r\n        : \"No reviews available.\"}\r\n\r\n      {showButtons()}\r\n      {/* {token ? (\r\n        <a href={`/add-review/${character_id}`}>Add Review</a>\r\n      ) : (\r\n        <a href={`/suggest-review/${character_id}`}>Suggest Review</a>\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-character\\table.js",["388","389","390"],"import RowCharacter from \"../row-character/row\";\r\nimport Row from \"../row-review/row\";\r\nimport RowReview from \"../row-review/row\";\r\nimport RowStory from \"../row-story/row\";\r\nimport \"./table.css\";\r\n\r\nfunction TableCharacter(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        {id === \"character\" ? (\r\n          <tr>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Character Name\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">Genre</th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Importance\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">Gender</th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">Pairing</th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">Series</th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Relationships\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">Romantic</th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Sexuality\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">More</th>\r\n          </tr>\r\n        ) : id === \"story\" ? (\r\n          <tr>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Story Title\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">Author</th>\r\n          </tr>\r\n        ) : (\r\n          <tr>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Review for\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">Reviewer</th>\r\n          </tr>\r\n        )}\r\n      </thead>\r\n\r\n      <tbody>\r\n        {content.map((c) => {\r\n          return <RowCharacter content={c} type={type} id={id} />;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TableCharacter;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\pagination\\pagination.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\story-info\\story-info.js",["391"],"import \"./story-info.css\";\r\nimport React from \"react\";\r\nimport { fetchWithTokenNoBody } from \"../../utils/fetch\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function StoryInfo(props) {\r\n  const { story } = props;\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"StoryInfo dark:bg-darkdetail dark:text-darksecondary\">\r\n      {story.cover ? (\r\n        <img src={story.cover} alt=\"cover\" />\r\n      ) : (\r\n        <img\r\n          src=\"https://www.globaluniversityalliance.org/wp-content/uploads/2017/10/No-Cover-Image-01.png\"\r\n          alt=\"cover\"\r\n        />\r\n      )}\r\n\r\n      <div className=\"story-container\">\r\n        <div className=\"line\">\r\n          <h4 className=\"dark:bg-darkdetail dark:text-darksecondary\">\r\n            {story.story_title}\r\n          </h4>\r\n          <span>\r\n            <span className=\"dark:bg-darkdetail dark:text-darksecondary\">\r\n              {story.story_length}\r\n            </span>\r\n          </span>\r\n        </div>\r\n        <div className=\"line\">\r\n          {story.series_or_anthology === null ? (\r\n            \"No series/anthology\"\r\n          ) : (\r\n            <span>\r\n              in the{\" \"}\r\n              <span className=\"dark:bg-darkdetail dark:text-darksecondary\">\r\n                {story.series_or_anthology}{\" \"}\r\n              </span>\r\n              series\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"line\">\r\n          <span>\r\n            <span className=\"dark:bg-darkdetail dark:text-darksecondary\">\r\n              {story.genre}\r\n            </span>\r\n          </span>\r\n          <span>\r\n            <span className=\"to-capitalize dark:bg-darkdetail dark:text-darksecondary\">\r\n              {story.type_of_rep} Rep\r\n            </span>\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"line\">\r\n          <span>\r\n            {story.character_importance === null ? (\r\n              \"No info on character importance\"\r\n            ) : (\r\n              <span className=\"dark:bg-darkdetail dark:text-darksecondary\">\r\n                {story.character_importance} Character\r\n              </span>\r\n            )}\r\n          </span>\r\n        </div>\r\n        <p>\r\n          <span>Rep Notes & Warnings</span>\r\n          {story.rep_noteswarnings === null\r\n            ? \"No rep notes or warnings.\"\r\n            : story.rep_noteswarnings}\r\n        </p>\r\n        <p>\r\n          <span>Other Notes & Warnings</span>\r\n          {story.other_noteswarnings === null\r\n            ? \"No other notes or warnings.\"\r\n            : story.other_noteswarnings}\r\n        </p>\r\n        {token ? (\r\n          <div className=\"buttons-story\">\r\n            <button\r\n              className=\"bg-secondary dark:bg-darksecondary text-detail dark:text-darkdetail hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n              onClick={() => {\r\n                fetchWithTokenNoBody(\r\n                  `https://aroacedb-back.herokuapp.com/stories/${story.id}`,\r\n                  \"DELETE\",\r\n                  token\r\n                )\r\n                  .then((res) => res.json())\r\n                  .then((resJson) => {\r\n                    console.log(resJson);\r\n                    window.location.reload();\r\n                  });\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n            <button\r\n              className=\"bg-secondary dark:bg-darksecondary text-detail dark:text-darkdetail hover:bg-detail hover:text-primary dark:hover:bg-darkprimary dark:hover:text-darksecondary\"\r\n              onClick={() => {\r\n                history.push(\"/update-story/\" + story.id);\r\n              }}\r\n            >\r\n              Update\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\stats\\stats.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\recent-suggested\\recent-suggested.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-sc-story\\table.js",["392","393","394","395"],"import RowCharacter from \"../row-review/row\";\r\nimport Row from \"../row-review/row\";\r\nimport RowReview from \"../row-review/row\";\r\nimport RowStory from \"../row-story/row\";\r\nimport RowSCStory from \"../row-sc-story/row\";\r\nimport \"./table.css\";\r\n\r\nfunction TableSCStory(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        {id === \"character\" ? (\r\n          <tr>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Character Name\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">Author</th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Importance\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Romantic Orientation\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Sexual Orientation\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">More</th>\r\n          </tr>\r\n        ) : id === \"story\" ? (\r\n          <tr>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Story Title\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">Author</th>\r\n          </tr>\r\n        ) : (\r\n          <tr>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Review for\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">Reviewer</th>\r\n          </tr>\r\n        )}\r\n      </thead>\r\n\r\n      <tbody>\r\n        {content.map((c) => {\r\n          return <RowSCStory content={c} type={type} id={id} />;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TableSCStory;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-story\\table.js",["396","397","398"],"import RowCharacter from \"../row-review/row\";\r\nimport Row from \"../row-review/row\";\r\nimport RowReview from \"../row-review/row\";\r\nimport RowStory from \"../row-story/row\";\r\nimport \"./table.css\";\r\n\r\nfunction TableStory(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        {id === \"character\" ? (\r\n          <tr>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Character Name\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">Author</th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Importance\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Romantic Orientation\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Sexual Orientation\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">More</th>\r\n          </tr>\r\n        ) : id === \"story\" ? (\r\n          <tr>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Story Title\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">Author</th>\r\n          </tr>\r\n        ) : (\r\n          <tr>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Review for\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">Reviewer</th>\r\n          </tr>\r\n        )}\r\n      </thead>\r\n\r\n      <tbody>\r\n        {content.map((c) => {\r\n          return <RowStory content={c} type={type} id={id} />;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TableStory;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-review\\table.js",["399","400","401"],"import RowCharacter from \"../row-review/row\";\r\nimport Row from \"../row-review/row\";\r\nimport RowReview from \"../row-review/row\";\r\nimport RowStory from \"../row-story/row\";\r\nimport \"./table.css\";\r\n\r\nfunction TableReview(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        {id === \"character\" ? (\r\n          <tr>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Character Name\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">Author</th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Importance\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Romantic Orientation\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Sexual Orientation\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">More</th>\r\n          </tr>\r\n        ) : id === \"story\" ? (\r\n          <tr>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Story Title\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">Author</th>\r\n          </tr>\r\n        ) : (\r\n          <tr>\r\n            <th className=\"text-secondary dark:text-darksecondary\">\r\n              Review for\r\n            </th>\r\n            <th className=\"text-secondary dark:text-darksecondary\">Reviewer</th>\r\n          </tr>\r\n        )}\r\n      </thead>\r\n\r\n      <tbody>\r\n        {content.map((c) => {\r\n          return <RowReview content={c} type={type} id={id} />;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TableReview;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-story\\row.js",["402","403"],"import \"./row.css\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\n\r\nexport default function RowStory(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <tr className=\"tbody  text-secondary dark:text-darksecondary dark:odd:text-darkprimary\">\r\n      <td>{content.story_title}</td>\r\n      <td>{content.author}</td>\r\n      <td>\r\n        <a href={`/suggested-story/${content.id}`}>\r\n          <img src={ExternalLink} alt=\"profile link\" />\r\n        </a>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\review-info\\review-info.js",["404","405","406"],"import \"./review-info.css\";\r\nimport React, { Component } from \"react\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchWithTokenNoBody } from \"../../utils/fetch\";\r\nimport SuggestReview from \"../../pages/suggest-review/suggest-review\";\r\n\r\nexport default function ReviewInfo(props) {\r\n  const { review } = props;\r\n  const history = useHistory();\r\n  const [token, setToken] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"ReviewInfo\">\r\n      <div className=\"container\">\r\n        <div className=\"content\">\r\n          <h4>{review.review_for}</h4>\r\n          <span>\r\n            by {review.reviewer} | Ownvoices for {review.ownvoice_for}.\r\n          </span>\r\n        </div>\r\n\r\n        <a href={review.link}>\r\n          <img src={ExternalLink} alt=\"link para resenha em site externo\" />\r\n        </a>\r\n      </div>\r\n      {token ? (\r\n        <div className=\"buttons-review\">\r\n          <button\r\n            onClick={() => {\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/reviews/${review.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n\r\n                  window.location.reload();\r\n                });\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              history.push(\"/update-review/\" + review.id);\r\n            }}\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-review\\row.js",["407","408"],"import \"./row.css\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\n\r\nexport default function RowReview(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <tr className=\"tbody  text-secondary dark:text-darksecondary dark:odd:text-darkprimary\">\r\n      <td>{content.review_for}</td>\r\n      <td>{content.reviewer}</td>\r\n      <td>\r\n        <a href={`/suggested-review/${content.id}`}>\r\n          <img src={ExternalLink} alt=\"profile link\" />\r\n        </a>\r\n      </td>\r\n    </tr>\r\n\r\n    //   ) : (\r\n    //     <tr class=\"tbody\">\r\n    //       <td>{content.review_for}</td>\r\n    //       <td>{content.reviewer}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-review/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </tr>\r\n    //   )}\r\n\r\n    // <tr class=\"tbody\">\r\n    //   {id === \"character\" ? (\r\n    //     <div>\r\n    //   <td>{content.character_name}</td>\r\n    //   <td>{content.author}</td>\r\n    //   <td>{content.importance}</td>\r\n    //   <td>{content.romantic_orientation}</td>\r\n    //   <td>{content.sexual_orientation}</td>\r\n    //   <td>\r\n    //     {type === \"regular\" ? (\r\n    //       <a href={`/character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     ) : (\r\n    //       <a href={`/suggested-character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     )}\r\n    //   </td>\r\n    //     </div>\r\n    //   ) : id === \"story\" ? (\r\n    //     <div>\r\n    //       <td>{content.story_title}</td>\r\n    //       <td>{content.author}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-story/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   ) : (\r\n    //     <div>\r\n    //       <td>{content.review_for}</td>\r\n    //       <td>{content.reviewer}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-review/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   )}\r\n    // </tr>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-character\\row.js",["409"],"import \"./row.css\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\n\r\nexport default function RowCharacter(props) {\r\n  const { content, type, id } = props;\r\n  return (\r\n    <tr className=\"tbody text-secondary dark:text-darksecondary dark:odd:text-darkprimary\">\r\n      <td>{content.character_name}</td>\r\n      <td>{content.genre}</td>\r\n      <td>{content.importance}</td>\r\n      <td>{content.gender}</td>\r\n      <td>{content.pairing_qpp_or_romantic}</td>\r\n      <td>{content.main_storyseries}</td>\r\n      <td>{content.relationships}</td>\r\n      <td>{content.romantic_orientation}</td>\r\n      <td>{content.sexual_orientation}</td>\r\n      <td>\r\n        {type === \"regular\" ? (\r\n          <a href={`/character/${content.id}`}>\r\n            <img src={ExternalLink} alt=\"profile link\" />\r\n          </a>\r\n        ) : (\r\n          <a href={`/suggested-character/${content.id}`}>\r\n            <img src={ExternalLink} alt=\"profile link\" />\r\n          </a>\r\n        )}\r\n      </td>\r\n    </tr>\r\n\r\n    // <tr class=\"tbody\">\r\n    //   {id === \"character\" ? (\r\n    //     <div>\r\n    //   <td>{content.character_name}</td>\r\n    //   <td>{content.author}</td>\r\n    //   <td>{content.importance}</td>\r\n    //   <td>{content.romantic_orientation}</td>\r\n    //   <td>{content.sexual_orientation}</td>\r\n    //   <td>\r\n    //     {type === \"regular\" ? (\r\n    //       <a href={`/character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     ) : (\r\n    //       <a href={`/suggested-character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     )}\r\n    //   </td>\r\n    //     </div>\r\n    //   ) : id === \"story\" ? (\r\n    //     <div>\r\n    //       <td>{content.story_title}</td>\r\n    //       <td>{content.author}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-story/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   ) : (\r\n    //     <div>\r\n    //       <td>{content.review_for}</td>\r\n    //       <td>{content.reviewer}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-review/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   )}\r\n    // </tr>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-sc-story\\row.js",["410","411"],"import \"./row.css\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\n\r\nexport default function RowSCStory(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <tr className=\"tbody  text-secondary dark:text-darksecondary dark:odd:text-darkprimary\">\r\n      <td>{content.story_title}</td>\r\n      <td>{content.author}</td>\r\n      <td>\r\n        <a href={`/sc-suggested-story/${content.id}`}>\r\n          <img src={ExternalLink} alt=\"profile link\" />\r\n        </a>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\search-bar\\search-bar.js",["412","413","414","415","416","417"],"import React from \"react\";\r\nimport \"./search-bar.css\";\r\nimport { ReactComponent as ButtonIcon } from \"../../assets/chevron-right-solid.svg\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport { fetchNoTokenNobody, fetchWithBody } from \"../../utils/fetch\";\r\n\r\nfunction SearchBar(props) {\r\n  const { page, params } = props;\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"SearchBar\">\r\n      <Formik\r\n        initialValues={{\r\n          character_name: \"\",\r\n          author: \"\",\r\n          gender: \"\",\r\n          importance: \"\",\r\n          pairing_qpp_or_romantic: \"\",\r\n          main_storyseries: \"\",\r\n          type_of_rep: \"\",\r\n          romantic_orientation: \"\",\r\n          sexual_orientation: \"\",\r\n          genre: \"\",\r\n          relationships: \"\",\r\n          story_length: \"\",\r\n        }}\r\n        onSubmit={(values) => {\r\n          let params_search = [];\r\n          for (let key in values) {\r\n            if (values[key] !== \"\") {\r\n              console.log(key + \" is not blank.\");\r\n              if (params_search.length > 0) {\r\n                params_search.push(\"&\");\r\n                params_search.push(`${key}=${values[key]}`);\r\n              } else {\r\n                params_search.push(`${key}=${values[key]}`);\r\n              }\r\n            }\r\n          }\r\n          let final = params_search.join(\"\");\r\n\r\n          let url = `https://aroacedb-back.herokuapp.com/character/infinite?${final}`;\r\n          console.log(url);\r\n          history.push(`/results?${final}`);\r\n        }}\r\n      >\r\n        {(props) => {\r\n          const { values, handleChange, handleBlur, handleSubmit } = props;\r\n          return (\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"fields\">\r\n                <label>\r\n                  <span>Character name</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Character name\"\r\n                    name=\"character_name\"\r\n                    value={values.character_name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  <span>Importance</span>\r\n                  <select\r\n                    name=\"importance\"\r\n                    value={values.importance}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  >\r\n                    <option value=\"\" label=\"Select one\" />\r\n                    <option value=\"Lead\" label=\"Lead\" />\r\n                    <option value=\"Main\" label=\"Main\" />\r\n                    <option value=\"Side\" label=\"Side\" />\r\n                  </select>\r\n                </label>\r\n                <label>\r\n                  <span>Author</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Author\"\r\n                    name=\"author\"\r\n                    value={values.author}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  <span>Gender</span>\r\n                  <select\r\n                    name=\"gender\"\r\n                    value={values.gender}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  >\r\n                    <option value=\"\" label=\"Select gender\" />\r\n                    <option value=\"M\" label=\"M\" />\r\n                    <option value=\"F\" label=\"F\" />\r\n                    <option value=\"Enby\" label=\"Enby\" />\r\n                  </select>\r\n                </label>\r\n                <label>\r\n                  <span>Pairing</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Pairing\"\r\n                    name=\"pairing_qpp_or_romantic\"\r\n                    value={values.pairing_qpp_or_romantic}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  <span>Series</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Series\"\r\n                    name=\"main_storyseries\"\r\n                    value={values.main_storyseries}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  <span>Type of Rep</span>\r\n                  <select\r\n                    name=\"type_of_rep\"\r\n                    value={values.type_of_rep}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  >\r\n                    <option value=\"\" label=\"Select one\" />\r\n                    <option value=\"Word of God\" label=\"Word of God\" />\r\n                    <option value=\"On Page\" label=\"On Page\" />\r\n                    <option value=\"Word Used\" label=\"Word Used\" />\r\n                  </select>\r\n                </label>\r\n                <label>\r\n                  <span>Romantic Orientation</span>\r\n                  <select\r\n                    name=\"romantic_orientation\"\r\n                    value={values.romantic_orientation}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  >\r\n                    <option value=\"\" label=\"Select one\" />\r\n                    <option value=\"Alloromantic\" label=\"Alloromantic\" />\r\n                    <option value=\"Aroflux\" label=\"Aroflux\" />\r\n                    <option value=\"Aromantic\" label=\"Aromantic\" />\r\n                    <option value=\"Arospec\" label=\"Arospec\" />\r\n                    <option value=\"Biromantic\" label=\"Biromantic\" />\r\n                    <option value=\"Greyromantic\" label=\"Grayromantic\" />\r\n                    <option value=\"Demiromantic\" label=\"Demiromantic\" />\r\n                    <option value=\"Heteroromantic\" label=\"Heteroromantic\" />\r\n                    <option value=\"Homoromantic\" label=\"Homoromantic\" />\r\n                    <option value=\"Panromantic\" label=\"Panromantic\" />\r\n                    <option value=\"Queer\" label=\"Queer\" />\r\n                    <option value=\"WTFRomantic\" label=\"WTFRomantic\" />\r\n                  </select>\r\n                </label>\r\n                <label>\r\n                  <span>Sexual Orientation</span>\r\n                  <select\r\n                    name=\"sexual_orientation\"\r\n                    value={values.sexual_orientation}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  >\r\n                    <option value=\"\" label=\"Select one\" />\r\n                    <option value=\"Allosexual\" label=\"Allosexual\" />\r\n                    <option value=\"Asexual\" label=\"Asexual\" />\r\n                    <option value=\"Acespec\" label=\"Acespec\" />\r\n                    <option value=\"Demisexual\" label=\"Demisexual\" />\r\n                    <option value=\"Bisexual\" label=\"Bisexual\" />\r\n                    <option value=\"Gay\" label=\"Gay\" />\r\n                    <option value=\"Gray-asexual\" label=\"Graysexual\" />\r\n                    <option value=\"Heterosexual\" label=\"Heterosexual\" />\r\n                    <option value=\"Pansexual\" label=\"Pansexual\" />\r\n                    <option value=\"Queer\" label=\"Queer\" />\r\n                  </select>\r\n                </label>\r\n                <label>\r\n                  <span>Genre</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Genre\"\r\n                    name=\"genre\"\r\n                    value={values.genre}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  <span>Relationships</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Relationships\"\r\n                    name=\"relationships\"\r\n                    value={values.relationships}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  <span>Story Length</span>\r\n                  <select\r\n                    name=\"story_length\"\r\n                    value={values.story_length}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  >\r\n                    <option value=\"\" label=\"Select one\" />\r\n                    <option value=\"Novel (short)\" label=\"Novel (short)\" />\r\n                    <option value=\"Novel (long)\" label=\"Novel (long)\" />\r\n                    <option value=\"Short story\" label=\"Short story\" />\r\n                    <option value=\"Novella\" label=\"Novella\" />\r\n                    <option value=\"Anthology\" label=\"Anthology\" />\r\n                    <option value=\"Webseries\" label=\"Webseries\" />\r\n                  </select>\r\n                </label>\r\n              </div>\r\n\r\n              <button type=\"submit\">Search</button>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success-delete\\success.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success-delete-all\\success.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\mode-selector\\mode-selector.js",["418","419"],"import React from \"react\";\r\nimport { ReactComponent as Sun } from \"../../assets/sun-solid.svg\";\r\nimport { ReactComponent as Moon } from \"../../assets/moon-solid.svg\";\r\nimport \"./mode-selector.css\";\r\nimport useDarkMode, { ThemeProvider } from \"../../utils/theme-context\";\r\nimport { ThemeContext } from \"../../utils/theme-context\";\r\n\r\nexport default function ModeSelector() {\r\n  //   const [colorTheme, setTheme] = useDarkMode();\r\n\r\n  const { theme, setTheme } = React.useContext(ThemeContext);\r\n\r\n  return (\r\n    <div className=\"ModeSelector text-detail dark:text-darkdetail\">\r\n      {theme === \"light\" ? (\r\n        <span\r\n          onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\r\n          className=\"dark:bg-darksecondary bg-secondary\"\r\n        >\r\n          <Moon width=\"30px\" /> Dark Mode\r\n        </span>\r\n      ) : (\r\n        <span\r\n          onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\r\n          className=\"dark:bg-darksecondary bg-secondary\"\r\n        >\r\n          <Sun width=\"30px\" /> Light Mode\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\utils\\theme-context.js",[],{"ruleId":"420","replacedBy":"421"},{"ruleId":"422","replacedBy":"423"},{"ruleId":"424","severity":1,"message":"425","line":37,"column":8,"nodeType":"426","messageId":"427","endLine":37,"endColumn":19},{"ruleId":"424","severity":1,"message":"428","line":12,"column":10,"nodeType":"426","messageId":"427","endLine":12,"endColumn":17},{"ruleId":"424","severity":1,"message":"429","line":12,"column":19,"nodeType":"426","messageId":"427","endLine":12,"endColumn":29},{"ruleId":"430","severity":1,"message":"431","line":28,"column":6,"nodeType":"432","endLine":28,"endColumn":8,"suggestions":"433"},{"ruleId":"430","severity":1,"message":"434","line":47,"column":6,"nodeType":"432","endLine":47,"endColumn":8,"suggestions":"435"},{"ruleId":"424","severity":1,"message":"436","line":70,"column":17,"nodeType":"426","messageId":"427","endLine":70,"endColumn":29},{"ruleId":"424","severity":1,"message":"437","line":3,"column":8,"nodeType":"426","messageId":"427","endLine":3,"endColumn":13},{"ruleId":"424","severity":1,"message":"438","line":13,"column":10,"nodeType":"426","messageId":"427","endLine":13,"endColumn":15},{"ruleId":"424","severity":1,"message":"439","line":15,"column":10,"nodeType":"426","messageId":"427","endLine":15,"endColumn":20},{"ruleId":"424","severity":1,"message":"440","line":16,"column":10,"nodeType":"426","messageId":"427","endLine":16,"endColumn":21},{"ruleId":"424","severity":1,"message":"428","line":17,"column":10,"nodeType":"426","messageId":"427","endLine":17,"endColumn":17},{"ruleId":"424","severity":1,"message":"429","line":17,"column":19,"nodeType":"426","messageId":"427","endLine":17,"endColumn":29},{"ruleId":"424","severity":1,"message":"441","line":1,"column":17,"nodeType":"426","messageId":"427","endLine":1,"endColumn":27},{"ruleId":"424","severity":1,"message":"442","line":7,"column":8,"nodeType":"426","messageId":"427","endLine":7,"endColumn":19},{"ruleId":"424","severity":1,"message":"443","line":8,"column":25,"nodeType":"426","messageId":"427","endLine":8,"endColumn":45},{"ruleId":"424","severity":1,"message":"444","line":17,"column":23,"nodeType":"426","messageId":"427","endLine":17,"endColumn":37},{"ruleId":"424","severity":1,"message":"445","line":19,"column":9,"nodeType":"426","messageId":"427","endLine":19,"endColumn":22},{"ruleId":"424","severity":1,"message":"446","line":31,"column":9,"nodeType":"426","messageId":"427","endLine":31,"endColumn":23},{"ruleId":"424","severity":1,"message":"447","line":44,"column":9,"nodeType":"426","messageId":"427","endLine":44,"endColumn":23},{"ruleId":"424","severity":1,"message":"448","line":6,"column":8,"nodeType":"426","messageId":"427","endLine":6,"endColumn":21},{"ruleId":"424","severity":1,"message":"449","line":4,"column":8,"nodeType":"426","messageId":"427","endLine":4,"endColumn":13},{"ruleId":"424","severity":1,"message":"450","line":5,"column":8,"nodeType":"426","messageId":"427","endLine":5,"endColumn":15},{"ruleId":"424","severity":1,"message":"451","line":4,"column":8,"nodeType":"426","messageId":"427","endLine":4,"endColumn":21},{"ruleId":"424","severity":1,"message":"452","line":7,"column":3,"nodeType":"426","messageId":"427","endLine":7,"endColumn":25},{"ruleId":"424","severity":1,"message":"453","line":12,"column":13,"nodeType":"426","messageId":"427","endLine":12,"endColumn":16},{"ruleId":"430","severity":1,"message":"454","line":30,"column":6,"nodeType":"432","endLine":30,"endColumn":8,"suggestions":"455"},{"ruleId":"424","severity":1,"message":"436","line":127,"column":17,"nodeType":"426","messageId":"427","endLine":127,"endColumn":29},{"ruleId":"424","severity":1,"message":"451","line":4,"column":8,"nodeType":"426","messageId":"427","endLine":4,"endColumn":21},{"ruleId":"424","severity":1,"message":"453","line":7,"column":13,"nodeType":"426","messageId":"427","endLine":7,"endColumn":16},{"ruleId":"424","severity":1,"message":"456","line":8,"column":8,"nodeType":"426","messageId":"427","endLine":8,"endColumn":17},{"ruleId":"430","severity":1,"message":"457","line":29,"column":6,"nodeType":"432","endLine":29,"endColumn":8,"suggestions":"458"},{"ruleId":"424","severity":1,"message":"459","line":69,"column":17,"nodeType":"426","messageId":"427","endLine":69,"endColumn":24},{"ruleId":"424","severity":1,"message":"460","line":70,"column":17,"nodeType":"426","messageId":"427","endLine":70,"endColumn":23},{"ruleId":"424","severity":1,"message":"437","line":4,"column":8,"nodeType":"426","messageId":"427","endLine":4,"endColumn":13},{"ruleId":"424","severity":1,"message":"459","line":52,"column":17,"nodeType":"426","messageId":"427","endLine":52,"endColumn":24},{"ruleId":"424","severity":1,"message":"460","line":53,"column":17,"nodeType":"426","messageId":"427","endLine":53,"endColumn":23},{"ruleId":"424","severity":1,"message":"437","line":4,"column":8,"nodeType":"426","messageId":"427","endLine":4,"endColumn":13},{"ruleId":"424","severity":1,"message":"451","line":4,"column":8,"nodeType":"426","messageId":"427","endLine":4,"endColumn":21},{"ruleId":"424","severity":1,"message":"461","line":6,"column":10,"nodeType":"426","messageId":"427","endLine":6,"endColumn":23},{"ruleId":"424","severity":1,"message":"453","line":8,"column":13,"nodeType":"426","messageId":"427","endLine":8,"endColumn":16},{"ruleId":"430","severity":1,"message":"454","line":25,"column":6,"nodeType":"432","endLine":25,"endColumn":8,"suggestions":"462"},{"ruleId":"424","severity":1,"message":"451","line":4,"column":8,"nodeType":"426","messageId":"427","endLine":4,"endColumn":21},{"ruleId":"424","severity":1,"message":"452","line":6,"column":10,"nodeType":"426","messageId":"427","endLine":6,"endColumn":32},{"ruleId":"424","severity":1,"message":"453","line":8,"column":13,"nodeType":"426","messageId":"427","endLine":8,"endColumn":16},{"ruleId":"424","severity":1,"message":"456","line":9,"column":8,"nodeType":"426","messageId":"427","endLine":9,"endColumn":17},{"ruleId":"424","severity":1,"message":"463","line":15,"column":10,"nodeType":"426","messageId":"427","endLine":15,"endColumn":19},{"ruleId":"424","severity":1,"message":"464","line":15,"column":21,"nodeType":"426","messageId":"427","endLine":15,"endColumn":33},{"ruleId":"424","severity":1,"message":"459","line":53,"column":17,"nodeType":"426","messageId":"427","endLine":53,"endColumn":24},{"ruleId":"424","severity":1,"message":"460","line":54,"column":17,"nodeType":"426","messageId":"427","endLine":54,"endColumn":23},{"ruleId":"424","severity":1,"message":"436","line":55,"column":17,"nodeType":"426","messageId":"427","endLine":55,"endColumn":29},{"ruleId":"424","severity":1,"message":"453","line":8,"column":13,"nodeType":"426","messageId":"427","endLine":8,"endColumn":16},{"ruleId":"424","severity":1,"message":"464","line":13,"column":21,"nodeType":"426","messageId":"427","endLine":13,"endColumn":33},{"ruleId":"424","severity":1,"message":"451","line":4,"column":8,"nodeType":"426","messageId":"427","endLine":4,"endColumn":21},{"ruleId":"424","severity":1,"message":"452","line":7,"column":3,"nodeType":"426","messageId":"427","endLine":7,"endColumn":25},{"ruleId":"424","severity":1,"message":"453","line":12,"column":13,"nodeType":"426","messageId":"427","endLine":12,"endColumn":16},{"ruleId":"424","severity":1,"message":"456","line":13,"column":8,"nodeType":"426","messageId":"427","endLine":13,"endColumn":17},{"ruleId":"430","severity":1,"message":"454","line":33,"column":6,"nodeType":"432","endLine":33,"endColumn":8,"suggestions":"465"},{"ruleId":"424","severity":1,"message":"459","line":80,"column":17,"nodeType":"426","messageId":"427","endLine":80,"endColumn":24},{"ruleId":"424","severity":1,"message":"460","line":81,"column":17,"nodeType":"426","messageId":"427","endLine":81,"endColumn":23},{"ruleId":"424","severity":1,"message":"436","line":82,"column":17,"nodeType":"426","messageId":"427","endLine":82,"endColumn":29},{"ruleId":"424","severity":1,"message":"451","line":4,"column":8,"nodeType":"426","messageId":"427","endLine":4,"endColumn":21},{"ruleId":"424","severity":1,"message":"453","line":8,"column":13,"nodeType":"426","messageId":"427","endLine":8,"endColumn":16},{"ruleId":"424","severity":1,"message":"456","line":9,"column":8,"nodeType":"426","messageId":"427","endLine":9,"endColumn":17},{"ruleId":"430","severity":1,"message":"457","line":29,"column":6,"nodeType":"432","endLine":29,"endColumn":8,"suggestions":"466"},{"ruleId":"424","severity":1,"message":"459","line":65,"column":17,"nodeType":"426","messageId":"427","endLine":65,"endColumn":24},{"ruleId":"424","severity":1,"message":"460","line":66,"column":17,"nodeType":"426","messageId":"427","endLine":66,"endColumn":23},{"ruleId":"424","severity":1,"message":"436","line":67,"column":17,"nodeType":"426","messageId":"427","endLine":67,"endColumn":29},{"ruleId":"424","severity":1,"message":"451","line":4,"column":8,"nodeType":"426","messageId":"427","endLine":4,"endColumn":21},{"ruleId":"424","severity":1,"message":"452","line":7,"column":3,"nodeType":"426","messageId":"427","endLine":7,"endColumn":25},{"ruleId":"424","severity":1,"message":"453","line":12,"column":13,"nodeType":"426","messageId":"427","endLine":12,"endColumn":16},{"ruleId":"424","severity":1,"message":"456","line":13,"column":8,"nodeType":"426","messageId":"427","endLine":13,"endColumn":17},{"ruleId":"424","severity":1,"message":"467","line":19,"column":10,"nodeType":"426","messageId":"427","endLine":19,"endColumn":15},{"ruleId":"430","severity":1,"message":"454","line":43,"column":6,"nodeType":"432","endLine":43,"endColumn":8,"suggestions":"468"},{"ruleId":"424","severity":1,"message":"459","line":94,"column":17,"nodeType":"426","messageId":"427","endLine":94,"endColumn":24},{"ruleId":"424","severity":1,"message":"460","line":95,"column":17,"nodeType":"426","messageId":"427","endLine":95,"endColumn":23},{"ruleId":"424","severity":1,"message":"469","line":5,"column":8,"nodeType":"426","messageId":"427","endLine":5,"endColumn":18},{"ruleId":"430","severity":1,"message":"457","line":27,"column":6,"nodeType":"432","endLine":27,"endColumn":8,"suggestions":"470"},{"ruleId":"424","severity":1,"message":"459","line":69,"column":17,"nodeType":"426","messageId":"427","endLine":69,"endColumn":24},{"ruleId":"424","severity":1,"message":"460","line":70,"column":17,"nodeType":"426","messageId":"427","endLine":70,"endColumn":23},{"ruleId":"424","severity":1,"message":"453","line":7,"column":13,"nodeType":"426","messageId":"427","endLine":7,"endColumn":16},{"ruleId":"424","severity":1,"message":"456","line":9,"column":8,"nodeType":"426","messageId":"427","endLine":9,"endColumn":17},{"ruleId":"430","severity":1,"message":"471","line":22,"column":6,"nodeType":"432","endLine":22,"endColumn":8,"suggestions":"472"},{"ruleId":"424","severity":1,"message":"459","line":58,"column":17,"nodeType":"426","messageId":"427","endLine":58,"endColumn":24},{"ruleId":"424","severity":1,"message":"460","line":59,"column":17,"nodeType":"426","messageId":"427","endLine":59,"endColumn":23},{"ruleId":"424","severity":1,"message":"436","line":60,"column":17,"nodeType":"426","messageId":"427","endLine":60,"endColumn":29},{"ruleId":"424","severity":1,"message":"473","line":7,"column":22,"nodeType":"426","messageId":"427","endLine":7,"endColumn":35},{"ruleId":"424","severity":1,"message":"474","line":7,"column":37,"nodeType":"426","messageId":"427","endLine":7,"endColumn":46},{"ruleId":"430","severity":1,"message":"475","line":26,"column":6,"nodeType":"432","endLine":26,"endColumn":15,"suggestions":"476"},{"ruleId":"424","severity":1,"message":"467","line":14,"column":10,"nodeType":"426","messageId":"427","endLine":14,"endColumn":15},{"ruleId":"430","severity":1,"message":"454","line":40,"column":6,"nodeType":"432","endLine":40,"endColumn":8,"suggestions":"477"},{"ruleId":"424","severity":1,"message":"459","line":91,"column":17,"nodeType":"426","messageId":"427","endLine":91,"endColumn":24},{"ruleId":"424","severity":1,"message":"460","line":92,"column":17,"nodeType":"426","messageId":"427","endLine":92,"endColumn":23},{"ruleId":"424","severity":1,"message":"459","line":52,"column":17,"nodeType":"426","messageId":"427","endLine":52,"endColumn":24},{"ruleId":"424","severity":1,"message":"460","line":53,"column":17,"nodeType":"426","messageId":"427","endLine":53,"endColumn":23},{"ruleId":"424","severity":1,"message":"449","line":4,"column":8,"nodeType":"426","messageId":"427","endLine":4,"endColumn":13},{"ruleId":"430","severity":1,"message":"471","line":14,"column":6,"nodeType":"432","endLine":14,"endColumn":8,"suggestions":"478"},{"ruleId":"424","severity":1,"message":"479","line":8,"column":9,"nodeType":"426","messageId":"427","endLine":8,"endColumn":16},{"ruleId":"424","severity":1,"message":"480","line":10,"column":10,"nodeType":"426","messageId":"427","endLine":10,"endColumn":24},{"ruleId":"424","severity":1,"message":"440","line":12,"column":10,"nodeType":"426","messageId":"427","endLine":12,"endColumn":21},{"ruleId":"430","severity":1,"message":"471","line":26,"column":6,"nodeType":"432","endLine":26,"endColumn":8,"suggestions":"481"},{"ruleId":"424","severity":1,"message":"439","line":14,"column":10,"nodeType":"426","messageId":"427","endLine":14,"endColumn":20},{"ruleId":"424","severity":1,"message":"440","line":15,"column":10,"nodeType":"426","messageId":"427","endLine":15,"endColumn":21},{"ruleId":"430","severity":1,"message":"471","line":29,"column":6,"nodeType":"432","endLine":29,"endColumn":22,"suggestions":"482"},{"ruleId":"430","severity":1,"message":"471","line":15,"column":6,"nodeType":"432","endLine":15,"endColumn":8,"suggestions":"483"},{"ruleId":"424","severity":1,"message":"480","line":8,"column":10,"nodeType":"426","messageId":"427","endLine":8,"endColumn":24},{"ruleId":"424","severity":1,"message":"439","line":9,"column":10,"nodeType":"426","messageId":"427","endLine":9,"endColumn":20},{"ruleId":"430","severity":1,"message":"484","line":11,"column":3,"nodeType":"485","endLine":11,"endColumn":18,"suggestions":"486"},{"ruleId":"424","severity":1,"message":"487","line":2,"column":8,"nodeType":"426","messageId":"427","endLine":2,"endColumn":11},{"ruleId":"424","severity":1,"message":"488","line":3,"column":8,"nodeType":"426","messageId":"427","endLine":3,"endColumn":17},{"ruleId":"424","severity":1,"message":"489","line":4,"column":8,"nodeType":"426","messageId":"427","endLine":4,"endColumn":16},{"ruleId":"430","severity":1,"message":"471","line":14,"column":6,"nodeType":"432","endLine":14,"endColumn":8,"suggestions":"490"},{"ruleId":"424","severity":1,"message":"491","line":1,"column":8,"nodeType":"426","messageId":"427","endLine":1,"endColumn":20},{"ruleId":"424","severity":1,"message":"487","line":2,"column":8,"nodeType":"426","messageId":"427","endLine":2,"endColumn":11},{"ruleId":"424","severity":1,"message":"488","line":3,"column":8,"nodeType":"426","messageId":"427","endLine":3,"endColumn":17},{"ruleId":"424","severity":1,"message":"489","line":4,"column":8,"nodeType":"426","messageId":"427","endLine":4,"endColumn":16},{"ruleId":"424","severity":1,"message":"491","line":1,"column":8,"nodeType":"426","messageId":"427","endLine":1,"endColumn":20},{"ruleId":"424","severity":1,"message":"487","line":2,"column":8,"nodeType":"426","messageId":"427","endLine":2,"endColumn":11},{"ruleId":"424","severity":1,"message":"488","line":3,"column":8,"nodeType":"426","messageId":"427","endLine":3,"endColumn":17},{"ruleId":"424","severity":1,"message":"491","line":1,"column":8,"nodeType":"426","messageId":"427","endLine":1,"endColumn":20},{"ruleId":"424","severity":1,"message":"487","line":2,"column":8,"nodeType":"426","messageId":"427","endLine":2,"endColumn":11},{"ruleId":"424","severity":1,"message":"489","line":4,"column":8,"nodeType":"426","messageId":"427","endLine":4,"endColumn":16},{"ruleId":"424","severity":1,"message":"492","line":5,"column":20,"nodeType":"426","messageId":"427","endLine":5,"endColumn":24},{"ruleId":"424","severity":1,"message":"493","line":5,"column":26,"nodeType":"426","messageId":"427","endLine":5,"endColumn":28},{"ruleId":"424","severity":1,"message":"494","line":2,"column":17,"nodeType":"426","messageId":"427","endLine":2,"endColumn":26},{"ruleId":"424","severity":1,"message":"495","line":6,"column":8,"nodeType":"426","messageId":"427","endLine":6,"endColumn":21},{"ruleId":"430","severity":1,"message":"471","line":16,"column":6,"nodeType":"432","endLine":16,"endColumn":8,"suggestions":"496"},{"ruleId":"424","severity":1,"message":"492","line":5,"column":20,"nodeType":"426","messageId":"427","endLine":5,"endColumn":24},{"ruleId":"424","severity":1,"message":"493","line":5,"column":26,"nodeType":"426","messageId":"427","endLine":5,"endColumn":28},{"ruleId":"424","severity":1,"message":"493","line":5,"column":26,"nodeType":"426","messageId":"427","endLine":5,"endColumn":28},{"ruleId":"424","severity":1,"message":"492","line":5,"column":20,"nodeType":"426","messageId":"427","endLine":5,"endColumn":24},{"ruleId":"424","severity":1,"message":"493","line":5,"column":26,"nodeType":"426","messageId":"427","endLine":5,"endColumn":28},{"ruleId":"424","severity":1,"message":"497","line":3,"column":28,"nodeType":"426","messageId":"427","endLine":3,"endColumn":38},{"ruleId":"424","severity":1,"message":"498","line":6,"column":10,"nodeType":"426","messageId":"427","endLine":6,"endColumn":28},{"ruleId":"424","severity":1,"message":"461","line":6,"column":30,"nodeType":"426","messageId":"427","endLine":6,"endColumn":43},{"ruleId":"424","severity":1,"message":"499","line":9,"column":11,"nodeType":"426","messageId":"427","endLine":9,"endColumn":15},{"ruleId":"424","severity":1,"message":"500","line":9,"column":17,"nodeType":"426","messageId":"427","endLine":9,"endColumn":23},{"ruleId":"424","severity":1,"message":"501","line":50,"column":41,"nodeType":"426","messageId":"427","endLine":50,"endColumn":51},{"ruleId":"424","severity":1,"message":"425","line":5,"column":8,"nodeType":"426","messageId":"427","endLine":5,"endColumn":19},{"ruleId":"424","severity":1,"message":"502","line":5,"column":23,"nodeType":"426","messageId":"427","endLine":5,"endColumn":36},"no-native-reassign",["503"],"no-negated-in-lhs",["504"],"no-unused-vars","'useDarkMode' is defined but never used.","Identifier","unusedVar","'stories' is assigned a value but never used.","'setStories' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'filteredResults.length'. Either include it or remove the dependency array.","ArrayExpression",["505"],"React Hook React.useEffect has missing dependencies: 'character' and 'params.id'. Either include them or remove the dependency array.",["506"],"'isSubmitting' is assigned a value but never used.","'Table' is defined but never used.","'token' is assigned a value but never used.","'storyCheck' is assigned a value but never used.","'reviewCheck' is assigned a value but never used.","'useContext' is defined but never used.","'DataContext' is defined but never used.","'fetchWithTokenNoBody' is defined but never used.","'setPermissions' is assigned a value but never used.","'onChangeValue' is assigned a value but never used.","'onChangeValueC' is assigned a value but never used.","'onChangeValueS' is assigned a value but never used.","'ReactPaginate' is defined but never used.","'Globe' is defined but never used.","'Twitter' is defined but never used.","'CharacterInfo' is defined but never used.","'fazerRequisicaoComBody' is defined but never used.","'Yup' is defined but never used.","React Hook React.useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["507"],"'StoryInfo' is defined but never used.","React Hook React.useEffect has missing dependencies: 'params.id' and 'token'. Either include them or remove the dependency array.",["508"],"'touched' is assigned a value but never used.","'errors' is assigned a value but never used.","'fetchWithBody' is defined but never used.",["509"],"'character' is assigned a value but never used.","'setCharacter' is assigned a value but never used.",["510"],["511"],"'cover' is assigned a value but never used.",["512"],"'TableStory' is defined but never used.",["513"],"React Hook React.useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["514"],"'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","React Hook React.useEffect has a missing dependency: 'changed'. Either include it or remove the dependency array.",["515"],["516"],["517"],"'history' is assigned a value but never used.","'characterCheck' is assigned a value but never used.",["518"],["519"],["520"],"React Hook useEffect contains a call to 'setToken'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [token] as a second argument to the useEffect Hook.","MemberExpression",["521"],"'Row' is defined but never used.","'RowReview' is defined but never used.","'RowStory' is defined but never used.",["522"],"'RowCharacter' is defined but never used.","'type' is assigned a value but never used.","'id' is assigned a value but never used.","'Component' is defined but never used.","'SuggestReview' is defined but never used.",["523"],"'ButtonIcon' is defined but never used.","'fetchNoTokenNobody' is defined but never used.","'page' is assigned a value but never used.","'params' is assigned a value but never used.","'handleBlur' is assigned a value but never used.","'ThemeProvider' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"528","fix":"532"},{"desc":"528","fix":"533"},{"desc":"530","fix":"534"},{"desc":"528","fix":"535"},{"desc":"530","fix":"536"},{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},{"desc":"528","fix":"541"},{"desc":"537","fix":"542"},{"desc":"537","fix":"543"},{"desc":"544","fix":"545"},{"desc":"537","fix":"546"},{"desc":"547","fix":"548"},{"desc":"537","fix":"549"},{"desc":"537","fix":"550"},"Update the dependencies array to be: [filteredResults.length]",{"range":"551","text":"552"},"Update the dependencies array to be: [character, params.id]",{"range":"553","text":"554"},"Update the dependencies array to be: [params.id]",{"range":"555","text":"556"},"Update the dependencies array to be: [params.id, token]",{"range":"557","text":"558"},{"range":"559","text":"556"},{"range":"560","text":"556"},{"range":"561","text":"558"},{"range":"562","text":"556"},{"range":"563","text":"558"},"Update the dependencies array to be: [token]",{"range":"564","text":"565"},"Update the dependencies array to be: [changed, history]",{"range":"566","text":"567"},{"range":"568","text":"556"},{"range":"569","text":"565"},{"range":"570","text":"565"},"Update the dependencies array to be: [characterCheck, token]",{"range":"571","text":"572"},{"range":"573","text":"565"},"Add dependencies array: [token]",{"range":"574","text":"575"},{"range":"576","text":"565"},{"range":"577","text":"565"},[1160,1162],"[filteredResults.length]",[1791,1793],"[character, params.id]",[1103,1105],"[params.id]",[1093,1095],"[params.id, token]",[998,1000],[1167,1169],[1119,1121],[1663,1665],[964,966],[768,770],"[token]",[1095,1104],"[changed, history]",[1496,1498],[498,500],[992,994],[1261,1277],"[characterCheck, token]",[468,470],[912,912],", [token]",[454,456],[604,606]]