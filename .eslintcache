[{"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\index.js":"1","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\reportWebVitals.js":"2","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\App.js":"3","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\utils\\data.js":"4","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\home\\home.js":"5","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success\\success.js":"6","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\character\\character.js":"7","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\login\\login.js":"8","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-characters\\suggested-characters.js":"9","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-character\\suggest-character.js":"10","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\dashboard\\dashboard.js":"11","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\all-characters\\all-characters.js":"12","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\about\\about.js":"13","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-character\\suggested-character.js":"14","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-story\\update-story.js":"15","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-reviews\\suggested-reviews.js":"16","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-story\\suggest-story.js":"17","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-stories\\suggested-stories.js":"18","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-character\\update-character.js":"19","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-review\\suggest-review.js":"20","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-character\\add-character.js":"21","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-review\\suggested-review.js":"22","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-review\\update-review.js":"23","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-story\\suggested-story.js":"24","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success-st-sc\\success.js":"25","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\sc-suggested-stories\\suggested-stories.js":"26","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-story\\add-story.js":"27","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-review\\add-review.js":"28","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\about-team\\about.js":"29","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\results\\results.js":"30","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\sc-suggested-story\\suggested-story.js":"31","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-story-sc\\suggest-story.js":"32","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\contact\\contact.js":"33","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\utils\\fetch.js":"34","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\mobile-header\\mobile-header.js":"35","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\single-character\\single-character.js":"36","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\stories\\stories.js":"37","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\sidebar\\sidebar.js":"38","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\character-info\\character-info.js":"39","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\reviews\\reviews.js":"40","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-character\\table.js":"41","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\pagination\\pagination.js":"42","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\story-info\\story-info.js":"43","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\stats\\stats.js":"44","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\recent-suggested\\recent-suggested.js":"45","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-sc-story\\table.js":"46","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-story\\table.js":"47","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-review\\table.js":"48","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-story\\row.js":"49","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\review-info\\review-info.js":"50","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-review\\row.js":"51","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-character\\row.js":"52","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-sc-story\\row.js":"53","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\search-bar\\search-bar.js":"54","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success-delete\\success.js":"55","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success-delete-all\\success.js":"56"},{"size":500,"mtime":499162500000,"results":"57","hashOfConfig":"58"},{"size":362,"mtime":499162500000,"results":"59","hashOfConfig":"58"},{"size":5277,"mtime":1615043209188,"results":"60","hashOfConfig":"58"},{"size":109,"mtime":1612579596337,"results":"61","hashOfConfig":"58"},{"size":4938,"mtime":1615058936039,"results":"62","hashOfConfig":"58"},{"size":705,"mtime":1614360806561,"results":"63","hashOfConfig":"58"},{"size":2178,"mtime":1612198581833,"results":"64","hashOfConfig":"58"},{"size":3713,"mtime":1613775691277,"results":"65","hashOfConfig":"58"},{"size":1629,"mtime":1612197178635,"results":"66","hashOfConfig":"58"},{"size":30635,"mtime":1615076431685,"results":"67","hashOfConfig":"58"},{"size":8846,"mtime":1615076884543,"results":"68","hashOfConfig":"58"},{"size":1794,"mtime":1613949318739,"results":"69","hashOfConfig":"58"},{"size":8631,"mtime":1615071806520,"results":"70","hashOfConfig":"58"},{"size":16847,"mtime":1615043016550,"results":"71","hashOfConfig":"58"},{"size":7663,"mtime":1615037613213,"results":"72","hashOfConfig":"58"},{"size":1519,"mtime":1612197292372,"results":"73","hashOfConfig":"58"},{"size":19865,"mtime":1615038818800,"results":"74","hashOfConfig":"58"},{"size":1547,"mtime":1612197403014,"results":"75","hashOfConfig":"58"},{"size":11097,"mtime":1615043263102,"results":"76","hashOfConfig":"58"},{"size":8303,"mtime":1613775007810,"results":"77","hashOfConfig":"58"},{"size":14363,"mtime":1613949939536,"results":"78","hashOfConfig":"58"},{"size":6215,"mtime":1612197794397,"results":"79","hashOfConfig":"58"},{"size":5102,"mtime":1612197946834,"results":"80","hashOfConfig":"58"},{"size":10486,"mtime":1615039434448,"results":"81","hashOfConfig":"58"},{"size":990,"mtime":1614356337885,"results":"82","hashOfConfig":"58"},{"size":1560,"mtime":1613966622339,"results":"83","hashOfConfig":"58"},{"size":20385,"mtime":1615038739280,"results":"84","hashOfConfig":"58"},{"size":4690,"mtime":1612198003945,"results":"85","hashOfConfig":"58"},{"size":2989,"mtime":1615071816345,"results":"86","hashOfConfig":"58"},{"size":4720,"mtime":1615058682647,"results":"87","hashOfConfig":"58"},{"size":11154,"mtime":1615042921469,"results":"88","hashOfConfig":"58"},{"size":18726,"mtime":1615038800233,"results":"89","hashOfConfig":"58"},{"size":3856,"mtime":1614357167583,"results":"90","hashOfConfig":"58"},{"size":985,"mtime":1613788084395,"results":"91","hashOfConfig":"58"},{"size":1999,"mtime":1612199890181,"results":"92","hashOfConfig":"58"},{"size":1636,"mtime":1614296651408,"results":"93","hashOfConfig":"58"},{"size":1668,"mtime":1612670394462,"results":"94","hashOfConfig":"58"},{"size":5445,"mtime":1614178675330,"results":"95","hashOfConfig":"58"},{"size":4123,"mtime":1612666523231,"results":"96","hashOfConfig":"58"},{"size":1645,"mtime":1612586832542,"results":"97","hashOfConfig":"58"},{"size":1181,"mtime":1614297980122,"results":"98","hashOfConfig":"58"},{"size":851,"mtime":1614117446989,"results":"99","hashOfConfig":"58"},{"size":3052,"mtime":1612666629594,"results":"100","hashOfConfig":"58"},{"size":659,"mtime":1611792827252,"results":"101","hashOfConfig":"58"},{"size":1203,"mtime":1611799322494,"results":"102","hashOfConfig":"58"},{"size":1117,"mtime":1613966603001,"results":"103","hashOfConfig":"58"},{"size":1064,"mtime":1613752565415,"results":"104","hashOfConfig":"58"},{"size":1067,"mtime":1613752475253,"results":"105","hashOfConfig":"58"},{"size":448,"mtime":1613966238419,"results":"106","hashOfConfig":"58"},{"size":1834,"mtime":1612198628178,"results":"107","hashOfConfig":"58"},{"size":2186,"mtime":1613752566807,"results":"108","hashOfConfig":"58"},{"size":2325,"mtime":1614298702388,"results":"109","hashOfConfig":"58"},{"size":453,"mtime":1613966402005,"results":"110","hashOfConfig":"58"},{"size":9299,"mtime":1614273175459,"results":"111","hashOfConfig":"58"},{"size":740,"mtime":1615043085439,"results":"112","hashOfConfig":"58"},{"size":752,"mtime":1615043173516,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"130rid7",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"116"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"116"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"116"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"116"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"116"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"116"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"116"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"116"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"116"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"116"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"116"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"116"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"116"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"116"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"116"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"116"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"116"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"116"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"116"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"116"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"116"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"116"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"116"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"116"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"116"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"116"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"116"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"116"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"116"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"116"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"116"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"116"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"116"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"116"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\index.js",[],["266","267"],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\reportWebVitals.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\App.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\utils\\data.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\home\\home.js",["268","269","270"],"import React from \"react\";\r\nimport \"./home.css\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport SingleCharacter from \"../../components/single-character/single-character\";\r\nimport { ReactComponent as ButtonIcon } from \"../../assets/chevron-right-solid.svg\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SearchBar from \"../../components/search-bar/search-bar\";\r\n\r\nfunction Home() {\r\n  const [random, setRandom] = React.useState([]);\r\n  const [stories, setStories] = React.useState([]);\r\n  const [search, setSearch] = React.useState([]);\r\n  const [filteredResults, setFilteredResults] = React.useState([]);\r\n  const [advancedSearch, setAdvancedSearch] = React.useState(false);\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/character\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const newRandom = resJson.data;\r\n        console.log(newRandom);\r\n        console.log(filteredResults.length);\r\n        setRandom(newRandom);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n\r\n      <div className=\"home-container\">\r\n        <div className=\"welcome\">\r\n          <h2>Welcome to the database</h2>\r\n          <p>\r\n            Enter a few keywords in the search bar below to find an aromantic or\r\n            asexual character in the database! These can be orientations\r\n            (demisexual, grayromantic, etc.), story genres (fantasy,\r\n            contemporary), or many more—and you can use more than one.\r\n          </p>\r\n          <p>\r\n            Not sure what to enter? Check out the{\" \"}\r\n            <a href=\"/about\">About the Database</a> page for the list of\r\n            categories and terms used, or hit the “Give me a new character”\r\n            button for inspiration!\r\n          </p>\r\n        </div>\r\n        <div className=\"free-search\">\r\n          <form\r\n            onSubmit={(event) => {\r\n              console.log(search);\r\n\r\n              event.preventDefault();\r\n              history.push(`/results?search=${search}`);\r\n              fetch(\r\n                `https://aroacedb-back.herokuapp.com/character/infinite?search=${search}`\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(search);\r\n                  console.log(resJson.data);\r\n\r\n                  if (resJson.data) {\r\n                    const newResults = resJson.data.characters;\r\n                    setFilteredResults(newResults);\r\n                    console.log(filteredResults);\r\n                  }\r\n                });\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your keywords here to search\"\r\n              onChange={(event) => {\r\n                setSearch(event.target.value);\r\n              }}\r\n            ></input>\r\n            <button>\r\n              <ButtonIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"button-container\">\r\n          <div className=\"common-searches\">\r\n            <span>Common searches: </span>\r\n            <a href=\"/results?search=acespec\">All Aces</a>\r\n            <a href=\"/results?search=arospec\">All Aros</a>\r\n            <a href=\"/results?search=canonleads\">In-Canon Aro/Ace leads </a>\r\n          </div>\r\n\r\n          <button\r\n            onClick={() => {\r\n              setAdvancedSearch(!advancedSearch);\r\n            }}\r\n          >\r\n            Advanced Search\r\n          </button>\r\n        </div>\r\n        {advancedSearch ? <SearchBar /> : \"\"}\r\n\r\n        <div className=\"results\">\r\n          {filteredResults.map((i) => {\r\n            return (\r\n              <div>\r\n                <SingleCharacter character={i} />\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          {filteredResults.length !== 0 ? (\r\n            <div></div>\r\n          ) : (\r\n            <div className=\"random\">\r\n              <h2>Your random character</h2>\r\n              <SingleCharacter character={random} />\r\n              <div className=\"char-btn\">\r\n                <button\r\n                  onClick={() => {\r\n                    fetch(\"https://aroacedb-back.herokuapp.com/character\")\r\n                      .then((res) => res.json())\r\n                      .then((resJson) => {\r\n                        console.log(resJson.data);\r\n                        const newRandom = resJson.data;\r\n                        setRandom(newRandom);\r\n                      });\r\n                  }}\r\n                >\r\n                  Give me a new character!\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success\\success.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\character\\character.js",["271"],"import React from \"react\";\r\nimport \"./character.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Stories from \"../../components/stories/stories\";\r\nimport Reviews from \"../../components/reviews/reviews\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SingleCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const [stories, setStories] = React.useState([]);\r\n  const [reviews, setReviews] = React.useState([]);\r\n  const { params } = useRouteMatch();\r\n\r\n  React.useEffect(() => {\r\n    fetch(`https://aroacedb-back.herokuapp.com/characters/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson.data.character[0]);\r\n        setCharacter(resJson.data.character[0]);\r\n        console.log(character);\r\n        console.log(\"params\", params.id);\r\n      });\r\n\r\n    fetch(`https://aroacedb-back.herokuapp.com/stories/character/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const possibleStories = resJson.data.stories;\r\n        if (possibleStories.length !== 0) {\r\n          console.log(possibleStories);\r\n          setStories(possibleStories);\r\n        }\r\n      });\r\n\r\n    fetch(`https://aroacedb-back.herokuapp.com/reviews/character/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        const possibleReviews = resJson.data.reviews;\r\n        console.log(resJson);\r\n        if (possibleReviews.length !== 0) {\r\n          console.log(possibleReviews);\r\n          setReviews(possibleReviews);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Character\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"character-container\">\r\n        <CharacterInfo character={character} />\r\n        {console.log(params.id)}\r\n        <Stories stories={stories} character_id={params.id} />\r\n        <Reviews reviews={reviews} character_id={params.id} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\login\\login.js",["272"],"import React from \"react\";\r\nimport \"./login.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { fetchWithBody } from \"../../utils/fetch\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"Login\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n\r\n      <div className=\"login-container\">\r\n        <div className=\"login-box\">\r\n          <h2>Login</h2>\r\n          <p>Admin login for the database. Non-admin users can't be created.</p>\r\n          <Formik\r\n            initialValues={{\r\n              email: \"\",\r\n              password: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n\r\n              fetchWithBody(\r\n                \"https://aroacedb-back.herokuapp.com/auth\",\r\n                \"POST\",\r\n                {\r\n                  email: values.email,\r\n                  password: values.password,\r\n                }\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  const data = resJson.data;\r\n                  console.log(data);\r\n                  console.log(resJson.data.token);\r\n\r\n                  localStorage.setItem(\"token\", resJson.data.token);\r\n                  const newToken = localStorage.getItem(\"token\");\r\n\r\n                  const decodedToken = jwt_decode(newToken);\r\n                  console.log(decodedToken);\r\n\r\n                  if (newToken) {\r\n                    history.push(\"/dashboard\");\r\n                  }\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err);\r\n                  alert(\r\n                    \"Error loging in. Are you sure your credentials are correct?\"\r\n                  );\r\n                });\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string().email().required(\"Required\"),\r\n            })}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <input\r\n                    id=\"email\"\r\n                    placeholder=\"User\"\r\n                    type=\"text\"\r\n                    value={values.email}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.email && touched.email\r\n                        ? \"text-input error\"\r\n                        : \"text-input\"\r\n                    }\r\n                  />\r\n                  {errors.email && touched.email && (\r\n                    <div className=\"input-feedback\">{errors.email}</div>\r\n                  )}\r\n\r\n                  <input\r\n                    id=\"password\"\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n\r\n                  <button type=\"submit\" className=\"submit\">\r\n                    Login\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-characters\\suggested-characters.js",["273"],"import \"./suggested-characters.css\";\r\nimport React from \"react\";\r\nimport Table from \"../../components/table-character/table\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableCharacter from \"../../components/table-character/table\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedCharacters() {\r\n  const [characters, setCharacters] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/suggest/characters\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const data = resJson.data.paginated_characters;\r\n        console.log(data);\r\n        setCharacters(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"SuggestedCharacters\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggested-container\">\r\n        <div className=\"title\">\r\n          <h2>Suggested Characters</h2>\r\n        </div>\r\n        <div className=\"table-container\">\r\n          <TableCharacter content={characters} type=\"suggest\" id=\"character\" />\r\n          <Pagination\r\n            totalPages={totalPages}\r\n            setCurrentPage={setCurrentPage}\r\n            currentPage={currentPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-character\\suggest-character.js",["274","275","276","277","278"],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\dashboard\\dashboard.js",["279","280","281","282","283","284","285"],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\all-characters\\all-characters.js",["286"],"import \"./all-characters.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableCharacter from \"../../components/table-character/table\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function AllCharacters() {\r\n  const [characters, setCharacters] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n  const [token, setToken] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    fetch(\r\n      `https://aroacedb-back.herokuapp.com/characters?offset=${\r\n        currentPage * 20 - 20\r\n      }`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const data = resJson.data.paginated_characters;\r\n        console.log(\"characters:\", data);\r\n        setCharacters(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"AllCharacters\">\r\n      <Sidebar />\r\n\r\n      <MobileHeader />\r\n      <div className=\"all-characters-container\">\r\n        <div className=\"title\">\r\n          <h2>All Characters</h2>\r\n          {token ? <a href=\"/add-character\">Add character</a> : \"\"}\r\n        </div>\r\n        <TableCharacter content={characters} type=\"regular\" id=\"character\" />\r\n\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\about\\about.js",["287","288"],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-character\\suggested-character.js",["289","290","291","292","293"],"import React from \"react\";\r\nimport \"./suggested-character.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport {\r\n  fazerRequisicaoComBody,\r\n  fetchWithToken,\r\n  fetchWithTokenNoBody,\r\n} from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const [token, setToken] = React.useState(\"\");\r\n\r\n  const history = useHistory();\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/suggest/characters/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setCharacter(resJson.data.character[0]);\r\n        console.log(resJson.data.character[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Character\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"character-container\">\r\n        <div className=\"suggest\">\r\n          <h2 className=\"title\">Suggested character</h2>\r\n\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              character_name: character.character_name,\r\n              author: character.author,\r\n              gender: character.gender,\r\n              importance: character.importance,\r\n              pairing_qpp_or_romantic: character.pairing_qpp_or_romantic,\r\n              main_storyseries: character.main_storyseries,\r\n              type_of_rep: character.type_of_rep,\r\n              romantic_orientation: character.romantic_orientation,\r\n              sexual_orientation: character.sexual_orientation,\r\n              genre: character.genre,\r\n              relationships: character.relationships,\r\n              rep_noteswarnings: character.rep_noteswarnings,\r\n              cover: character.cover,\r\n              reference: character.reference,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                //add character to database\r\n                \"https://aroacedb-back.herokuapp.com/characters\",\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  let character_id = resJson.data.dbCharacter[0].id;\r\n\r\n                  fetch(\r\n                    //get character stories from st_sc_suggestions\r\n                    `https://aroacedb-back.herokuapp.com/suggest/sc/character/stories/${params.id}`\r\n                  )\r\n                    .then((res) => res.json())\r\n                    .then((resJson) => {\r\n                      console.log(resJson);\r\n                      const stories = resJson.data.stories;\r\n\r\n                      stories.forEach((story) => {\r\n                        story.character_id = character_id;\r\n                        console.log(story);\r\n                        fetchWithToken(\r\n                          // add to real story database\r\n                          `https://aroacedb-back.herokuapp.com/stories`,\r\n                          \"POST\",\r\n                          story,\r\n                          token\r\n                        )\r\n                          .then((res) => res.json())\r\n                          .then((resJson) => {\r\n                            console.log(resJson);\r\n\r\n                            fetchWithTokenNoBody(\r\n                              //delete from sc suggested stories\r\n                              `https://aroacedb-back.herokuapp.com/suggest/sc/character/stories/${params.id}`,\r\n                              \"DELETE\",\r\n                              token\r\n                            )\r\n                              .then((res) => res.json())\r\n                              .then((resJson) => {\r\n                                console.log(resJson);\r\n                                fetchWithTokenNoBody(\r\n                                  //delete character from suggestions\r\n                                  `https://aroacedb-back.herokuapp.com/suggest/characters/${params.id}`,\r\n                                  \"DELETE\",\r\n                                  token\r\n                                )\r\n                                  .then((res) => res.json())\r\n                                  .then((resJson) => {\r\n                                    console.log(resJson);\r\n                                    history.push(\"/success\");\r\n                                  });\r\n                              });\r\n                          });\r\n                      });\r\n                    });\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"suggest-character-info\">\r\n                    <div className=\"line\">\r\n                      <h2>\r\n                        <input\r\n                          id=\"character_name\"\r\n                          placeholder={character.character_name}\r\n                          type=\"text\"\r\n                          value={values.character_name}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h2>\r\n\r\n                      <select\r\n                        name=\"importance\"\r\n                        value={values.importance}\r\n                        onChange={handleChange}\r\n                        onBlur={handleChange}\r\n                      >\r\n                        <option value=\"\" label=\"Select one\" />\r\n                        <option value=\"Lead\" label=\"Lead\" />\r\n                        <option value=\"Main\" label=\"Main\" />\r\n                        <option value=\"Side\" label=\"Side\" />\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Author</span>\r\n                        <input\r\n                          id=\"author\"\r\n                          placeholder={character.author}\r\n                          type=\"text\"\r\n                          value={values.author}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Gender</span>{\" \"}\r\n                        <select\r\n                          name=\"gender\"\r\n                          value={values.gender}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select gender\" />\r\n                          <option value=\"M\" label=\"M\" />\r\n                          <option value=\"F\" label=\"F\" />\r\n                          <option value=\"Enby\" label=\"Enby\" />\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Pairing</span>\r\n                        <input\r\n                          id=\"pairing_qpp_or_romantic\"\r\n                          placeholder={character.pairing_qpp_or_romantic}\r\n                          type=\"text\"\r\n                          value={values.pairing_qpp_or_romantic}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Series</span>\r\n                        <input\r\n                          id=\"main_storyseries\"\r\n                          placeholder={character.main_storyseries}\r\n                          type=\"text\"\r\n                          value={values.main_storyseries}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Type of Rep</span>\r\n                        <select\r\n                          name=\"type_of_rep\"\r\n                          value={values.type_of_rep}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Word of God\" label=\"Word of God\" />\r\n                          <option value=\"On Page\" label=\"On Page\" />\r\n                          <option value=\"Word Used\" label=\"Word Used\" />\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Romantic orientation</span>\r\n\r\n                        <select\r\n                          name=\"romantic_orientation\"\r\n                          value={values.romantic_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Alloromantic\" label=\"Alloromantic\" />\r\n                          <option value=\"Aroflux\" label=\"Aroflux\" />\r\n                          <option value=\"Aromantic\" label=\"Aromantic\" />\r\n                          <option value=\"Arospec\" label=\"Arospec\" />\r\n                          <option value=\"Biromantic\" label=\"Biromantic\" />\r\n                          <option value=\"Greyromantic\" label=\"Grayromantic\" />\r\n                          <option value=\"Demiromantic\" label=\"Demiromantic\" />\r\n                          <option\r\n                            value=\"Heteroromantic\"\r\n                            label=\"Heteroromantic\"\r\n                          />\r\n                          <option value=\"Homoromantic\" label=\"Homoromantic\" />\r\n                          <option value=\"Panromantic\" label=\"Panromantic\" />\r\n                          <option value=\"Queer\" label=\"Queer\" />\r\n                          <option value=\"WTFRomantic\" label=\"WTFRomantic\" />\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Sexual Orientation</span>\r\n                        <select\r\n                          name=\"sexual_orientation\"\r\n                          value={values.sexual_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Allosexual\" label=\"Allosexual\" />\r\n                          <option value=\"Asexual\" label=\"Asexual\" />\r\n                          <option value=\"Acespec\" label=\"Acespec\" />\r\n                          <option value=\"Demisexual\" label=\"Demisexual\" />\r\n                          <option value=\"Bisexual\" label=\"Bisexual\" />\r\n                          <option value=\"Gay\" label=\"Gay\" />\r\n                          <option value=\"Gray-asexual\" label=\"Graysexual\" />\r\n                          <option value=\"Heterosexual\" label=\"Heterosexual\" />\r\n                          <option value=\"Pansexual\" label=\"Pansexual\" />\r\n                          <option value=\"Queer\" label=\"Queer\" />\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Genre</span>\r\n                        <input\r\n                          id=\"genre\"\r\n                          placeholder={character.genre}\r\n                          type=\"text\"\r\n                          value={values.genre}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Relationships</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"relationships\"\r\n                        placeholder={character.relationships}\r\n                        type=\"text\"\r\n                        value={values.relationships}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Notes & Warnings</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder={character.rep_noteswarnings}\r\n                        type=\"text\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>References to mention of representation</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"reference\"\r\n                        placeholder=\"Insert references\"\r\n                        type=\"text\"\r\n                        value={values.reference}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Cover</span>\r\n                      </p>\r\n                      <input\r\n                        id=\"cover\"\r\n                        placeholder={character.cover}\r\n                        type=\"text\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"buttons\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        console.log(\"delete from database\");\r\n                        fetchWithTokenNoBody(\r\n                          `https://aroacedb-back.herokuapp.com/suggest/characters/${params.id}`,\r\n                          \"DELETE\",\r\n                          token\r\n                        )\r\n                          .then((res) => res.json())\r\n                          .then((resJson) => {\r\n                            console.log(resJson);\r\n                            history.push(\"/success-deleted\");\r\n                          });\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        // update character but don't add it to database/\r\n                        fetchWithToken(\r\n                          `https://aroacedb-back.herokuapp.com/suggest/characters/${params.id}`,\r\n                          \"PUT\",\r\n                          values,\r\n                          token\r\n                        )\r\n                          .then((res) => res.json())\r\n                          .then((resJson) => {\r\n                            console.log(resJson);\r\n                            history.push(\"/success\");\r\n                          });\r\n                      }}\r\n                    >\r\n                      Update\r\n                    </button>\r\n                    <button type=\"submit\" className=\"submit\">\r\n                      Add Character to Database\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-story\\update-story.js",["294","295","296","297","298","299"],"import React from \"react\";\r\nimport \"./update-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function UpdateStory() {\r\n  const [story, setStory] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n    fetch(`https://aroacedb-back.herokuapp.com/stories/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson.data.story[0]);\r\n\r\n        setStory(resJson.data.story[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Update Story</h3>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              story_title: story.story_title,\r\n              series_or_anthology: story.series_or_anthology,\r\n              genre: story.genre,\r\n              story_length: story.story_length,\r\n              type_of_rep: story.type_of_rep,\r\n              character_importance: story.character_importance,\r\n              rep_noteswarnings: story.rep_noteswarnings,\r\n              other_noteswarnings: story.other_noteswarnings,\r\n              cover: story.cover,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/stories/${story.id}`,\r\n                \"PUT\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <label>Story title</label>\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <label>Story length</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"story_length\"\r\n                            type=\"text\"\r\n                            placeholder=\"Story length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Character importance</label>\r\n                        <input\r\n                          id=\"character_importance\"\r\n                          type=\"text\"\r\n                          placeholder=\"Character importance\"\r\n                          value={values.character_importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <label>Series title</label>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <label>Genres</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Type of Rep</label>\r\n                        <span className=\"to-capitalize\">\r\n                          <input\r\n                            id=\"type_of_rep\"\r\n                            type=\"text\"\r\n                            placeholder=\"type of rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <span>Rep Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Other Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Cover</span>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Update\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-reviews\\suggested-reviews.js",["300"],"import \"./suggested-reviews.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Table from \"../../components/table-character/table\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableReview from \"../../components/table-review/table\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedReviews() {\r\n  const [reviews, setReviews] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/suggest/reviews\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const data = resJson.data.paginated_reviews;\r\n        console.log(data);\r\n        setReviews(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"SuggestedCharacters\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggested-container\">\r\n        <div className=\"title\">\r\n          <h2>Suggested Reviews</h2>\r\n        </div>\r\n        <TableReview content={reviews} type=\"suggest\" id=\"review\" />\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-story\\suggest-story.js",["301","302"],"import React from \"react\";\r\nimport \"./suggest-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { Formik } from \"formik\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default function SuggestStory() {\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Suggest a Story</h3>\r\n          <Formik\r\n            initialValues={{\r\n              story_title: \"\",\r\n              series_or_anthology: \"\",\r\n              genre: \"\",\r\n              story_length: \"\",\r\n              type_of_rep: \"\",\r\n              character_importance: \"\",\r\n              rep_noteswarnings: \"\",\r\n              other_noteswarnings: \"\",\r\n              cover: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              values.character_id = params.id;\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetch(\"https://aroacedb-back.herokuapp.com/suggest/stories\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n              })\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-story-title\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-story-title\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">Story or book title</div>\r\n                          </ReactTooltip>\r\n                          <label>Story title</label>\r\n                        </div>\r\n\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-story-length\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-story-length\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              {\" \"}\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Short story:</strong>The character is\r\n                                  at the heart of the story’s central storyline\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Novella:</strong>The character plays\r\n                                  an important role in the story and is\r\n                                  frequently on page\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Novel (short):</strong>The character\r\n                                  plays a minor role in the story\r\n                                </li>\r\n\r\n                                <li>\r\n                                  <strong>Novel (long):</strong>More than 80,000\r\n                                  words\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Anthology:</strong>Short story is part\r\n                                  of an anthology\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Webseries:</strong>\r\n                                  Published in several installments on the\r\n                                  internet (blog, Wattpad, etc.)\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Story length</label>\r\n                        </div>\r\n                        <span>\r\n                          <select\r\n                            name=\"story_length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Short story\" label=\"Short story\" />\r\n                            <option value=\"Novella\" label=\"Novella\" />\r\n                            <option\r\n                              value=\"Novel (short)\"\r\n                              label=\"Novel (short)\"\r\n                            />\r\n                            <option value=\"Novel (long)\" label=\"Novel (long)\" />\r\n                            <option value=\"Anthology\" label=\"Anthology\" />\r\n                            <option value=\"Webseries\" label=\"Webseries\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-character-importance\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-character-importance\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Lead: </strong>The character is at the\r\n                                  heart <p>of the story’s central storyline</p>\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Main: </strong>The character plays an\r\n                                  important{\" \"}\r\n                                  <p>\r\n                                    role in the story and is frequently on page\r\n                                  </p>\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Lead: </strong>The character plays a\r\n                                  <p> minor role in the story</p>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Character importance</label>\r\n                        </div>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-series\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-series\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <p>\r\n                                Name of the series (if applicable). Short\r\n                                stories in an anthology\r\n                              </p>{\" \"}\r\n                              <p>can list the anthology name here.</p>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Series title</label>\r\n                        </div>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-genres\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-genres\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              {\" \"}\r\n                              <p>Story's literary genre. </p>{\" \"}\r\n                              <p>\r\n                                List in alphabetical order, i.e. \"Contemporary,\r\n                                Romance, Young Adult\".\r\n                              </p>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Genres</label>\r\n                        </div>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-type\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-type\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Word of God: </strong>The character’s\r\n                                  sexuality{\" \"}\r\n                                  <p>\r\n                                    is not explicit on page, but the author has\r\n                                    confirmed it.\r\n                                  </p>\r\n                                </li>\r\n                                <li>\r\n                                  <strong>On page:</strong> The character’s\r\n                                  sexuality is explicitly\r\n                                  <p>\r\n                                    demonstrated within the text. It should be\r\n                                    showed or\r\n                                  </p>\r\n                                  <p>\r\n                                    discussed to an extent that makes it clear\r\n                                    to the readers.\r\n                                  </p>\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Word used: </strong>The identity is\r\n                                  stated using the{\" \"}\r\n                                  <p> actual word (usually also On Page)</p>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Type of Rep</label>\r\n                        </div>\r\n                        <span className=\"to-capitalize\">\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-repnoteswarnings\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-repnoteswarnings\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">\r\n                            Any noteworthy information about the representation,\r\n                            <p>\r\n                              {\" \"}\r\n                              whether it is tropes (exile or dead ace, allo\r\n                              saviour, etc.)\r\n                            </p>{\" \"}\r\n                            or facets of it (sex repulsed/averse/positive, touch\r\n                            averse, etc.).\r\n                          </div>\r\n                        </ReactTooltip>\r\n                        <label>Rep Notes & Warnings</label>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-othernoteswarnings\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-othernoteswarnings\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">\r\n                            <p>\r\n                              Any noteworthy information about the\r\n                              representation,\r\n                            </p>\r\n                            <p>whether it is tropes (exile or dead ace, allo</p>\r\n                            <p>\r\n                              saviour, etc.) or facets of it (sex\r\n                              repulsed/averse/positive, touch averse, etc.)\r\n                            </p>\r\n                          </div>\r\n                        </ReactTooltip>\r\n                        <label>Other Notes & Warnings</label>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-cover\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-cover\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">URL to cover image.</div>\r\n                        </ReactTooltip>\r\n                        <label>Cover</label>\r\n                      </div>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Suggest\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-stories\\suggested-stories.js",["303"],"import \"./suggested-stories.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Table from \"../../components/table-character/table\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableStory from \"../../components/table-story/table\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedStories() {\r\n  const [stories, setStories] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/suggest/stories\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        const data = resJson.data.paginated_stories;\r\n        console.log(data);\r\n        setStories(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"SuggestedCharacters\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggested-container\">\r\n        <div className=\"title\">\r\n          <h2>Suggested Stories</h2>\r\n        </div>\r\n        <div className=\"table-container\">\r\n          <TableStory content={stories} type=\"suggest\" id=\"story\" />\r\n        </div>\r\n\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-character\\update-character.js",["304","305","306","307"],"import React from \"react\";\r\nimport \"./update-character.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithBody, fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function UpdateCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const [token, setToken] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/characters/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setCharacter(resJson.data.character[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Character\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"character-container\">\r\n        <div className=\"suggest\">\r\n          <h2 className=\"title\">Update character</h2>\r\n\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              character_name: character.character_name,\r\n              author: character.author,\r\n              gender: character.gender,\r\n              importance: character.importance,\r\n              pairing_qpp_or_romantic: character.pairing_qpp_or_romantic,\r\n              main_storyseries: character.main_storyseries,\r\n              type_of_rep: character.type_of_rep,\r\n              romantic_orientation: character.romantic_orientation,\r\n              sexual_orientation: character.sexual_orientation,\r\n              genre: character.genre,\r\n              relationships: character.relationships,\r\n              rep_noteswarnings: character.rep_noteswarnings,\r\n              cover: character.cover,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(token);\r\n              console.log(`http:localhost:8081/characters/${params.id}`);\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/characters/${params.id}`,\r\n                \"PUT\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n              //s history.push(\"/success\");\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"suggest-character-info\">\r\n                    <div className=\"line\">\r\n                      <h2>\r\n                        <input\r\n                          id=\"character_name\"\r\n                          placeholder={character.character_name}\r\n                          type=\"text\"\r\n                          value={values.character_name}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h2>\r\n                      <input\r\n                        id=\"importance\"\r\n                        placeholder={character.importance}\r\n                        type=\"text\"\r\n                        value={values.importance}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Author</span>\r\n                        <input\r\n                          id=\"author\"\r\n                          placeholder={character.author}\r\n                          type=\"text\"\r\n                          value={values.author}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Gender</span>{\" \"}\r\n                        <input\r\n                          id=\"gender\"\r\n                          placeholder={character.gender}\r\n                          type=\"text\"\r\n                          value={values.gender}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Pairing</span>\r\n                        <input\r\n                          id=\"pairing_qpp_or_romantic\"\r\n                          placeholder={character.pairing_qpp_or_romantic}\r\n                          type=\"text\"\r\n                          value={values.pairing_qpp_or_romantic}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Series</span>\r\n                        <input\r\n                          id=\"main_storyseries\"\r\n                          placeholder={character.main_storyseries}\r\n                          type=\"text\"\r\n                          value={values.main_storyseries}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Type of Rep</span>\r\n                        <input\r\n                          id=\"type_of_rep\"\r\n                          placeholder={character.type_of_rep}\r\n                          type=\"text\"\r\n                          value={values.type_of_rep}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Romantic orientation</span>\r\n                        <input\r\n                          id=\"romantic_orientation\"\r\n                          placeholder={character.romantic_orientation}\r\n                          type=\"text\"\r\n                          value={values.romantic_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Sexual Orientation</span>\r\n                        <input\r\n                          id=\"sexual_orientation\"\r\n                          placeholder={character.sexual_orientation}\r\n                          type=\"text\"\r\n                          value={values.sexual_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Genre</span>\r\n                        <input\r\n                          id=\"genre\"\r\n                          placeholder={character.genre}\r\n                          type=\"text\"\r\n                          value={values.genre}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Relationships</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"relationships\"\r\n                        placeholder={character.relationships}\r\n                        type=\"text\"\r\n                        value={values.relationships}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Notes & Warnings</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder={character.rep_noteswarnings}\r\n                        type=\"text\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Cover</span>\r\n                      </p>\r\n                      <input\r\n                        id=\"cover\"\r\n                        placeholder={character.cover}\r\n                        type=\"text\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"buttons\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        console.log(\"delete from database\");\r\n                        fetch(\r\n                          `https://aroacedb-back.herokuapp.com/suggest/${params}`,\r\n                          {\r\n                            method: \"DELETE\",\r\n                            headers: { \"Content-Type\": \"application/json\" },\r\n                          }\r\n                        )\r\n                          .then((res) => res.json())\r\n                          .then((resJson) => {\r\n                            console.log(resJson);\r\n                            history.push(\"/success-deleted-ch\");\r\n                          });\r\n\r\n                        //history.push(\"/success\");\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Update Character to Database\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-review\\suggest-review.js",["308","309","310","311","312","313","314","315","316"],"import React from \"react\";\r\nimport \"./suggest-review.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fazerRequisicaoComBody } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestReview() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Suggest a Review</h3>\r\n          <Formik\r\n            initialValues={{\r\n              review_for: \"\",\r\n              reviewer: \"\",\r\n              ownvoice_for: \"\",\r\n              link: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              values.character_id = params.id;\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetch(\"https://aroacedb-back.herokuapp.com/suggest/reviews\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n              })\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"ReviewInfo\">\r\n                    <div className=\"container\">\r\n                      <div className=\"content-hundred\">\r\n                        <div className=\"block\">\r\n                          <label>\r\n                            <div className=\"group\">\r\n                              <span\r\n                                className=\"hover\"\r\n                                data-for=\"tooltip-review-for\"\r\n                                data-tip\r\n                              >\r\n                                ?\r\n                              </span>\r\n                              <ReactTooltip\r\n                                id=\"tooltip-review-for\"\r\n                                effect=\"solid\"\r\n                                place=\"top\"\r\n                                type=\"dark\"\r\n                              >\r\n                                <div className=\"tooltip\">\r\n                                  Story the review was written about.\r\n                                </div>\r\n                              </ReactTooltip>\r\n                              <span>Review for</span>\r\n                            </div>\r\n\r\n                            <input\r\n                              id=\"review_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Review for\"\r\n                              value={values.review_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n\r\n                          <label>\r\n                            <div className=\"group\">\r\n                              <span\r\n                                className=\"hover\"\r\n                                data-for=\"tooltip-link\"\r\n                                data-tip\r\n                              >\r\n                                ?\r\n                              </span>\r\n                              <ReactTooltip\r\n                                id=\"tooltip-link\"\r\n                                effect=\"solid\"\r\n                                place=\"top\"\r\n                                type=\"dark\"\r\n                              >\r\n                                <div className=\"tooltip\">\r\n                                  A link to where the review is hosted.\r\n                                </div>\r\n                              </ReactTooltip>\r\n                              <span>Link</span>\r\n                            </div>\r\n                            <input\r\n                              id=\"link\"\r\n                              type=\"text\"\r\n                              placeholder=\"Link\"\r\n                              value={values.link}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <span className=\"block\">\r\n                          <label>\r\n                            <div className=\"group\">\r\n                              <span\r\n                                className=\"hover\"\r\n                                data-for=\"tooltip-reviewer\"\r\n                                data-tip\r\n                              >\r\n                                ?\r\n                              </span>\r\n                              <ReactTooltip\r\n                                id=\"tooltip-reviewer\"\r\n                                effect=\"solid\"\r\n                                place=\"top\"\r\n                                type=\"dark\"\r\n                              >\r\n                                <div className=\"tooltip\">\r\n                                  The person who reviewed the story.\r\n                                </div>\r\n                              </ReactTooltip>\r\n                              <span>Reviewer</span>\r\n                            </div>\r\n                            <input\r\n                              id=\"reviewer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Reviewer\"\r\n                              value={values.reviewer}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            <div className=\"group\">\r\n                              <span\r\n                                className=\"hover\"\r\n                                data-for=\"tooltip-ownvoice-for\"\r\n                                data-tip\r\n                              >\r\n                                ?\r\n                              </span>\r\n                              <ReactTooltip\r\n                                id=\"tooltip-ownvoice-for\"\r\n                                effect=\"solid\"\r\n                                place=\"top\"\r\n                                type=\"dark\"\r\n                              >\r\n                                <div className=\"tooltip\">\r\n                                  Ownvoices aspects of the review.\r\n                                </div>\r\n                              </ReactTooltip>\r\n                              <span>Ownvoice for</span>\r\n                            </div>\r\n                            <input\r\n                              id=\"ownvoice_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Ownvoice for\"\r\n                              value={values.ownvoice_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"review-right\">\r\n                    Suggest\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-character\\add-character.js",["317","318"],"import React from \"react\";\r\nimport \"./add-character.css\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default function AddCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"Character\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"character-container\">\r\n        <div className=\"suggest\">\r\n          <h2 className=\"title\">Add a character</h2>\r\n\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              character_name: \"\",\r\n              author: \"\",\r\n              gender: \"\",\r\n              importance: \"\",\r\n              pairing_qpp_or_romantic: \"\",\r\n              main_storyseries: \"\",\r\n              type_of_rep: \"\",\r\n              romantic_orientation: \"\",\r\n              sexual_orientation: \"\",\r\n              genre: \"\",\r\n              relationships: \"\",\r\n              rep_noteswarnings: \"\",\r\n              cover: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              const token = localStorage.getItem(\"token\");\r\n              console.log(token);\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                \"https://aroacedb-back.herokuapp.com/characters\",\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n              //s history.push(\"/success\");\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"suggest-character-info\">\r\n                    <div className=\"line\">\r\n                      <h2>\r\n                        <input\r\n                          id=\"character_name\"\r\n                          placeholder={character.character_name}\r\n                          type=\"text\"\r\n                          value={values.character_name}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h2>\r\n                      <div className=\"importance-container\">\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-importance\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-importance\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Lead:</strong>The character is at the\r\n                                  heart of the story’s central storyline\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Main:</strong>The character plays an\r\n                                  important role in the story and is frequently\r\n                                  on page\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Lead:</strong>The character plays a\r\n                                  minor role in the story\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <span>Importance</span>\r\n                        </div>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Author</span>\r\n                        </div>\r\n                        <input\r\n                          id=\"author\"\r\n                          placeholder={character.author}\r\n                          type=\"text\"\r\n                          value={values.author}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Gender</span>\r\n                        </div>\r\n\r\n                        <select\r\n                          name=\"gender\"\r\n                          value={values.gender}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select gender\" />\r\n                          <option value=\"M\" label=\"M\" />\r\n                          <option value=\"F\" label=\"F\" />\r\n                          <option value=\"Enby\" label=\"Enby\" />\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Pairing</span>\r\n                        </div>\r\n                        <input\r\n                          id=\"pairing_qpp_or_romantic\"\r\n                          placeholder={character.pairing_qpp_or_romantic}\r\n                          type=\"text\"\r\n                          value={values.pairing_qpp_or_romantic}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Series</span>\r\n                        </div>\r\n                        <input\r\n                          id=\"main_storyseries\"\r\n                          placeholder={character.main_storyseries}\r\n                          type=\"text\"\r\n                          value={values.main_storyseries}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Type of Rep</span>\r\n                        </div>\r\n\r\n                        <select\r\n                          name=\"type_of_rep\"\r\n                          value={values.type_of_rep}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Word of God\" label=\"Word of God\" />\r\n                          <option value=\"On Page\" label=\"On Page\" />\r\n                          <option value=\"Word Used\" label=\"Word Used\" />\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Romantic orientation</span>\r\n                        </div>\r\n                        <select\r\n                          name=\"romantic_orientation\"\r\n                          value={values.romantic_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Alloromantic\" label=\"Alloromantic\" />\r\n                          <option value=\"Aroflux\" label=\"Aroflux\" />\r\n                          <option value=\"Aromantic\" label=\"Aromantic\" />\r\n                          <option value=\"Arospec\" label=\"Arospec\" />\r\n                          <option value=\"Biromantic\" label=\"Biromantic\" />\r\n                          <option value=\"Greyromantic\" label=\"Grayromantic\" />\r\n                          <option value=\"Demiromantic\" label=\"Demiromantic\" />\r\n                          <option\r\n                            value=\"Heteroromantic\"\r\n                            label=\"Heteroromantic\"\r\n                          />\r\n                          <option value=\"Homoromantic\" label=\"Homoromantic\" />\r\n                          <option value=\"Panromantic\" label=\"Panromantic\" />\r\n                          <option value=\"Queer\" label=\"Queer\" />\r\n                          <option value=\"WTFRomantic\" label=\"WTFRomantic\" />\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Sexual Orientation</span>\r\n                        </div>\r\n\r\n                        <select\r\n                          name=\"sexual_orientation\"\r\n                          value={values.sexual_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Allosexual\" label=\"Allosexual\" />\r\n                          <option value=\"Asexual\" label=\"Asexual\" />\r\n                          <option value=\"Acespec\" label=\"Acespec\" />\r\n                          <option value=\"Demisexual\" label=\"Demisexual\" />\r\n                          <option value=\"Bisexual\" label=\"Bisexual\" />\r\n                          <option value=\"Gay\" label=\"Gay\" />\r\n                          <option value=\"Gray-asexual\" label=\"Graysexual\" />\r\n                          <option value=\"Heterosexual\" label=\"Heterosexual\" />\r\n                          <option value=\"Pansexual\" label=\"Pansexual\" />\r\n                          <option value=\"Queer\" label=\"Queer\" />\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <div className=\"group\">\r\n                          <span>Genre</span>\r\n                        </div>\r\n                        <input\r\n                          id=\"genre\"\r\n                          placeholder={character.genre}\r\n                          type=\"text\"\r\n                          value={values.genre}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <div className=\"group\">\r\n                        <p>\r\n                          <span>Relationships</span>\r\n                        </p>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"relationships\"\r\n                        placeholder={character.relationships}\r\n                        type=\"text\"\r\n                        value={values.relationships}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <div className=\"group\">\r\n                        <p>\r\n                          <span>Notes & Warnings</span>\r\n                        </p>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder={character.rep_noteswarnings}\r\n                        type=\"text\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <div className=\"group\">\r\n                        <p>\r\n                          <span>Cover</span>\r\n                        </p>\r\n                      </div>\r\n                      <input\r\n                        id=\"cover\"\r\n                        placeholder={character.cover}\r\n                        type=\"text\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"buttons-add\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Add Character to Database\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-review\\suggested-review.js",["319","320","321","322","323","324","325","326"],"import React from \"react\";\r\nimport \"./suggested-review.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport {\r\n  fazerRequisicaoComBody,\r\n  fetchWithToken,\r\n  fetchWithTokenNoBody,\r\n} from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedReview() {\r\n  const [review, setReview] = React.useState({});\r\n  const [token, setToken] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/suggest/reviews/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setReview(resJson.data.review[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Suggested Review</h3>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              review_for: review.review_for,\r\n              reviewer: review.reviewer,\r\n              ownvoice_for: review.ownvoice_for,\r\n              link: review.link,\r\n              character_id: review.character_id,\r\n            }}\r\n            onSubmit={(values) => {\r\n              values.character_id = review.character_id;\r\n              console.log(JSON.stringify(values, null, 2));\r\n              console.log(review.character_id);\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/reviews`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/suggest/reviews/${review.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"ReviewInfo\">\r\n                    <div className=\"container\">\r\n                      <div className=\"content-hundred\">\r\n                        <div className=\"block\">\r\n                          <label>\r\n                            Review for\r\n                            <input\r\n                              id=\"review_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Review for\"\r\n                              value={values.review_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n\r\n                          <label>\r\n                            Link\r\n                            <input\r\n                              id=\"link\"\r\n                              type=\"text\"\r\n                              placeholder=\"Link\"\r\n                              value={values.link}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <span className=\"block\">\r\n                          <label>\r\n                            Reviewer\r\n                            <input\r\n                              id=\"reviewer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Reviewer\"\r\n                              value={values.reviewer}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            Ownvoices for\r\n                            <input\r\n                              id=\"ownvoices_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Ownvoice for\"\r\n                              value={values.ownvoice_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    onClick={() => {\r\n                      fetchWithTokenNoBody(\r\n                        `https://aroacedb-back.herokuapp.com/suggest/reviews/${review.id}`,\r\n                        \"DELETE\",\r\n                        token\r\n                      )\r\n                        .then((res) => res.json())\r\n                        .then((resJson) => {\r\n                          console.log(resJson);\r\n                          history.push(\"/success\");\r\n                        });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  <button type=\"submit\" className=\"review-right\">\r\n                    Add to Database\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-review\\update-review.js",["327","328","329","330","331","332","333"],"import React from \"react\";\r\nimport \"./update-review.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function UpdateReview() {\r\n  const [review, setReview] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n    fetch(`https://aroacedb-back.herokuapp.com/reviews/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setReview(resJson.data.review[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Update Review</h3>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              review_for: review.review_for,\r\n              reviewer: review.reviewer,\r\n              ownvoice_for: review.ownvoice_for,\r\n              link: review.link,\r\n              character_id: review.character_id,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/reviews/${review.id}`,\r\n                \"PUT\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"ReviewInfo\">\r\n                    <div className=\"container\">\r\n                      <div className=\"content-hundred\">\r\n                        <div className=\"block\">\r\n                          <label>\r\n                            Review for\r\n                            <input\r\n                              id=\"review_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Review for\"\r\n                              value={values.review_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n\r\n                          <label>\r\n                            Link\r\n                            <input\r\n                              id=\"link\"\r\n                              type=\"text\"\r\n                              placeholder=\"Link\"\r\n                              value={values.link}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <span className=\"block\">\r\n                          <label>\r\n                            Reviewer\r\n                            <input\r\n                              id=\"reviewer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Reviewer\"\r\n                              value={values.reviewer}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            Ownvoices for\r\n                            <input\r\n                              id=\"ownvoices_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Ownvoice for\"\r\n                              value={values.ownvoice_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"review-right\">\r\n                    Update\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-story\\suggested-story.js",["334","335","336","337","338","339","340","341"],"import React from \"react\";\r\nimport \"./suggested-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport {\r\n  fazerRequisicaoComBody,\r\n  fetchWithToken,\r\n  fetchWithTokenNoBody,\r\n} from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedStory() {\r\n  const [story, setStory] = React.useState({});\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [cover, setCover] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/suggest/stories/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson.data.story[0]);\r\n        setStory(resJson.data.story[0]);\r\n        console.log(resJson.data.story[0].cover);\r\n        setCover(resJson.data.story[0].cover);\r\n        let character_id = resJson.data.story[0].character_id;\r\n        fetch(`https://aroacedb-back.herokuapp.com/characters/${character_id}`)\r\n          .then((res) => res.json())\r\n          .then((resJson) => {\r\n            console.log(resJson);\r\n            setName(resJson.data.character[0].character_name);\r\n          });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Suggested Story</h3>\r\n          <h4>Character: {name}</h4>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              story_title: story.story_title,\r\n              series_or_anthology: story.series_or_anthology,\r\n              genre: story.genre,\r\n              story_length: story.story_length,\r\n              type_of_rep: story.type_of_rep,\r\n              character_importance: story.character_importance,\r\n              rep_noteswarnings: story.rep_noteswarnings,\r\n              other_noteswarnings: story.other_noteswarnings,\r\n              character_id: story.character_id,\r\n              cover: story.cover,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/stories`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/suggest/stories/${story.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <label>Story title</label>\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <label>Story length</label>\r\n                        <span>\r\n                          <select\r\n                            name=\"story_length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Short story\" label=\"Short story\" />\r\n                            <option value=\"Novella\" label=\"Novella\" />\r\n                            <option\r\n                              value=\"Novel (short)\"\r\n                              label=\"Novel (short)\"\r\n                            />\r\n                            <option value=\"Novel (long)\" label=\"Novel (long)\" />\r\n                            <option value=\"Anthology\" label=\"Anthology\" />\r\n                            <option value=\"Webseries\" label=\"Webseries\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Character importance</label>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <label>Series title</label>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <label>Genres</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Type of Rep</label>\r\n                        <span className=\"to-capitalize\">\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <span>Rep Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Other Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Cover</span>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <img src={values.cover} alt=\"cover\" />\r\n                    <div className=\"buttons\">\r\n                      <button\r\n                        onClick={() => {\r\n                          fetchWithTokenNoBody(\r\n                            `https://aroacedb-back.herokuapp.com/suggest/stories/${story.id}`,\r\n                            \"DELETE\",\r\n                            token\r\n                          )\r\n                            .then((res) => res.json())\r\n                            .then((resJson) => {\r\n                              console.log(resJson);\r\n                              history.push(\"/success\");\r\n                            });\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                      <button\r\n                        type=\"submit\"\r\n                        disabled={isSubmitting}\r\n                        className=\"submit\"\r\n                      >\r\n                        Add Story to Database\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success-st-sc\\success.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\sc-suggested-stories\\suggested-stories.js",["342"],"import \"./suggested-stories.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableStory from \"../../components/table-story/table\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport TableSCStory from \"../../components/table-sc-story/table\";\r\n\r\nexport default function SuggestedStoriesSC() {\r\n  const [stories, setStories] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/suggest/sc/stories\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        const data = resJson.data.paginated_stories;\r\n        console.log(data);\r\n        setStories(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"SuggestedCharacters\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggested-container\">\r\n        <div className=\"title\">\r\n          <h2>Suggested Stories</h2>\r\n        </div>\r\n        <div className=\"table-container\">\r\n          <TableSCStory content={stories} type=\"suggest\" id=\"story\" />\r\n        </div>\r\n\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-story\\add-story.js",["343","344","345"],"import React from \"react\";\r\nimport \"./add-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default function AddStory() {\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n\r\n    fetch(`https://aroacedb-back.herokuapp.com/characters/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setName(resJson.data.character[0].character_name);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Add Story</h3>\r\n          <h4>Character: {name}</h4>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              story_title: \"\",\r\n              series_or_anthology: \"\",\r\n              genre: \"\",\r\n              story_length: \"\",\r\n              type_of_rep: \"\",\r\n              character_importance: \"\",\r\n              rep_noteswarnings: \"\",\r\n              other_noteswarnings: \"\",\r\n              character_id: params.id,\r\n              cover: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/stories`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(`/character/${params.id}`);\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-story-title\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-story-title\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">Story or book title</div>\r\n                          </ReactTooltip>\r\n                          <label>Story title</label>\r\n                        </div>\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-story-length\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-story-length\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              {\" \"}\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Short story:</strong>The character is\r\n                                  at the heart of the story’s central storyline\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Novella:</strong>The character plays\r\n                                  an important role in the story and is\r\n                                  frequently on page\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Novel (short):</strong>The character\r\n                                  plays a minor role in the story\r\n                                </li>\r\n\r\n                                <li>\r\n                                  <strong>Novel (long):</strong>More than 80,000\r\n                                  words\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Anthology:</strong>Short story is part\r\n                                  of an anthology\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Webseries:</strong>\r\n                                  Published in several installments on the\r\n                                  internet (blog, Wattpad, etc.)\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Story length</label>\r\n                        </div>\r\n                        <span>\r\n                          <select\r\n                            name=\"story_length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Short story\" label=\"Short story\" />\r\n                            <option value=\"Novella\" label=\"Novella\" />\r\n                            <option\r\n                              value=\"Novel (short)\"\r\n                              label=\"Novel (short)\"\r\n                            />\r\n                            <option value=\"Novel (long)\" label=\"Novel (long)\" />\r\n                            <option value=\"Anthology\" label=\"Anthology\" />\r\n                            <option value=\"Webseries\" label=\"Webseries\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-character-importance\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-character-importance\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Lead: </strong>The character is at the\r\n                                  heart <p>of the story’s central storyline</p>\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Main: </strong>The character plays an\r\n                                  important{\" \"}\r\n                                  <p>\r\n                                    role in the story and is frequently on page\r\n                                  </p>\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Lead: </strong>The character plays a\r\n                                  <p> minor role in the story</p>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Character importance</label>\r\n                        </div>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-series\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-series\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <p>\r\n                                Name of the series (if applicable). Short\r\n                                stories in an anthology\r\n                              </p>{\" \"}\r\n                              <p>can list the anthology name here.</p>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Series title</label>\r\n                        </div>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-genres\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-genres\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              {\" \"}\r\n                              <p>Story's literary genre. </p>{\" \"}\r\n                              <p>\r\n                                List in alphabetical order, i.e. \"Contemporary,\r\n                                Romance, Young Adult\".\r\n                              </p>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Genres</label>\r\n                        </div>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-type\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-type\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Word of God: </strong>The character’s\r\n                                  sexuality{\" \"}\r\n                                  <p>\r\n                                    is not explicit on page, but the author has\r\n                                    confirmed it.\r\n                                  </p>\r\n                                </li>\r\n                                <li>\r\n                                  <strong>On page:</strong> The character’s\r\n                                  sexuality is explicitly\r\n                                  <p>\r\n                                    demonstrated within the text. It should be\r\n                                    showed or\r\n                                  </p>\r\n                                  <p>\r\n                                    discussed to an extent that makes it clear\r\n                                    to the readers.\r\n                                  </p>\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Word used: </strong>The identity is\r\n                                  stated using the{\" \"}\r\n                                  <p> actual word (usually also On Page)</p>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Type of Rep</label>\r\n                        </div>\r\n                        <span className=\"to-capitalize\">\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-repnoteswarnings\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-repnoteswarnings\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">\r\n                            Any noteworthy information about the representation,\r\n                            <p>\r\n                              {\" \"}\r\n                              whether it is tropes (exile or dead ace, allo\r\n                              saviour, etc.)\r\n                            </p>{\" \"}\r\n                            or facets of it (sex repulsed/averse/positive, touch\r\n                            averse, etc.).\r\n                          </div>\r\n                        </ReactTooltip>\r\n                        <label>Rep Notes & Warnings</label>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-othernoteswarnings\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-othernoteswarnings\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">\r\n                            <p>\r\n                              Any noteworthy information about the\r\n                              representation,\r\n                            </p>\r\n                            <p>whether it is tropes (exile or dead ace, allo</p>\r\n                            <p>\r\n                              saviour, etc.) or facets of it (sex\r\n                              repulsed/averse/positive, touch averse, etc.)\r\n                            </p>\r\n                          </div>\r\n                        </ReactTooltip>\r\n                        <label>Other Notes & Warnings</label>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-cover\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-cover\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">URL to cover image.</div>\r\n                        </ReactTooltip>\r\n                        <label>Cover</label>\r\n                      </div>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Add Story to Database\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-review\\add-review.js",["346","347","348","349","350","351"],"import React from \"react\";\r\nimport \"./add-review.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function AddReview() {\r\n  const { params } = useRouteMatch();\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Add a Review</h3>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              review_for: \"\",\r\n              reviewer: \"\",\r\n              ownvoice_for: \"\",\r\n              link: \"\",\r\n              character_id: params.id,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/reviews`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"ReviewInfo\">\r\n                    <div className=\"container\">\r\n                      <div className=\"content-hundred\">\r\n                        <div className=\"block\">\r\n                          <label>\r\n                            Review for\r\n                            <input\r\n                              id=\"review_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Review for\"\r\n                              value={values.review_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n\r\n                          <label>\r\n                            Link\r\n                            <input\r\n                              id=\"link\"\r\n                              type=\"text\"\r\n                              placeholder=\"Link\"\r\n                              value={values.link}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <span className=\"block\">\r\n                          <label>\r\n                            Reviewer\r\n                            <input\r\n                              id=\"reviewer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Reviewer\"\r\n                              value={values.reviewer}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            Ownvoices for\r\n                            <input\r\n                              id=\"ownvoices_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Ownvoice for\"\r\n                              value={values.ownvoice_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"review-right\">\r\n                    Add Review to Database\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\about-team\\about.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\results\\results.js",["352","353","354"],"import React from \"react\";\r\nimport \"./results.css\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport SingleCharacter from \"../../components/single-character/single-character\";\r\nimport { ReactComponent as ButtonIcon } from \"../../assets/chevron-right-solid.svg\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport { useHistory, useRouteMatch, useParams } from \"react-router-dom\";\r\nimport SearchBar from \"../../components/search-bar/search-bar\";\r\n\r\nfunction Results({ location }) {\r\n  const [search, setSearch] = React.useState(\"\");\r\n  const [changed, setChanged] = React.useState(0);\r\n  const [filteredResults, setFilteredResults] = React.useState([]);\r\n  const [advancedSearch, setAdvancedSearch] = React.useState(false);\r\n  const [count, setCount] = React.useState(0);\r\n\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    return history.listen((location) => {\r\n      console.log(`You changed the page to: ${location.pathname}`);\r\n      let count = changed + 1;\r\n      setChanged(count);\r\n      console.log(changed);\r\n    });\r\n  }, [history]);\r\n\r\n  React.useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const url_params = [];\r\n    for (const key of params.entries()) {\r\n      if (url_params.length > 0) {\r\n        url_params.push(\"&\");\r\n        url_params.push(`${key[0]}=${key[1]}`);\r\n      } else {\r\n        url_params.push(`${key[0]}=${key[1]}`);\r\n      }\r\n    }\r\n    const final = url_params.join(\"\");\r\n    console.log(final);\r\n    if (final.includes(\"canonleads\")) {\r\n      console.log(\"fetch canon leads pls\");\r\n      fetch(\"https://aroacedb-back.herokuapp.com/characters/search/canonleads\")\r\n        .then((res) => res.json())\r\n        .then((resJson) => {\r\n          console.log(resJson);\r\n          if (resJson.data) {\r\n            console.log(resJson.data);\r\n            const newResults = resJson.data.character;\r\n            setFilteredResults(newResults);\r\n\r\n            const newCount = resJson.data.length;\r\n            console.log(newCount);\r\n            setCount(newCount);\r\n          }\r\n        });\r\n    } else {\r\n      fetch(`https://aroacedb-back.herokuapp.com/character/infinite?${final}`)\r\n        .then((res) => res.json())\r\n        .then((resJson) => {\r\n          if (resJson.data) {\r\n            console.log(resJson.data);\r\n            const newResults = resJson.data.characters;\r\n            setFilteredResults(newResults);\r\n            const newCount = resJson.data.length;\r\n            console.log(newCount);\r\n            setCount(newCount);\r\n          }\r\n        });\r\n    }\r\n  }, [location.search]);\r\n\r\n  return (\r\n    <div className=\"Results\">\r\n      <Sidebar setFilteredResults={setFilteredResults} />\r\n      <MobileHeader />\r\n\r\n      <div className=\"results-container\">\r\n        <div className=\"free-search\">\r\n          <form\r\n            onSubmit={(event) => {\r\n              console.log(search);\r\n\r\n              event.preventDefault();\r\n              history.push(`/results?search=${search}`);\r\n              fetch(\r\n                `https://aroacedb-back.herokuapp.com/character/infinite?search=${search}`\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(search);\r\n                  console.log(resJson);\r\n\r\n                  if (resJson.data) {\r\n                    const newResults = resJson.data.characters;\r\n                    setFilteredResults(newResults);\r\n                    console.log(filteredResults);\r\n                  }\r\n                });\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter your keywords here to search\"\r\n              onChange={(event) => {\r\n                setSearch(event.target.value);\r\n              }}\r\n            ></input>\r\n            <button>\r\n              <ButtonIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"button-container\">\r\n          <button\r\n            onClick={() => {\r\n              setAdvancedSearch(!advancedSearch);\r\n            }}\r\n          >\r\n            Advanced Search\r\n          </button>\r\n        </div>\r\n        {advancedSearch ? <SearchBar /> : \"\"}\r\n\r\n        <div className=\"count\">The database found {count} entries.</div>\r\n        {filteredResults ? (\r\n          <div className=\"results\">\r\n            {filteredResults.map((i) => {\r\n              return (\r\n                <div>\r\n                  <SingleCharacter character={i} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\sc-suggested-story\\suggested-story.js",["355","356","357","358"],"import React from \"react\";\r\nimport \"./suggested-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithToken, fetchWithTokenNoBody } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SCSuggestedStory() {\r\n  const [story, setStory] = React.useState({});\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [name, setName] = React.useState(\"\");\r\n  const [cover, setCover] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/suggest/sc/stories/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson.data.story[0]);\r\n\r\n        setStory(resJson.data.story[0]);\r\n        console.log(resJson.data.story[0].cover);\r\n        setCover(resJson.data.story[0].cover);\r\n        let character_id = resJson.data.story[0].character_id;\r\n        fetch(\r\n          `https://aroacedb-back.herokuapp.com/suggest/characters/${character_id}`\r\n        )\r\n          .then((res) => res.json())\r\n          .then((resJson) => {\r\n            console.log(resJson);\r\n            setName(resJson.data.character[0].character_name);\r\n          });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Suggested Story</h3>\r\n          <h4>Character: {name}</h4>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              story_title: story.story_title,\r\n              series_or_anthology: story.series_or_anthology,\r\n              genre: story.genre,\r\n              story_length: story.story_length,\r\n              type_of_rep: story.type_of_rep,\r\n              character_importance: story.character_importance,\r\n              rep_noteswarnings: story.rep_noteswarnings,\r\n              other_noteswarnings: story.other_noteswarnings,\r\n              character_id: story.character_id,\r\n              cover: story.cover,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/stories`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/suggest/sc/stories/${story.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <label>Story title</label>\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <label>Story length</label>\r\n                        <span>\r\n                          <select\r\n                            name=\"story_length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Short story\" label=\"Short story\" />\r\n                            <option value=\"Novella\" label=\"Novella\" />\r\n                            <option\r\n                              value=\"Novel (short)\"\r\n                              label=\"Novel (short)\"\r\n                            />\r\n                            <option value=\"Novel (long)\" label=\"Novel (long)\" />\r\n                            <option value=\"Anthology\" label=\"Anthology\" />\r\n                            <option value=\"Webseries\" label=\"Webseries\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Character importance</label>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <label>Series title</label>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <label>Genres</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Type of Rep</label>\r\n                        <span className=\"to-capitalize\">\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <span>Rep Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Other Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Cover</span>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <img src={values.cover} alt=\"cover\" />\r\n                    <div className=\"buttons\">\r\n                      <button\r\n                        onClick={() => {\r\n                          fetchWithTokenNoBody(\r\n                            `https://aroacedb-back.herokuapp.com/suggest/stories/${story.id}`,\r\n                            \"DELETE\",\r\n                            token\r\n                          )\r\n                            .then((res) => res.json())\r\n                            .then((resJson) => {\r\n                              console.log(resJson);\r\n                              history.push(\"/success\");\r\n                            });\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                          // update story but don't add it to database/\r\n                          fetchWithToken(\r\n                            `https://aroacedb-back.herokuapp.com/suggest/sc/stories/${params.id}`,\r\n                            \"PUT\",\r\n                            values,\r\n                            token\r\n                          )\r\n                            .then((res) => res.json())\r\n                            .then((resJson) => {\r\n                              console.log(resJson);\r\n                              history.push(\"/success\");\r\n                            });\r\n                        }}\r\n                      >\r\n                        Update\r\n                      </button>\r\n                      <button\r\n                        type=\"submit\"\r\n                        disabled={isSubmitting}\r\n                        className=\"submit\"\r\n                      >\r\n                        Add Story to Database\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-story-sc\\suggest-story.js",["359","360"],"import React from \"react\";\r\nimport \"./suggest-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { Formik } from \"formik\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport default function SuggestStorySC() {\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Suggest a Story</h3>\r\n          <Formik\r\n            initialValues={{\r\n              story_title: \"\",\r\n              series_or_anthology: \"\",\r\n              genre: \"\",\r\n              story_length: \"\",\r\n              type_of_rep: \"\",\r\n              character_importance: \"\",\r\n              rep_noteswarnings: \"\",\r\n              other_noteswarnings: \"\",\r\n              cover: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              values.character_id = params.id;\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetch(\"https://aroacedb-back.herokuapp.com/suggest/sc/stories\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n              })\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(`/success-stsc/${params.id}`);\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-story-title\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-story-title\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">Story or book title</div>\r\n                          </ReactTooltip>\r\n                          <label>Story title</label>\r\n                        </div>\r\n\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-story-length\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-story-length\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              {\" \"}\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Short story:</strong>The character is\r\n                                  at the heart of the story’s central storyline\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Novella:</strong>The character plays\r\n                                  an important role in the story and is\r\n                                  frequently on page\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Novel (short):</strong>The character\r\n                                  plays a minor role in the story\r\n                                </li>\r\n\r\n                                <li>\r\n                                  <strong>Novel (long):</strong>More than 80,000\r\n                                  words\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Anthology:</strong>Short story is part\r\n                                  of an anthology\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Webseries:</strong>\r\n                                  Published in several installments on the\r\n                                  internet (blog, Wattpad, etc.)\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Story length</label>\r\n                        </div>\r\n                        <span>\r\n                          <select\r\n                            name=\"story_length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Short story\" label=\"Short story\" />\r\n                            <option value=\"Novella\" label=\"Novella\" />\r\n                            <option\r\n                              value=\"Novel (short)\"\r\n                              label=\"Novel (short)\"\r\n                            />\r\n                            <option value=\"Novel (long)\" label=\"Novel (long)\" />\r\n                            <option value=\"Anthology\" label=\"Anthology\" />\r\n                            <option value=\"Webseries\" label=\"Webseries\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-character-importance\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-character-importance\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Lead:</strong>The character is at the\r\n                                  heart of the story’s central storyline\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Main:</strong>The character plays an\r\n                                  important role in the story and is frequently\r\n                                  on page\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Lead:</strong>The character plays a\r\n                                  minor role in the story\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Character importance</label>\r\n                        </div>\r\n                        <select\r\n                          name=\"importance\"\r\n                          value={values.importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleChange}\r\n                        >\r\n                          <option value=\"\" label=\"Select one\" />\r\n                          <option value=\"Lead\" label=\"Lead\" />\r\n                          <option value=\"Main\" label=\"Main\" />\r\n                          <option value=\"Side\" label=\"Side\" />\r\n                        </select>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-series\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-series\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              Name of the series (if applicable). Short stories\r\n                              in an anthology can list the anthology name here.\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Series title</label>\r\n                        </div>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-genres\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-genres\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">{`Story's literary genre. List in alphabetical order, i.e. \"Contemporary, Romance, Young Adult\".`}</div>\r\n                          </ReactTooltip>\r\n                          <label>Genres</label>\r\n                        </div>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <div className=\"group\">\r\n                          <span\r\n                            className=\"hover\"\r\n                            data-for=\"tooltip-type\"\r\n                            data-tip\r\n                          >\r\n                            ?\r\n                          </span>\r\n                          <ReactTooltip\r\n                            id=\"tooltip-type\"\r\n                            effect=\"solid\"\r\n                            place=\"top\"\r\n                            type=\"dark\"\r\n                          >\r\n                            <div className=\"tooltip\">\r\n                              <ul>\r\n                                <li>\r\n                                  <strong>Word of God:</strong>The character’s\r\n                                  sexuality is not explicit on page, but the\r\n                                  author has confirmed it.\r\n                                </li>\r\n                                <li>\r\n                                  <strong>On page:</strong>The character’s\r\n                                  sexuality is explicitly demonstrated within\r\n                                  the text. It should be showed or discussed to\r\n                                  an extent that makes it clear to the readers.\r\n                                </li>\r\n                                <li>\r\n                                  <strong>Word used:</strong>The identity is\r\n                                  stated using the actual word (usually also On\r\n                                  Page)\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </ReactTooltip>\r\n                          <label>Type of Rep</label>\r\n                        </div>\r\n                        <span className=\"to-capitalize\">\r\n                          <select\r\n                            name=\"type_of_rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleChange}\r\n                          >\r\n                            <option value=\"\" label=\"Select one\" />\r\n                            <option value=\"Word of God\" label=\"Word of God\" />\r\n                            <option value=\"On Page\" label=\"On Page\" />\r\n                            <option value=\"Word Used\" label=\"Word Used\" />\r\n                          </select>\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-repnoteswarnings\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-repnoteswarnings\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">\r\n                            Any noteworthy information about the representation,\r\n                            whether it is tropes (exile or dead ace, allo\r\n                            saviour, etc.) or facets of it (sex\r\n                            repulsed/averse/positive, touch averse, etc.).\r\n                          </div>\r\n                        </ReactTooltip>\r\n                        <label>Rep Notes & Warnings</label>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-othernoteswarnings\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-othernoteswarnings\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">\r\n                            Any noteworthy information about the representation,\r\n                            whether it is tropes (exile or dead ace, allo\r\n                            saviour, etc.) or facets of it (sex\r\n                            repulsed/averse/positive, touch averse, etc.)\r\n                          </div>\r\n                        </ReactTooltip>\r\n                        <label>Other Notes & Warnings</label>\r\n                      </div>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <div className=\"group\">\r\n                        <span\r\n                          className=\"hover\"\r\n                          data-for=\"tooltip-cover\"\r\n                          data-tip\r\n                        >\r\n                          ?\r\n                        </span>\r\n                        <ReactTooltip\r\n                          id=\"tooltip-cover\"\r\n                          effect=\"solid\"\r\n                          place=\"top\"\r\n                          type=\"dark\"\r\n                        >\r\n                          <div className=\"tooltip\">URL to cover image.</div>\r\n                        </ReactTooltip>\r\n                        <label>Cover</label>\r\n                      </div>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Suggest\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\contact\\contact.js",["361"],"import \"./contact.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Globe from \"../../assets/globe.png\";\r\nimport Twitter from \"../../assets/twitter.png\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\nimport { Formik } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Contact() {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"Contact\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"contact-container\">\r\n        <div className=\"contact\">\r\n          <h2>Contact</h2>\r\n          <p>\r\n            Want to provide further information on a character? Ran into a bug\r\n            you want to report? Thought of a cool feature you'd want to see (no\r\n            promise!)? We're always open to suggest and information, so contact\r\n            us!\r\n          </p>\r\n\r\n          <div className=\"social-media\">\r\n            <a href=\"https://twitter.com/AroAceDB\">\r\n              <img src={Twitter} alt=\"twitter\" />\r\n            </a>\r\n          </div>\r\n\r\n          <Formik\r\n            initialValues={{\r\n              name: \"\",\r\n              email: \"\",\r\n              subject: \"\",\r\n              message: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              fetch(\"https://aroacedb-back.herokuapp.com/email\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                  Accept: \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n              })\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n\r\n                  console.log(JSON.stringify(values, null, 2));\r\n                  history.push(\"/success\");\r\n                  // redirect to success page\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const { values, handleChange, handleBlur, handleSubmit } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <label>\r\n                    Name\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Name\"\r\n                      id=\"name\"\r\n                      value={values.name}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                  </label>\r\n                  <label>\r\n                    E-mail\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"E-mail\"\r\n                      id=\"email\"\r\n                      value={values.email}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                  </label>\r\n\r\n                  <label>\r\n                    Subject\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Subject\"\r\n                      id=\"subject\"\r\n                      value={values.subject}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    />\r\n                  </label>\r\n                  <label>\r\n                    Message\r\n                    <textarea\r\n                      placeholder=\"Insert your message here\"\r\n                      id=\"message\"\r\n                      value={values.message}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                    ></textarea>\r\n                  </label>\r\n                  <button type=\"submit\">Submit</button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\utils\\fetch.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\mobile-header\\mobile-header.js",["362"],"import React from \"react\";\r\nimport \"./mobile-header.css\";\r\nimport { ReactComponent as Bars } from \"../../assets/bars-solid.svg\";\r\nimport { ReactComponent as Close } from \"../../assets/times-solid.svg\";\r\n\r\nfunction MobileHeader() {\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [display, setDisplay] = React.useState(\"menu-container none-display\");\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"Mobile\">\r\n      <header>\r\n        <h1>The Aro Ace Database</h1>\r\n        <Bars\r\n          fill=\"white\"\r\n          height=\"30px\"\r\n          width=\"30px\"\r\n          onClick={() => {\r\n            setDisplay(\"menu-container block-display\");\r\n          }}\r\n        />\r\n      </header>\r\n      <div className={display}>\r\n        <Close\r\n          fill=\"white\"\r\n          height=\"30px\"\r\n          width=\"30px\"\r\n          onClick={() => {\r\n            setDisplay(\"menu-container none-display\");\r\n          }}\r\n        />\r\n        <div className=\"links\">\r\n          <a href=\"/\">Home</a>\r\n          {token ? <a href=\"/dashboard\">Dashboard</a> : \"\"}\r\n          <a href=\"/about\">About</a>\r\n          <a href=\"/suggest-character\">Suggest a character</a>\r\n\r\n          {token ? (\r\n            <div className=\"more-links\">\r\n              <a href=\"/all-characters\">All characters</a>\r\n              <a href=\"/suggested-characters\">Suggested characters</a>\r\n              <a href=\"/suggested-stories\">Suggested stories</a>\r\n              <a href=\"/suggested-reviews\">Suggested Reviews</a>\r\n              <a\r\n                href=\"/\"\r\n                onClick={() => {\r\n                  localStorage.removeItem(\"token\");\r\n                }}\r\n              >\r\n                Logout\r\n              </a>\r\n            </div>\r\n          ) : (\r\n            <a href=\"/login\">Login Admin</a>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MobileHeader;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\single-character\\single-character.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\stories\\stories.js",["363","364","365","366"],"import \"./stories.css\";\r\nimport React from \"react\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Stories(props) {\r\n  const { stories, character_id } = props;\r\n  const history = useHistory();\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [characterCheck, setCharacterCheck] = React.useState(\"\");\r\n  const [storyCheck, setStoryCheck] = React.useState(\"\");\r\n  const [reviewCheck, setReviewCheck] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n    fetch(\"https://aroacedb-back.herokuapp.com/permissions\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setCharacterCheck(resJson.data.character.checked);\r\n        setStoryCheck(resJson.data.story.checked);\r\n        setReviewCheck(resJson.data.review.checked);\r\n      });\r\n  }, []);\r\n\r\n  const showButtons = () => {\r\n    if (token) {\r\n      return <a href={`/add-story/${character_id}`}>Add Story</a>;\r\n    } else {\r\n      if (storyCheck) {\r\n        console.log(\"aaaaa\");\r\n        return <a href={`/suggest-story/${character_id}`}>Suggest Story</a>;\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Stories\">\r\n      <h3>Stories</h3>\r\n      {stories.map((story) => {\r\n        return <StoryInfo story={story} />;\r\n      })}\r\n      {showButtons()}\r\n      {/* {token ? (\r\n        <a href={`/add-story/${character_id}`}>Add Story</a>\r\n      ) : (\r\n        <a href={`/suggest-story/${character_id}`}>Suggest Story</a>\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\sidebar\\sidebar.js",["367","368","369"],"import React from \"react\";\r\nimport \"./sidebar.css\";\r\nimport { ReactComponent as HomeIcon } from \"../../assets/home-solid.svg\";\r\nimport { ReactComponent as DatabaseIcon } from \"../../assets/database-solid.svg\";\r\nimport { ReactComponent as FeatherIcon } from \"../../assets/feather-solid.svg\";\r\nimport { ReactComponent as BookmarkIcon } from \"../../assets/bookmark-solid.svg\";\r\nimport { ReactComponent as LoginIcon } from \"../../assets/user-cog-solid.svg\";\r\n\r\nexport default function Sidebar() {\r\n  const [token, setToken] = React.useState(\"\");\r\n\r\n  const [characterCheck, setCharacterCheck] = React.useState(\"\");\r\n  const [storyCheck, setStoryCheck] = React.useState(\"\");\r\n  const [reviewCheck, setReviewCheck] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n\r\n    fetch(\"https://aroacedb-back.herokuapp.com/permissions\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setCharacterCheck(resJson.data.character.checked);\r\n        setStoryCheck(resJson.data.story.checked);\r\n        setReviewCheck(resJson.data.review.checked);\r\n      });\r\n  }, [characterCheck]);\r\n  return (\r\n    <div className=\"SidebarAdmin\">\r\n      <div className=\"sidebar-container\">\r\n        <div className=\"icons\"></div>\r\n        <div className=\"sidebar-content\"></div>\r\n        <div className=\"sidebar-true-content\">\r\n          <div className=\"top\">\r\n            <div className=\"title-container\">\r\n              <h1>The Aroace Database</h1>\r\n            </div>\r\n            <div className=\"link-container\">\r\n              <a href=\"/\">\r\n                <HomeIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>Home</span>\r\n              </a>\r\n            </div>\r\n            {token ? (\r\n              <div className=\"link-container\">\r\n                <a href=\"/dashboard\">\r\n                  <BookmarkIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                  <span>Dashboard</span>\r\n                </a>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"link-container\">\r\n              <a href=\"/about\">\r\n                <DatabaseIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>About the database</span>\r\n              </a>\r\n            </div>\r\n            <div className=\"link-container\">\r\n              <a href=\"/about-the-team\">\r\n                <DatabaseIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>About the team</span>\r\n              </a>\r\n            </div>\r\n            <div className=\"link-container\">\r\n              <a href=\"/all-characters\">\r\n                <DatabaseIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>All characters</span>\r\n              </a>\r\n            </div>\r\n            {characterCheck ? (\r\n              <div className=\"link-container\">\r\n                <a href=\"/suggest-character\">\r\n                  <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                  <span>Suggest a character</span>\r\n                </a>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            <div className=\"link-container\">\r\n              <a href=\"/contact\">\r\n                <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>Contact</span>\r\n              </a>\r\n            </div>\r\n\r\n            {token ? (\r\n              <div className=\"div-container\">\r\n                <div className=\"link-container\">\r\n                  <a href=\"/suggested-characters\">\r\n                    <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                    <span>Suggested characters</span>\r\n                  </a>\r\n                </div>\r\n\r\n                <div className=\"link-container\">\r\n                  <a href=\"/suggested-stories\">\r\n                    <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                    <span>Suggested stories</span>\r\n                  </a>\r\n                </div>\r\n\r\n                <div className=\"link-container\">\r\n                  <a href=\"/sc-suggested-stories\">\r\n                    <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                    <span>SC Suggested stories</span>\r\n                  </a>\r\n                </div>\r\n\r\n                <div className=\"link-container\">\r\n                  <a href=\"/suggested-reviews\">\r\n                    <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                    <span>Suggested reviews</span>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          {token ? (\r\n            <div className=\"link-container\">\r\n              <a\r\n                href=\"/\"\r\n                onClick={() => {\r\n                  localStorage.removeItem(\"token\");\r\n                }}\r\n              >\r\n                <LoginIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>Logout</span>\r\n              </a>\r\n            </div>\r\n          ) : (\r\n            <div className=\"link-container\">\r\n              <a href=\"/login\">\r\n                <LoginIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>Admin Login</span>\r\n              </a>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\character-info\\character-info.js",["370"],"import \"./character-info.css\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchWithTokenNoBody } from \"../../utils/fetch\";\r\n\r\nexport default function CharacterInfo(props) {\r\n  const { character } = props;\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"CharacterInfo\">\r\n      <h2>{character.character_name}</h2>\r\n      <div className=\"line\">\r\n        <div className=\"chunk\">\r\n          <span>Author</span>\r\n          {character.author}\r\n        </div>\r\n        <div className=\"chunk\">\r\n          <span>Gender</span> {character.gender}\r\n        </div>\r\n        <div className=\"chunk\">\r\n          <span>Pairing</span>\r\n          {character.pairing_qpp_or_romantic == null\r\n            ? \"Not informed/applicable.\"\r\n            : character.pairing_qpp_or_romantic}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"line\">\r\n        <div className=\"chunk\">\r\n          <span>Series</span>{\" \"}\r\n          {character.main_storyseries == null\r\n            ? \"Not informed or not applicable.\"\r\n            : character.main_storyseries}\r\n        </div>\r\n        <div className=\"chunk\">\r\n          <span>Type of Rep</span> {character.type_of_rep}\r\n        </div>\r\n\r\n        <div className=\"chunk\">\r\n          <span>Importance</span> {character.importance}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"line\">\r\n        <div className=\"chunk\">\r\n          <span>Romantic orientation</span>{\" \"}\r\n          {character.romantic_orientation == null\r\n            ? \"Not informed.\"\r\n            : character.romantic_orientation}\r\n        </div>\r\n        <div className=\"chunk\">\r\n          <span>Sexual Orientation</span>{\" \"}\r\n          {character.sexual_orientation == null\r\n            ? \"Not informed.\"\r\n            : character.sexual_orientation}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"line\">\r\n        <div className=\"chunk\">\r\n          <span>Genre</span> {character.genre}\r\n        </div>\r\n      </div>\r\n\r\n      <div clasName=\"square\">\r\n        <p>\r\n          <span>Relationships</span>\r\n          {character.relationships == null\r\n            ? \"Not informed.\"\r\n            : character.relationships}\r\n        </p>\r\n      </div>\r\n\r\n      <div clasName=\"square\">\r\n        <p>\r\n          <span>Notes & Warnings</span>\r\n          {character.rep_noteswarnings == null\r\n            ? \"No warnings.\"\r\n            : character.rep_noteswarnings}\r\n        </p>\r\n      </div>\r\n      {token ? (\r\n        <div className=\"buttons-character\">\r\n          <button\r\n            onClick={() => {\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/characters/${character.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/stories/character/${character.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/reviews/character/${character.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              history.push(\"/update-character/\" + character.id);\r\n            }}\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\reviews\\reviews.js",["371","372","373"],"import \"./reviews.css\";\r\nimport React from \"react\";\r\nimport ReviewInfo from \"../../components/review-info/review-info\";\r\n\r\nexport default function Reviews(props) {\r\n  const { reviews, character_id } = props;\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [characterCheck, setCharacterCheck] = React.useState(\"\");\r\n  const [storyCheck, setStoryCheck] = React.useState(\"\");\r\n  const [reviewCheck, setReviewCheck] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n\r\n    fetch(\"https://aroacedb-back.herokuapp.com/permissions\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setCharacterCheck(resJson.data.character.checked);\r\n        setStoryCheck(resJson.data.story.checked);\r\n        setReviewCheck(resJson.data.review.checked);\r\n      });\r\n  });\r\n\r\n  const showButtons = () => {\r\n    if (token) {\r\n      return <a href={`/add-review/${character_id}`}>Add Review</a>;\r\n    } else {\r\n      if (reviewCheck) {\r\n        return <a href={`/suggest-review/${character_id}`}>Suggest Review</a>;\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Reviews\">\r\n      <h3>Reviews</h3>\r\n      {reviews.length !== 0\r\n        ? reviews.map((review) => {\r\n            return <ReviewInfo review={review} />;\r\n          })\r\n        : \"No reviews available.\"}\r\n\r\n      {showButtons()}\r\n      {/* {token ? (\r\n        <a href={`/add-review/${character_id}`}>Add Review</a>\r\n      ) : (\r\n        <a href={`/suggest-review/${character_id}`}>Suggest Review</a>\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-character\\table.js",["374","375","376"],"import RowCharacter from \"../row-character/row\";\r\nimport Row from \"../row-review/row\";\r\nimport RowReview from \"../row-review/row\";\r\nimport RowStory from \"../row-story/row\";\r\nimport \"./table.css\";\r\n\r\nfunction TableCharacter(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        {id === \"character\" ? (\r\n          <tr>\r\n            <th>Character Name</th>\r\n            <th>Genre</th>\r\n            <th>Importance</th>\r\n            <th>Gender</th>\r\n            <th>Pairing</th>\r\n            <th>Series</th>\r\n            <th>Relationships</th>\r\n            <th>Romantic</th>\r\n            <th>Sexuality</th>\r\n            <th>More</th>\r\n          </tr>\r\n        ) : id === \"story\" ? (\r\n          <tr>\r\n            <th>Story Title</th>\r\n            <th>Author</th>\r\n          </tr>\r\n        ) : (\r\n          <tr>\r\n            <th>Review for</th>\r\n            <th>Reviewer</th>\r\n          </tr>\r\n        )}\r\n      </thead>\r\n\r\n      <tbody>\r\n        {content.map((c) => {\r\n          return <RowCharacter content={c} type={type} id={id} />;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TableCharacter;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\pagination\\pagination.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\story-info\\story-info.js",["377"],"import \"./story-info.css\";\r\nimport React from \"react\";\r\nimport { fetchWithTokenNoBody } from \"../../utils/fetch\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function StoryInfo(props) {\r\n  const { story } = props;\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"StoryInfo\">\r\n      {story.cover ? (\r\n        <img src={story.cover} alt=\"cover\" />\r\n      ) : (\r\n        <img\r\n          src=\"https://www.globaluniversityalliance.org/wp-content/uploads/2017/10/No-Cover-Image-01.png\"\r\n          alt=\"cover\"\r\n        />\r\n      )}\r\n\r\n      <div className=\"story-container\">\r\n        <div className=\"line\">\r\n          <h4>{story.story_title}</h4>\r\n          <span>\r\n            <span>{story.story_length}</span>\r\n          </span>\r\n        </div>\r\n        <div className=\"line\">\r\n          {story.series_or_anthology === null ? (\r\n            \"No series/anthology\"\r\n          ) : (\r\n            <span>\r\n              in the <span>{story.series_or_anthology} </span>series\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"line\">\r\n          <span>\r\n            <span>{story.genre}</span>\r\n          </span>\r\n          <span>\r\n            <span className=\"to-capitalize\">{story.type_of_rep} Rep</span>\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"line\">\r\n          <span>\r\n            {story.character_importance === null ? (\r\n              \"No info on character importance\"\r\n            ) : (\r\n              <span>{story.character_importance} Character</span>\r\n            )}\r\n          </span>\r\n        </div>\r\n        <p>\r\n          <span>Rep Notes & Warnings</span>\r\n          {story.rep_noteswarnings === null\r\n            ? \"No rep notes or warnings.\"\r\n            : story.rep_noteswarnings}\r\n        </p>\r\n        <p>\r\n          <span>Other Notes & Warnings</span>\r\n          {story.other_noteswarnings === null\r\n            ? \"No other notes or warnings.\"\r\n            : story.other_noteswarnings}\r\n        </p>\r\n        {token ? (\r\n          <div className=\"buttons-story\">\r\n            <button\r\n              onClick={() => {\r\n                fetchWithTokenNoBody(\r\n                  `https://aroacedb-back.herokuapp.com/stories/${story.id}`,\r\n                  \"DELETE\",\r\n                  token\r\n                )\r\n                  .then((res) => res.json())\r\n                  .then((resJson) => {\r\n                    console.log(resJson);\r\n                    window.location.reload();\r\n                  });\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                history.push(\"/update-story/\" + story.id);\r\n              }}\r\n            >\r\n              Update\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\stats\\stats.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\recent-suggested\\recent-suggested.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-sc-story\\table.js",["378","379","380","381"],"import RowCharacter from \"../row-review/row\";\r\nimport Row from \"../row-review/row\";\r\nimport RowReview from \"../row-review/row\";\r\nimport RowStory from \"../row-story/row\";\r\nimport RowSCStory from \"../row-sc-story/row\";\r\nimport \"./table.css\";\r\n\r\nfunction TableSCStory(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        {id === \"character\" ? (\r\n          <tr>\r\n            <th>Character Name</th>\r\n            <th>Author</th>\r\n            <th>Importance</th>\r\n            <th>Romantic Orientation</th>\r\n            <th>Sexual Orientation</th>\r\n            <th>More</th>\r\n          </tr>\r\n        ) : id === \"story\" ? (\r\n          <tr>\r\n            <th>Story Title</th>\r\n            <th>Author</th>\r\n          </tr>\r\n        ) : (\r\n          <tr>\r\n            <th>Review for</th>\r\n            <th>Reviewer</th>\r\n          </tr>\r\n        )}\r\n      </thead>\r\n\r\n      <tbody>\r\n        {content.map((c) => {\r\n          return <RowSCStory content={c} type={type} id={id} />;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TableSCStory;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-story\\table.js",["382","383","384"],"import RowCharacter from \"../row-review/row\";\r\nimport Row from \"../row-review/row\";\r\nimport RowReview from \"../row-review/row\";\r\nimport RowStory from \"../row-story/row\";\r\nimport \"./table.css\";\r\n\r\nfunction TableStory(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        {id === \"character\" ? (\r\n          <tr>\r\n            <th>Character Name</th>\r\n            <th>Author</th>\r\n            <th>Importance</th>\r\n            <th>Romantic Orientation</th>\r\n            <th>Sexual Orientation</th>\r\n            <th>More</th>\r\n          </tr>\r\n        ) : id === \"story\" ? (\r\n          <tr>\r\n            <th>Story Title</th>\r\n            <th>Author</th>\r\n          </tr>\r\n        ) : (\r\n          <tr>\r\n            <th>Review for</th>\r\n            <th>Reviewer</th>\r\n          </tr>\r\n        )}\r\n      </thead>\r\n\r\n      <tbody>\r\n        {content.map((c) => {\r\n          return <RowStory content={c} type={type} id={id} />;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TableStory;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-review\\table.js",["385","386","387"],"import RowCharacter from \"../row-review/row\";\r\nimport Row from \"../row-review/row\";\r\nimport RowReview from \"../row-review/row\";\r\nimport RowStory from \"../row-story/row\";\r\nimport \"./table.css\";\r\n\r\nfunction TableReview(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        {id === \"character\" ? (\r\n          <tr>\r\n            <th>Character Name</th>\r\n            <th>Author</th>\r\n            <th>Importance</th>\r\n            <th>Romantic Orientation</th>\r\n            <th>Sexual Orientation</th>\r\n            <th>More</th>\r\n          </tr>\r\n        ) : id === \"story\" ? (\r\n          <tr>\r\n            <th>Story Title</th>\r\n            <th>Author</th>\r\n          </tr>\r\n        ) : (\r\n          <tr>\r\n            <th>Review for</th>\r\n            <th>Reviewer</th>\r\n          </tr>\r\n        )}\r\n      </thead>\r\n\r\n      <tbody>\r\n        {content.map((c) => {\r\n          return <RowReview content={c} type={type} id={id} />;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TableReview;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-story\\row.js",["388","389"],"import \"./row.css\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\n\r\nexport default function RowStory(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <tr className=\"tbody\">\r\n      <td>{content.story_title}</td>\r\n      <td>{content.author}</td>\r\n      <td>\r\n        <a href={`/suggested-story/${content.id}`}>\r\n          <img src={ExternalLink} alt=\"profile link\" />\r\n        </a>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\review-info\\review-info.js",["390","391","392"],"import \"./review-info.css\";\r\nimport React, { Component } from \"react\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchWithTokenNoBody } from \"../../utils/fetch\";\r\nimport SuggestReview from \"../../pages/suggest-review/suggest-review\";\r\n\r\nexport default function ReviewInfo(props) {\r\n  const { review } = props;\r\n  const history = useHistory();\r\n  const [token, setToken] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"ReviewInfo\">\r\n      <div className=\"container\">\r\n        <div className=\"content\">\r\n          <h4>{review.review_for}</h4>\r\n          <span>\r\n            by {review.reviewer} | Ownvoices for {review.ownvoice_for}.\r\n          </span>\r\n        </div>\r\n\r\n        <a href={review.link}>\r\n          <img src={ExternalLink} alt=\"link para resenha em site externo\" />\r\n        </a>\r\n      </div>\r\n      {token ? (\r\n        <div className=\"buttons-review\">\r\n          <button\r\n            onClick={() => {\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/reviews/${review.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n\r\n                  window.location.reload();\r\n                });\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              history.push(\"/update-review/\" + review.id);\r\n            }}\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-review\\row.js",["393","394"],"import \"./row.css\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\n\r\nexport default function RowReview(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <tr className=\"tbody\">\r\n      <td>{content.review_for}</td>\r\n      <td>{content.reviewer}</td>\r\n      <td>\r\n        <a href={`/suggested-review/${content.id}`}>\r\n          <img src={ExternalLink} alt=\"profile link\" />\r\n        </a>\r\n      </td>\r\n    </tr>\r\n\r\n    //   ) : (\r\n    //     <tr class=\"tbody\">\r\n    //       <td>{content.review_for}</td>\r\n    //       <td>{content.reviewer}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-review/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </tr>\r\n    //   )}\r\n\r\n    // <tr class=\"tbody\">\r\n    //   {id === \"character\" ? (\r\n    //     <div>\r\n    //   <td>{content.character_name}</td>\r\n    //   <td>{content.author}</td>\r\n    //   <td>{content.importance}</td>\r\n    //   <td>{content.romantic_orientation}</td>\r\n    //   <td>{content.sexual_orientation}</td>\r\n    //   <td>\r\n    //     {type === \"regular\" ? (\r\n    //       <a href={`/character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     ) : (\r\n    //       <a href={`/suggested-character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     )}\r\n    //   </td>\r\n    //     </div>\r\n    //   ) : id === \"story\" ? (\r\n    //     <div>\r\n    //       <td>{content.story_title}</td>\r\n    //       <td>{content.author}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-story/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   ) : (\r\n    //     <div>\r\n    //       <td>{content.review_for}</td>\r\n    //       <td>{content.reviewer}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-review/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   )}\r\n    // </tr>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-character\\row.js",["395"],"import \"./row.css\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\n\r\nexport default function RowCharacter(props) {\r\n  const { content, type, id } = props;\r\n  return (\r\n    <tr className=\"tbody\">\r\n      <td>{content.character_name}</td>\r\n      <td>{content.genre}</td>\r\n      <td>{content.importance}</td>\r\n      <td>{content.gender}</td>\r\n      <td>{content.pairing_qpp_or_romantic}</td>\r\n      <td>{content.main_storyseries}</td>\r\n      <td>{content.relationships}</td>\r\n      <td>{content.romantic_orientation}</td>\r\n      <td>{content.sexual_orientation}</td>\r\n      <td>\r\n        {type === \"regular\" ? (\r\n          <a href={`/character/${content.id}`}>\r\n            <img src={ExternalLink} alt=\"profile link\" />\r\n          </a>\r\n        ) : (\r\n          <a href={`/suggested-character/${content.id}`}>\r\n            <img src={ExternalLink} alt=\"profile link\" />\r\n          </a>\r\n        )}\r\n      </td>\r\n    </tr>\r\n\r\n    // <tr class=\"tbody\">\r\n    //   {id === \"character\" ? (\r\n    //     <div>\r\n    //   <td>{content.character_name}</td>\r\n    //   <td>{content.author}</td>\r\n    //   <td>{content.importance}</td>\r\n    //   <td>{content.romantic_orientation}</td>\r\n    //   <td>{content.sexual_orientation}</td>\r\n    //   <td>\r\n    //     {type === \"regular\" ? (\r\n    //       <a href={`/character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     ) : (\r\n    //       <a href={`/suggested-character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     )}\r\n    //   </td>\r\n    //     </div>\r\n    //   ) : id === \"story\" ? (\r\n    //     <div>\r\n    //       <td>{content.story_title}</td>\r\n    //       <td>{content.author}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-story/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   ) : (\r\n    //     <div>\r\n    //       <td>{content.review_for}</td>\r\n    //       <td>{content.reviewer}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-review/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   )}\r\n    // </tr>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-sc-story\\row.js",["396","397"],"import \"./row.css\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\n\r\nexport default function RowSCStory(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <tr className=\"tbody\">\r\n      <td>{content.story_title}</td>\r\n      <td>{content.author}</td>\r\n      <td>\r\n        <a href={`/sc-suggested-story/${content.id}`}>\r\n          <img src={ExternalLink} alt=\"profile link\" />\r\n        </a>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\search-bar\\search-bar.js",["398","399","400","401","402","403"],"import React from \"react\";\r\nimport \"./search-bar.css\";\r\nimport { ReactComponent as ButtonIcon } from \"../../assets/chevron-right-solid.svg\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport { fetchNoTokenNobody, fetchWithBody } from \"../../utils/fetch\";\r\n\r\nfunction SearchBar(props) {\r\n  const { page, params } = props;\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"SearchBar\">\r\n      <Formik\r\n        initialValues={{\r\n          character_name: \"\",\r\n          author: \"\",\r\n          gender: \"\",\r\n          importance: \"\",\r\n          pairing_qpp_or_romantic: \"\",\r\n          main_storyseries: \"\",\r\n          type_of_rep: \"\",\r\n          romantic_orientation: \"\",\r\n          sexual_orientation: \"\",\r\n          genre: \"\",\r\n          relationships: \"\",\r\n          story_length: \"\",\r\n        }}\r\n        onSubmit={(values) => {\r\n          let params_search = [];\r\n          for (let key in values) {\r\n            if (values[key] !== \"\") {\r\n              console.log(key + \" is not blank.\");\r\n              if (params_search.length > 0) {\r\n                params_search.push(\"&\");\r\n                params_search.push(`${key}=${values[key]}`);\r\n              } else {\r\n                params_search.push(`${key}=${values[key]}`);\r\n              }\r\n            }\r\n          }\r\n          let final = params_search.join(\"\");\r\n\r\n          let url = `https://aroacedb-back.herokuapp.com/character/infinite?${final}`;\r\n          console.log(url);\r\n          history.push(`/results?${final}`);\r\n        }}\r\n      >\r\n        {(props) => {\r\n          const { values, handleChange, handleBlur, handleSubmit } = props;\r\n          return (\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"fields\">\r\n                <label>\r\n                  <span>Character name</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Character name\"\r\n                    name=\"character_name\"\r\n                    value={values.character_name}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  <span>Importance</span>\r\n                  <select\r\n                    name=\"importance\"\r\n                    value={values.importance}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  >\r\n                    <option value=\"\" label=\"Select one\" />\r\n                    <option value=\"Lead\" label=\"Lead\" />\r\n                    <option value=\"Main\" label=\"Main\" />\r\n                    <option value=\"Side\" label=\"Side\" />\r\n                  </select>\r\n                </label>\r\n                <label>\r\n                  <span>Author</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Author\"\r\n                    name=\"author\"\r\n                    value={values.author}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  <span>Gender</span>\r\n                  <select\r\n                    name=\"gender\"\r\n                    value={values.gender}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  >\r\n                    <option value=\"\" label=\"Select gender\" />\r\n                    <option value=\"M\" label=\"M\" />\r\n                    <option value=\"F\" label=\"F\" />\r\n                    <option value=\"Enby\" label=\"Enby\" />\r\n                  </select>\r\n                </label>\r\n                <label>\r\n                  <span>Pairing</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Pairing\"\r\n                    name=\"pairing_qpp_or_romantic\"\r\n                    value={values.pairing_qpp_or_romantic}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  <span>Series</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Series\"\r\n                    name=\"main_storyseries\"\r\n                    value={values.main_storyseries}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  <span>Type of Rep</span>\r\n                  <select\r\n                    name=\"type_of_rep\"\r\n                    value={values.type_of_rep}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  >\r\n                    <option value=\"\" label=\"Select one\" />\r\n                    <option value=\"Word of God\" label=\"Word of God\" />\r\n                    <option value=\"On Page\" label=\"On Page\" />\r\n                    <option value=\"Word Used\" label=\"Word Used\" />\r\n                  </select>\r\n                </label>\r\n                <label>\r\n                  <span>Romantic Orientation</span>\r\n                  <select\r\n                    name=\"romantic_orientation\"\r\n                    value={values.romantic_orientation}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  >\r\n                    <option value=\"\" label=\"Select one\" />\r\n                    <option value=\"Alloromantic\" label=\"Alloromantic\" />\r\n                    <option value=\"Aroflux\" label=\"Aroflux\" />\r\n                    <option value=\"Aromantic\" label=\"Aromantic\" />\r\n                    <option value=\"Arospec\" label=\"Arospec\" />\r\n                    <option value=\"Biromantic\" label=\"Biromantic\" />\r\n                    <option value=\"Greyromantic\" label=\"Grayromantic\" />\r\n                    <option value=\"Demiromantic\" label=\"Demiromantic\" />\r\n                    <option value=\"Heteroromantic\" label=\"Heteroromantic\" />\r\n                    <option value=\"Homoromantic\" label=\"Homoromantic\" />\r\n                    <option value=\"Panromantic\" label=\"Panromantic\" />\r\n                    <option value=\"Queer\" label=\"Queer\" />\r\n                    <option value=\"WTFRomantic\" label=\"WTFRomantic\" />\r\n                  </select>\r\n                </label>\r\n                <label>\r\n                  <span>Sexual Orientation</span>\r\n                  <select\r\n                    name=\"sexual_orientation\"\r\n                    value={values.sexual_orientation}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  >\r\n                    <option value=\"\" label=\"Select one\" />\r\n                    <option value=\"Allosexual\" label=\"Allosexual\" />\r\n                    <option value=\"Asexual\" label=\"Asexual\" />\r\n                    <option value=\"Acespec\" label=\"Acespec\" />\r\n                    <option value=\"Demisexual\" label=\"Demisexual\" />\r\n                    <option value=\"Bisexual\" label=\"Bisexual\" />\r\n                    <option value=\"Gay\" label=\"Gay\" />\r\n                    <option value=\"Gray-asexual\" label=\"Graysexual\" />\r\n                    <option value=\"Heterosexual\" label=\"Heterosexual\" />\r\n                    <option value=\"Pansexual\" label=\"Pansexual\" />\r\n                    <option value=\"Queer\" label=\"Queer\" />\r\n                  </select>\r\n                </label>\r\n                <label>\r\n                  <span>Genre</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Genre\"\r\n                    name=\"genre\"\r\n                    value={values.genre}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  <span>Relationships</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Relationships\"\r\n                    name=\"relationships\"\r\n                    value={values.relationships}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  />\r\n                </label>\r\n                <label>\r\n                  <span>Story Length</span>\r\n                  <select\r\n                    name=\"story_length\"\r\n                    value={values.story_length}\r\n                    onChange={handleChange}\r\n                    onBlur={handleChange}\r\n                  >\r\n                    <option value=\"\" label=\"Select one\" />\r\n                    <option value=\"Novel (short)\" label=\"Novel (short)\" />\r\n                    <option value=\"Novel (long)\" label=\"Novel (long)\" />\r\n                    <option value=\"Short story\" label=\"Short story\" />\r\n                    <option value=\"Novella\" label=\"Novella\" />\r\n                    <option value=\"Anthology\" label=\"Anthology\" />\r\n                    <option value=\"Webseries\" label=\"Webseries\" />\r\n                  </select>\r\n                </label>\r\n              </div>\r\n\r\n              <button type=\"submit\">Search</button>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success-delete\\success.js",[],"C:\\Users\\Marina\\Desktop\\projects\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success-delete-all\\success.js",[],{"ruleId":"404","replacedBy":"405"},{"ruleId":"406","replacedBy":"407"},{"ruleId":"408","severity":1,"message":"409","line":12,"column":10,"nodeType":"410","messageId":"411","endLine":12,"endColumn":17},{"ruleId":"408","severity":1,"message":"412","line":12,"column":19,"nodeType":"410","messageId":"411","endLine":12,"endColumn":29},{"ruleId":"413","severity":1,"message":"414","line":28,"column":6,"nodeType":"415","endLine":28,"endColumn":8,"suggestions":"416"},{"ruleId":"413","severity":1,"message":"417","line":47,"column":6,"nodeType":"415","endLine":47,"endColumn":8,"suggestions":"418"},{"ruleId":"408","severity":1,"message":"419","line":70,"column":17,"nodeType":"410","messageId":"411","endLine":70,"endColumn":29},{"ruleId":"408","severity":1,"message":"420","line":3,"column":8,"nodeType":"410","messageId":"411","endLine":3,"endColumn":13},{"ruleId":"408","severity":1,"message":"421","line":13,"column":10,"nodeType":"410","messageId":"411","endLine":13,"endColumn":15},{"ruleId":"408","severity":1,"message":"422","line":15,"column":10,"nodeType":"410","messageId":"411","endLine":15,"endColumn":20},{"ruleId":"408","severity":1,"message":"423","line":16,"column":10,"nodeType":"410","messageId":"411","endLine":16,"endColumn":21},{"ruleId":"408","severity":1,"message":"409","line":17,"column":10,"nodeType":"410","messageId":"411","endLine":17,"endColumn":17},{"ruleId":"408","severity":1,"message":"412","line":17,"column":19,"nodeType":"410","messageId":"411","endLine":17,"endColumn":29},{"ruleId":"408","severity":1,"message":"424","line":1,"column":17,"nodeType":"410","messageId":"411","endLine":1,"endColumn":27},{"ruleId":"408","severity":1,"message":"425","line":7,"column":8,"nodeType":"410","messageId":"411","endLine":7,"endColumn":19},{"ruleId":"408","severity":1,"message":"426","line":8,"column":25,"nodeType":"410","messageId":"411","endLine":8,"endColumn":45},{"ruleId":"408","severity":1,"message":"427","line":17,"column":23,"nodeType":"410","messageId":"411","endLine":17,"endColumn":37},{"ruleId":"408","severity":1,"message":"428","line":19,"column":9,"nodeType":"410","messageId":"411","endLine":19,"endColumn":22},{"ruleId":"408","severity":1,"message":"429","line":31,"column":9,"nodeType":"410","messageId":"411","endLine":31,"endColumn":23},{"ruleId":"408","severity":1,"message":"430","line":44,"column":9,"nodeType":"410","messageId":"411","endLine":44,"endColumn":23},{"ruleId":"408","severity":1,"message":"431","line":6,"column":8,"nodeType":"410","messageId":"411","endLine":6,"endColumn":21},{"ruleId":"408","severity":1,"message":"432","line":4,"column":8,"nodeType":"410","messageId":"411","endLine":4,"endColumn":13},{"ruleId":"408","severity":1,"message":"433","line":5,"column":8,"nodeType":"410","messageId":"411","endLine":5,"endColumn":15},{"ruleId":"408","severity":1,"message":"434","line":4,"column":8,"nodeType":"410","messageId":"411","endLine":4,"endColumn":21},{"ruleId":"408","severity":1,"message":"435","line":7,"column":3,"nodeType":"410","messageId":"411","endLine":7,"endColumn":25},{"ruleId":"408","severity":1,"message":"436","line":12,"column":13,"nodeType":"410","messageId":"411","endLine":12,"endColumn":16},{"ruleId":"413","severity":1,"message":"437","line":30,"column":6,"nodeType":"415","endLine":30,"endColumn":8,"suggestions":"438"},{"ruleId":"408","severity":1,"message":"419","line":125,"column":17,"nodeType":"410","messageId":"411","endLine":125,"endColumn":29},{"ruleId":"408","severity":1,"message":"434","line":4,"column":8,"nodeType":"410","messageId":"411","endLine":4,"endColumn":21},{"ruleId":"408","severity":1,"message":"436","line":7,"column":13,"nodeType":"410","messageId":"411","endLine":7,"endColumn":16},{"ruleId":"408","severity":1,"message":"439","line":8,"column":8,"nodeType":"410","messageId":"411","endLine":8,"endColumn":17},{"ruleId":"413","severity":1,"message":"440","line":29,"column":6,"nodeType":"415","endLine":29,"endColumn":8,"suggestions":"441"},{"ruleId":"408","severity":1,"message":"442","line":69,"column":17,"nodeType":"410","messageId":"411","endLine":69,"endColumn":24},{"ruleId":"408","severity":1,"message":"443","line":70,"column":17,"nodeType":"410","messageId":"411","endLine":70,"endColumn":23},{"ruleId":"408","severity":1,"message":"420","line":4,"column":8,"nodeType":"410","messageId":"411","endLine":4,"endColumn":13},{"ruleId":"408","severity":1,"message":"442","line":52,"column":17,"nodeType":"410","messageId":"411","endLine":52,"endColumn":24},{"ruleId":"408","severity":1,"message":"443","line":53,"column":17,"nodeType":"410","messageId":"411","endLine":53,"endColumn":23},{"ruleId":"408","severity":1,"message":"420","line":4,"column":8,"nodeType":"410","messageId":"411","endLine":4,"endColumn":13},{"ruleId":"408","severity":1,"message":"434","line":4,"column":8,"nodeType":"410","messageId":"411","endLine":4,"endColumn":21},{"ruleId":"408","severity":1,"message":"444","line":6,"column":10,"nodeType":"410","messageId":"411","endLine":6,"endColumn":23},{"ruleId":"408","severity":1,"message":"436","line":8,"column":13,"nodeType":"410","messageId":"411","endLine":8,"endColumn":16},{"ruleId":"413","severity":1,"message":"437","line":25,"column":6,"nodeType":"415","endLine":25,"endColumn":8,"suggestions":"445"},{"ruleId":"408","severity":1,"message":"434","line":4,"column":8,"nodeType":"410","messageId":"411","endLine":4,"endColumn":21},{"ruleId":"408","severity":1,"message":"435","line":6,"column":10,"nodeType":"410","messageId":"411","endLine":6,"endColumn":32},{"ruleId":"408","severity":1,"message":"436","line":8,"column":13,"nodeType":"410","messageId":"411","endLine":8,"endColumn":16},{"ruleId":"408","severity":1,"message":"439","line":9,"column":8,"nodeType":"410","messageId":"411","endLine":9,"endColumn":17},{"ruleId":"408","severity":1,"message":"446","line":15,"column":10,"nodeType":"410","messageId":"411","endLine":15,"endColumn":19},{"ruleId":"408","severity":1,"message":"447","line":15,"column":21,"nodeType":"410","messageId":"411","endLine":15,"endColumn":33},{"ruleId":"408","severity":1,"message":"442","line":53,"column":17,"nodeType":"410","messageId":"411","endLine":53,"endColumn":24},{"ruleId":"408","severity":1,"message":"443","line":54,"column":17,"nodeType":"410","messageId":"411","endLine":54,"endColumn":23},{"ruleId":"408","severity":1,"message":"419","line":55,"column":17,"nodeType":"410","messageId":"411","endLine":55,"endColumn":29},{"ruleId":"408","severity":1,"message":"436","line":8,"column":13,"nodeType":"410","messageId":"411","endLine":8,"endColumn":16},{"ruleId":"408","severity":1,"message":"447","line":13,"column":21,"nodeType":"410","messageId":"411","endLine":13,"endColumn":33},{"ruleId":"408","severity":1,"message":"434","line":4,"column":8,"nodeType":"410","messageId":"411","endLine":4,"endColumn":21},{"ruleId":"408","severity":1,"message":"435","line":7,"column":3,"nodeType":"410","messageId":"411","endLine":7,"endColumn":25},{"ruleId":"408","severity":1,"message":"436","line":12,"column":13,"nodeType":"410","messageId":"411","endLine":12,"endColumn":16},{"ruleId":"408","severity":1,"message":"439","line":13,"column":8,"nodeType":"410","messageId":"411","endLine":13,"endColumn":17},{"ruleId":"413","severity":1,"message":"437","line":33,"column":6,"nodeType":"415","endLine":33,"endColumn":8,"suggestions":"448"},{"ruleId":"408","severity":1,"message":"442","line":80,"column":17,"nodeType":"410","messageId":"411","endLine":80,"endColumn":24},{"ruleId":"408","severity":1,"message":"443","line":81,"column":17,"nodeType":"410","messageId":"411","endLine":81,"endColumn":23},{"ruleId":"408","severity":1,"message":"419","line":82,"column":17,"nodeType":"410","messageId":"411","endLine":82,"endColumn":29},{"ruleId":"408","severity":1,"message":"434","line":4,"column":8,"nodeType":"410","messageId":"411","endLine":4,"endColumn":21},{"ruleId":"408","severity":1,"message":"436","line":8,"column":13,"nodeType":"410","messageId":"411","endLine":8,"endColumn":16},{"ruleId":"408","severity":1,"message":"439","line":9,"column":8,"nodeType":"410","messageId":"411","endLine":9,"endColumn":17},{"ruleId":"413","severity":1,"message":"440","line":29,"column":6,"nodeType":"415","endLine":29,"endColumn":8,"suggestions":"449"},{"ruleId":"408","severity":1,"message":"442","line":65,"column":17,"nodeType":"410","messageId":"411","endLine":65,"endColumn":24},{"ruleId":"408","severity":1,"message":"443","line":66,"column":17,"nodeType":"410","messageId":"411","endLine":66,"endColumn":23},{"ruleId":"408","severity":1,"message":"419","line":67,"column":17,"nodeType":"410","messageId":"411","endLine":67,"endColumn":29},{"ruleId":"408","severity":1,"message":"434","line":4,"column":8,"nodeType":"410","messageId":"411","endLine":4,"endColumn":21},{"ruleId":"408","severity":1,"message":"435","line":7,"column":3,"nodeType":"410","messageId":"411","endLine":7,"endColumn":25},{"ruleId":"408","severity":1,"message":"436","line":12,"column":13,"nodeType":"410","messageId":"411","endLine":12,"endColumn":16},{"ruleId":"408","severity":1,"message":"439","line":13,"column":8,"nodeType":"410","messageId":"411","endLine":13,"endColumn":17},{"ruleId":"408","severity":1,"message":"450","line":19,"column":10,"nodeType":"410","messageId":"411","endLine":19,"endColumn":15},{"ruleId":"413","severity":1,"message":"437","line":43,"column":6,"nodeType":"415","endLine":43,"endColumn":8,"suggestions":"451"},{"ruleId":"408","severity":1,"message":"442","line":94,"column":17,"nodeType":"410","messageId":"411","endLine":94,"endColumn":24},{"ruleId":"408","severity":1,"message":"443","line":95,"column":17,"nodeType":"410","messageId":"411","endLine":95,"endColumn":23},{"ruleId":"408","severity":1,"message":"452","line":5,"column":8,"nodeType":"410","messageId":"411","endLine":5,"endColumn":18},{"ruleId":"413","severity":1,"message":"440","line":27,"column":6,"nodeType":"415","endLine":27,"endColumn":8,"suggestions":"453"},{"ruleId":"408","severity":1,"message":"442","line":69,"column":17,"nodeType":"410","messageId":"411","endLine":69,"endColumn":24},{"ruleId":"408","severity":1,"message":"443","line":70,"column":17,"nodeType":"410","messageId":"411","endLine":70,"endColumn":23},{"ruleId":"408","severity":1,"message":"436","line":7,"column":13,"nodeType":"410","messageId":"411","endLine":7,"endColumn":16},{"ruleId":"408","severity":1,"message":"439","line":9,"column":8,"nodeType":"410","messageId":"411","endLine":9,"endColumn":17},{"ruleId":"413","severity":1,"message":"454","line":22,"column":6,"nodeType":"415","endLine":22,"endColumn":8,"suggestions":"455"},{"ruleId":"408","severity":1,"message":"442","line":58,"column":17,"nodeType":"410","messageId":"411","endLine":58,"endColumn":24},{"ruleId":"408","severity":1,"message":"443","line":59,"column":17,"nodeType":"410","messageId":"411","endLine":59,"endColumn":23},{"ruleId":"408","severity":1,"message":"419","line":60,"column":17,"nodeType":"410","messageId":"411","endLine":60,"endColumn":29},{"ruleId":"408","severity":1,"message":"456","line":7,"column":22,"nodeType":"410","messageId":"411","endLine":7,"endColumn":35},{"ruleId":"408","severity":1,"message":"457","line":7,"column":37,"nodeType":"410","messageId":"411","endLine":7,"endColumn":46},{"ruleId":"413","severity":1,"message":"458","line":26,"column":6,"nodeType":"415","endLine":26,"endColumn":15,"suggestions":"459"},{"ruleId":"408","severity":1,"message":"450","line":14,"column":10,"nodeType":"410","messageId":"411","endLine":14,"endColumn":15},{"ruleId":"413","severity":1,"message":"437","line":40,"column":6,"nodeType":"415","endLine":40,"endColumn":8,"suggestions":"460"},{"ruleId":"408","severity":1,"message":"442","line":91,"column":17,"nodeType":"410","messageId":"411","endLine":91,"endColumn":24},{"ruleId":"408","severity":1,"message":"443","line":92,"column":17,"nodeType":"410","messageId":"411","endLine":92,"endColumn":23},{"ruleId":"408","severity":1,"message":"442","line":52,"column":17,"nodeType":"410","messageId":"411","endLine":52,"endColumn":24},{"ruleId":"408","severity":1,"message":"443","line":53,"column":17,"nodeType":"410","messageId":"411","endLine":53,"endColumn":23},{"ruleId":"408","severity":1,"message":"432","line":4,"column":8,"nodeType":"410","messageId":"411","endLine":4,"endColumn":13},{"ruleId":"413","severity":1,"message":"454","line":14,"column":6,"nodeType":"415","endLine":14,"endColumn":8,"suggestions":"461"},{"ruleId":"408","severity":1,"message":"462","line":8,"column":9,"nodeType":"410","messageId":"411","endLine":8,"endColumn":16},{"ruleId":"408","severity":1,"message":"463","line":10,"column":10,"nodeType":"410","messageId":"411","endLine":10,"endColumn":24},{"ruleId":"408","severity":1,"message":"423","line":12,"column":10,"nodeType":"410","messageId":"411","endLine":12,"endColumn":21},{"ruleId":"413","severity":1,"message":"454","line":26,"column":6,"nodeType":"415","endLine":26,"endColumn":8,"suggestions":"464"},{"ruleId":"408","severity":1,"message":"422","line":13,"column":10,"nodeType":"410","messageId":"411","endLine":13,"endColumn":20},{"ruleId":"408","severity":1,"message":"423","line":14,"column":10,"nodeType":"410","messageId":"411","endLine":14,"endColumn":21},{"ruleId":"413","severity":1,"message":"454","line":28,"column":6,"nodeType":"415","endLine":28,"endColumn":22,"suggestions":"465"},{"ruleId":"413","severity":1,"message":"454","line":15,"column":6,"nodeType":"415","endLine":15,"endColumn":8,"suggestions":"466"},{"ruleId":"408","severity":1,"message":"463","line":8,"column":10,"nodeType":"410","messageId":"411","endLine":8,"endColumn":24},{"ruleId":"408","severity":1,"message":"422","line":9,"column":10,"nodeType":"410","messageId":"411","endLine":9,"endColumn":20},{"ruleId":"413","severity":1,"message":"467","line":11,"column":3,"nodeType":"468","endLine":11,"endColumn":18,"suggestions":"469"},{"ruleId":"408","severity":1,"message":"470","line":2,"column":8,"nodeType":"410","messageId":"411","endLine":2,"endColumn":11},{"ruleId":"408","severity":1,"message":"471","line":3,"column":8,"nodeType":"410","messageId":"411","endLine":3,"endColumn":17},{"ruleId":"408","severity":1,"message":"472","line":4,"column":8,"nodeType":"410","messageId":"411","endLine":4,"endColumn":16},{"ruleId":"413","severity":1,"message":"454","line":14,"column":6,"nodeType":"415","endLine":14,"endColumn":8,"suggestions":"473"},{"ruleId":"408","severity":1,"message":"474","line":1,"column":8,"nodeType":"410","messageId":"411","endLine":1,"endColumn":20},{"ruleId":"408","severity":1,"message":"470","line":2,"column":8,"nodeType":"410","messageId":"411","endLine":2,"endColumn":11},{"ruleId":"408","severity":1,"message":"471","line":3,"column":8,"nodeType":"410","messageId":"411","endLine":3,"endColumn":17},{"ruleId":"408","severity":1,"message":"472","line":4,"column":8,"nodeType":"410","messageId":"411","endLine":4,"endColumn":16},{"ruleId":"408","severity":1,"message":"474","line":1,"column":8,"nodeType":"410","messageId":"411","endLine":1,"endColumn":20},{"ruleId":"408","severity":1,"message":"470","line":2,"column":8,"nodeType":"410","messageId":"411","endLine":2,"endColumn":11},{"ruleId":"408","severity":1,"message":"471","line":3,"column":8,"nodeType":"410","messageId":"411","endLine":3,"endColumn":17},{"ruleId":"408","severity":1,"message":"474","line":1,"column":8,"nodeType":"410","messageId":"411","endLine":1,"endColumn":20},{"ruleId":"408","severity":1,"message":"470","line":2,"column":8,"nodeType":"410","messageId":"411","endLine":2,"endColumn":11},{"ruleId":"408","severity":1,"message":"472","line":4,"column":8,"nodeType":"410","messageId":"411","endLine":4,"endColumn":16},{"ruleId":"408","severity":1,"message":"475","line":5,"column":20,"nodeType":"410","messageId":"411","endLine":5,"endColumn":24},{"ruleId":"408","severity":1,"message":"476","line":5,"column":26,"nodeType":"410","messageId":"411","endLine":5,"endColumn":28},{"ruleId":"408","severity":1,"message":"477","line":2,"column":17,"nodeType":"410","messageId":"411","endLine":2,"endColumn":26},{"ruleId":"408","severity":1,"message":"478","line":6,"column":8,"nodeType":"410","messageId":"411","endLine":6,"endColumn":21},{"ruleId":"413","severity":1,"message":"454","line":16,"column":6,"nodeType":"415","endLine":16,"endColumn":8,"suggestions":"479"},{"ruleId":"408","severity":1,"message":"475","line":5,"column":20,"nodeType":"410","messageId":"411","endLine":5,"endColumn":24},{"ruleId":"408","severity":1,"message":"476","line":5,"column":26,"nodeType":"410","messageId":"411","endLine":5,"endColumn":28},{"ruleId":"408","severity":1,"message":"476","line":5,"column":26,"nodeType":"410","messageId":"411","endLine":5,"endColumn":28},{"ruleId":"408","severity":1,"message":"475","line":5,"column":20,"nodeType":"410","messageId":"411","endLine":5,"endColumn":24},{"ruleId":"408","severity":1,"message":"476","line":5,"column":26,"nodeType":"410","messageId":"411","endLine":5,"endColumn":28},{"ruleId":"408","severity":1,"message":"480","line":3,"column":28,"nodeType":"410","messageId":"411","endLine":3,"endColumn":38},{"ruleId":"408","severity":1,"message":"481","line":6,"column":10,"nodeType":"410","messageId":"411","endLine":6,"endColumn":28},{"ruleId":"408","severity":1,"message":"444","line":6,"column":30,"nodeType":"410","messageId":"411","endLine":6,"endColumn":43},{"ruleId":"408","severity":1,"message":"482","line":9,"column":11,"nodeType":"410","messageId":"411","endLine":9,"endColumn":15},{"ruleId":"408","severity":1,"message":"483","line":9,"column":17,"nodeType":"410","messageId":"411","endLine":9,"endColumn":23},{"ruleId":"408","severity":1,"message":"484","line":50,"column":41,"nodeType":"410","messageId":"411","endLine":50,"endColumn":51},"no-native-reassign",["485"],"no-negated-in-lhs",["486"],"no-unused-vars","'stories' is assigned a value but never used.","Identifier","unusedVar","'setStories' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'filteredResults.length'. Either include it or remove the dependency array.","ArrayExpression",["487"],"React Hook React.useEffect has missing dependencies: 'character' and 'params.id'. Either include them or remove the dependency array.",["488"],"'isSubmitting' is assigned a value but never used.","'Table' is defined but never used.","'token' is assigned a value but never used.","'storyCheck' is assigned a value but never used.","'reviewCheck' is assigned a value but never used.","'useContext' is defined but never used.","'DataContext' is defined but never used.","'fetchWithTokenNoBody' is defined but never used.","'setPermissions' is assigned a value but never used.","'onChangeValue' is assigned a value but never used.","'onChangeValueC' is assigned a value but never used.","'onChangeValueS' is assigned a value but never used.","'ReactPaginate' is defined but never used.","'Globe' is defined but never used.","'Twitter' is defined but never used.","'CharacterInfo' is defined but never used.","'fazerRequisicaoComBody' is defined but never used.","'Yup' is defined but never used.","React Hook React.useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["489"],"'StoryInfo' is defined but never used.","React Hook React.useEffect has missing dependencies: 'params.id' and 'token'. Either include them or remove the dependency array.",["490"],"'touched' is assigned a value but never used.","'errors' is assigned a value but never used.","'fetchWithBody' is defined but never used.",["491"],"'character' is assigned a value but never used.","'setCharacter' is assigned a value but never used.",["492"],["493"],"'cover' is assigned a value but never used.",["494"],"'TableStory' is defined but never used.",["495"],"React Hook React.useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["496"],"'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","React Hook React.useEffect has a missing dependency: 'changed'. Either include it or remove the dependency array.",["497"],["498"],["499"],"'history' is assigned a value but never used.","'characterCheck' is assigned a value but never used.",["500"],["501"],["502"],"React Hook useEffect contains a call to 'setToken'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [token] as a second argument to the useEffect Hook.","MemberExpression",["503"],"'Row' is defined but never used.","'RowReview' is defined but never used.","'RowStory' is defined but never used.",["504"],"'RowCharacter' is defined but never used.","'type' is assigned a value but never used.","'id' is assigned a value but never used.","'Component' is defined but never used.","'SuggestReview' is defined but never used.",["505"],"'ButtonIcon' is defined but never used.","'fetchNoTokenNobody' is defined but never used.","'page' is assigned a value but never used.","'params' is assigned a value but never used.","'handleBlur' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},{"desc":"510","fix":"514"},{"desc":"510","fix":"515"},{"desc":"512","fix":"516"},{"desc":"510","fix":"517"},{"desc":"512","fix":"518"},{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},{"desc":"510","fix":"523"},{"desc":"519","fix":"524"},{"desc":"519","fix":"525"},{"desc":"526","fix":"527"},{"desc":"519","fix":"528"},{"desc":"529","fix":"530"},{"desc":"519","fix":"531"},{"desc":"519","fix":"532"},"Update the dependencies array to be: [filteredResults.length]",{"range":"533","text":"534"},"Update the dependencies array to be: [character, params.id]",{"range":"535","text":"536"},"Update the dependencies array to be: [params.id]",{"range":"537","text":"538"},"Update the dependencies array to be: [params.id, token]",{"range":"539","text":"540"},{"range":"541","text":"538"},{"range":"542","text":"538"},{"range":"543","text":"540"},{"range":"544","text":"538"},{"range":"545","text":"540"},"Update the dependencies array to be: [token]",{"range":"546","text":"547"},"Update the dependencies array to be: [changed, history]",{"range":"548","text":"549"},{"range":"550","text":"538"},{"range":"551","text":"547"},{"range":"552","text":"547"},"Update the dependencies array to be: [characterCheck, token]",{"range":"553","text":"554"},{"range":"555","text":"547"},"Add dependencies array: [token]",{"range":"556","text":"557"},{"range":"558","text":"547"},{"range":"559","text":"547"},[1160,1162],"[filteredResults.length]",[1791,1793],"[character, params.id]",[1103,1105],"[params.id]",[1093,1095],"[params.id, token]",[998,1000],[1167,1169],[1119,1121],[1663,1665],[964,966],[768,770],"[token]",[1095,1104],"[changed, history]",[1496,1498],[498,500],[992,994],[1201,1217],"[characterCheck, token]",[468,470],[912,912],", [token]",[454,456],[604,606]]