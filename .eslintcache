[{"C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\index.js":"1","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\reportWebVitals.js":"2","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\App.js":"3","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\login\\login.js":"4","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\home\\home.js":"5","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success\\success.js":"6","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-character\\suggest-character.js":"7","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\utils\\fetch.js":"8","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\header\\header.js":"9","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\search\\search.js":"10","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\single-character\\single-character.js":"11","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\character\\character.js":"12","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\character-info\\character-info.js":"13","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\stories\\stories.js":"14","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\story-info\\story-info.js":"15","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\reviews\\reviews.js":"16","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\review-info\\review-info.js":"17","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\about\\about.js":"18","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\suggest-character-info\\suggest-character-info.js":"19","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\dashboard\\dashboard.js":"20","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\stats\\stats.js":"21","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\recent-suggested\\recent-suggested.js":"22","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-characters\\suggested-characters.js":"23","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-character\\suggested-character.js":"24","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\all-characters\\all-characters.js":"25","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\pagination\\pagination.js":"26","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\update-character\\update-character.js":"27","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-story\\suggest-story.js":"28","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-story\\update-story.js":"29","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-review\\suggest-review.js":"30","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-stories\\suggested-stories.js":"31","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-reviews\\suggested-reviews.js":"32","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-character\\update-character.js":"33","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-character\\add-character.js":"34","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-review\\update-review.js":"35","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-story\\suggested-story.js":"36","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-story\\add-story.js":"37","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-review\\suggested-review.js":"38","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-review\\add-review.js":"39","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-review\\row.js":"40","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-story\\row.js":"41","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-character\\table.js":"42","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-story\\table.js":"43","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-review\\table.js":"44","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-character\\row.js":"45","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\sidebar\\sidebar.js":"46","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\results\\results.js":"47","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\mobile-header\\mobile-header.js":"48"},{"size":500,"mtime":499162500000,"results":"49","hashOfConfig":"50"},{"size":362,"mtime":499162500000,"results":"51","hashOfConfig":"50"},{"size":3308,"mtime":1612136667019,"results":"52","hashOfConfig":"50"},{"size":3813,"mtime":1612556728693,"results":"53","hashOfConfig":"50"},{"size":3222,"mtime":1612190838823,"results":"54","hashOfConfig":"50"},{"size":708,"mtime":1612198076372,"results":"55","hashOfConfig":"50"},{"size":9551,"mtime":1612196780097,"results":"56","hashOfConfig":"50"},{"size":778,"mtime":1612102475152,"results":"57","hashOfConfig":"50"},{"size":253,"mtime":1609383875871,"results":"58","hashOfConfig":"50"},{"size":1182,"mtime":1609259429332,"results":"59","hashOfConfig":"50"},{"size":1337,"mtime":1612183320739,"results":"60","hashOfConfig":"50"},{"size":2178,"mtime":1612198581833,"results":"61","hashOfConfig":"50"},{"size":4014,"mtime":1612198695729,"results":"62","hashOfConfig":"50"},{"size":827,"mtime":1612101552001,"results":"63","hashOfConfig":"50"},{"size":3010,"mtime":1612228562563,"results":"64","hashOfConfig":"50"},{"size":830,"mtime":1612102108557,"results":"65","hashOfConfig":"50"},{"size":1834,"mtime":1612198628178,"results":"66","hashOfConfig":"50"},{"size":2070,"mtime":1612196551895,"results":"67","hashOfConfig":"50"},{"size":6416,"mtime":1611668537971,"results":"68","hashOfConfig":"50"},{"size":1468,"mtime":1612192495342,"results":"69","hashOfConfig":"50"},{"size":659,"mtime":1611792827252,"results":"70","hashOfConfig":"50"},{"size":1203,"mtime":1611799322494,"results":"71","hashOfConfig":"50"},{"size":1629,"mtime":1612197178635,"results":"72","hashOfConfig":"50"},{"size":11225,"mtime":1612197647265,"results":"73","hashOfConfig":"50"},{"size":1906,"mtime":1612196903479,"results":"74","hashOfConfig":"50"},{"size":780,"mtime":1612129639784,"results":"75","hashOfConfig":"50"},{"size":11122,"mtime":1611838768048,"results":"76","hashOfConfig":"50"},{"size":7464,"mtime":1612228356433,"results":"77","hashOfConfig":"50"},{"size":7662,"mtime":1612228272879,"results":"78","hashOfConfig":"50"},{"size":4697,"mtime":1612197772324,"results":"79","hashOfConfig":"50"},{"size":1547,"mtime":1612197403014,"results":"80","hashOfConfig":"50"},{"size":1519,"mtime":1612197292372,"results":"81","hashOfConfig":"50"},{"size":11027,"mtime":1612197924835,"results":"82","hashOfConfig":"50"},{"size":9467,"mtime":1612198051606,"results":"83","hashOfConfig":"50"},{"size":5102,"mtime":1612197946834,"results":"84","hashOfConfig":"50"},{"size":9083,"mtime":1612228275195,"results":"85","hashOfConfig":"50"},{"size":7366,"mtime":1612197987093,"results":"86","hashOfConfig":"50"},{"size":6215,"mtime":1612197794397,"results":"87","hashOfConfig":"50"},{"size":4690,"mtime":1612198003945,"results":"88","hashOfConfig":"50"},{"size":2182,"mtime":1612130686618,"results":"89","hashOfConfig":"50"},{"size":1828,"mtime":1612133353486,"results":"90","hashOfConfig":"50"},{"size":958,"mtime":1612186593259,"results":"91","hashOfConfig":"50"},{"size":1060,"mtime":1612116990588,"results":"92","hashOfConfig":"50"},{"size":1063,"mtime":1612133355762,"results":"93","hashOfConfig":"50"},{"size":2027,"mtime":1612186574827,"results":"94","hashOfConfig":"50"},{"size":4071,"mtime":1612106006571,"results":"95","hashOfConfig":"50"},{"size":3943,"mtime":1612135592064,"results":"96","hashOfConfig":"50"},{"size":1999,"mtime":1612199890181,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"18imt63",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"100"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"100"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"100"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"100"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"100"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"100"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"100"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"100"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"100"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"100"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"100"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"100"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"100"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"100"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"100"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"100"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"100"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"100"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"100"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"100"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"100"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"100"},"C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\index.js",[],["232","233"],"C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\reportWebVitals.js",[],"C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\App.js",["234"],"import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/home/home\";\nimport Login from \"./pages/login/login\";\nimport Character from \"./pages/character/character\";\nimport SuggestCharacter from \"./pages/suggest-character/suggest-character\";\nimport Success from \"./pages/success/success\";\nimport About from \"./pages/about/about\";\nimport Dashboard from \"./pages/dashboard/dashboard\";\nimport SuggestedCharacters from \"./pages/suggested-characters/suggested-characters\";\nimport SuggestedCharacter from \"./pages/suggested-character/suggested-character\";\nimport AllCharacters from \"./pages/all-characters/all-characters\";\nimport SuggestStory from \"./pages/suggest-story/suggest-story\";\nimport UpdateStory from \"./pages/update-story/update-story\";\nimport SuggestReview from \"./pages/suggest-review/suggest-review\";\nimport SuggestedStories from \"./pages/suggested-stories/suggested-stories\";\nimport SuggestedReviews from \"./pages/suggested-reviews/suggested-reviews\";\nimport UpdateCharacter from \"./pages/update-character/update-character\";\nimport AddCharacter from \"./pages/add-character/add-character\";\nimport UpdateReview from \"./pages/update-review/update-review\";\nimport SuggestedStory from \"./pages/suggested-story/suggested-story\";\nimport AddStory from \"./pages/add-story/add-story\";\nimport SuggestedReview from \"./pages/suggested-review/suggested-review\";\nimport AddReview from \"./pages/add-review/add-review\";\nimport Results from \"./components/results/results\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/character/:id\" component={Character} />\n          <Route path=\"/suggest-character\" component={SuggestCharacter} />\n          <Route path=\"/success\" component={Success} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/suggested-characters\" component={SuggestedCharacters} />\n          <Route\n            path=\"/suggested-character/:id\"\n            component={SuggestedCharacter}\n          />\n          <Route path=\"/all-characters\" component={AllCharacters} />\n          <Route path=\"/update-character/:id\" component={UpdateCharacter} />\n          <Route path=\"/suggest-story/:id\" component={SuggestStory} />\n          <Route path=\"/update-story/:id\" component={UpdateStory} />\n          <Route path=\"/suggest-review/:id\" component={SuggestReview} />\n          <Route path=\"/suggested-stories\" component={SuggestedStories} />\n          <Route path=\"/suggested-reviews\" component={SuggestedReviews} />\n          <Route path=\"/add-character\" component={AddCharacter} />\n          <Route path=\"/update-review/:id\" component={UpdateReview} />\n          <Route path=\"/suggested-story/:id\" component={SuggestedStory} />\n          <Route path=\"/suggested-review/:id\" component={SuggestedReview} />\n          <Route path=\"/add-story/:id\" component={AddStory} />\n          <Route path=\"/add-review/:id\" component={AddReview} />\n          <Route path=\"/success\" component={Success} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\login\\login.js",[],"C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\home\\home.js",["235","236","237","238"],"import React from \"react\";\r\nimport \"./home.css\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport SingleCharacter from \"../../components/single-character/single-character\";\r\nimport { ReactComponent as ButtonIcon } from \"../../assets/chevron-right-solid.svg\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nfunction Home() {\r\n  const [random, setRandom] = React.useState([]);\r\n  const [stories, setStories] = React.useState([]);\r\n  const [search, setSearch] = React.useState([]);\r\n  const [filteredResults, setFilteredResults] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/character\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const newRandom = resJson.data;\r\n        console.log(newRandom);\r\n        console.log(filteredResults.length);\r\n        setRandom(newRandom);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n\r\n      <div className=\"home-container\">\r\n        <form\r\n          onSubmit={(event) => {\r\n            console.log(search);\r\n            const newSearch = search.split(\" \");\r\n            console.log(search);\r\n\r\n            event.preventDefault();\r\n            fetch(\r\n              `https://aroacedb-back.herokuapp.com/character/infinite?search=${search}`\r\n            )\r\n              .then((res) => res.json())\r\n              .then((resJson) => {\r\n                console.log(resJson.data);\r\n\r\n                if (resJson.data) {\r\n                  const newResults = resJson.data.characters;\r\n                  setFilteredResults(newResults);\r\n                  console.log(filteredResults);\r\n                }\r\n              });\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"search...\"\r\n            onChange={(event) => {\r\n              setSearch(event.target.value);\r\n            }}\r\n          ></input>\r\n          <button>\r\n            <ButtonIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n          </button>\r\n        </form>\r\n        <div className=\"results\">\r\n          {filteredResults.map((i) => {\r\n            return (\r\n              <div>\r\n                <SingleCharacter character={i} />\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          {filteredResults.length !== 0 ? (\r\n            <div></div>\r\n          ) : (\r\n            <div className=\"random\">\r\n              <SingleCharacter character={random} />\r\n              <div className=\"char-btn\">\r\n                <button\r\n                  onClick={() => {\r\n                    fetch(\"https://aroacedb-back.herokuapp.com/character\")\r\n                      .then((res) => res.json())\r\n                      .then((resJson) => {\r\n                        console.log(resJson.data);\r\n                        const newRandom = resJson.data;\r\n                        setRandom(newRandom);\r\n                      });\r\n                  }}\r\n                >\r\n                  Give me a new character!\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\success\\success.js",[],"C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-character\\suggest-character.js",["239","240","241"],"import React, { useState } from \"react\";\r\nimport { fetchWithBody } from \"../../utils/fetch\";\r\nimport \"./suggest-character.css\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nfunction SuggestCharacter() {\r\n  const history = useHistory();\r\n  const [token, setToken] = useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n  });\r\n\r\n  return (\r\n    <div className=\"SuggestCharacter\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggest-container\">\r\n        <div className=\"suggest\">\r\n          <h2 class=\"title\">Suggest a character</h2>\r\n\r\n          <Formik\r\n            initialValues={{\r\n              character_name: \"\",\r\n              author: \"\",\r\n              gender: \"\",\r\n              importance: \"\",\r\n              pairing_qpp_or_romantic: \"\",\r\n              main_storyseries: \"\",\r\n              type_of_rep: \"\",\r\n              romantic_orientation: \"\",\r\n              sexual_orientation: \"\",\r\n              genre: \"\",\r\n              relationships: \"\",\r\n              rep_noteswarnings: \"\",\r\n              cover: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithBody(\r\n                \"https://aroacedb-back.herokuapp.com/suggest/characters\",\r\n                \"POST\",\r\n                values\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"suggest-character-info\">\r\n                    <p>Suggestions are not being received yet!</p>\r\n                    <div className=\"line\">\r\n                      <h2>\r\n                        <input\r\n                          id=\"character_name\"\r\n                          placeholder=\"Insert Character Name\"\r\n                          type=\"text\"\r\n                          value={values.character_name}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h2>\r\n                      <input\r\n                        id=\"importance\"\r\n                        placeholder=\"Insert Character Importance\"\r\n                        type=\"text\"\r\n                        value={values.importance}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Author</span>\r\n                        <input\r\n                          id=\"author\"\r\n                          placeholder=\"Author\"\r\n                          type=\"text\"\r\n                          value={values.author}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Gender</span>{\" \"}\r\n                        <input\r\n                          id=\"gender\"\r\n                          placeholder=\"Insert Character Gender\"\r\n                          type=\"text\"\r\n                          value={values.gender}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Pairing</span>\r\n                        <input\r\n                          id=\"pairing_qpp_or_romantic\"\r\n                          placeholder=\"Insert Pairing\"\r\n                          type=\"text\"\r\n                          value={values.pairing_qpp_or_romantic}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Series</span>\r\n                        <input\r\n                          id=\"main_storyseries\"\r\n                          placeholder=\"Insert Series\"\r\n                          type=\"text\"\r\n                          value={values.main_storyseries}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Type of Rep</span>\r\n                        <input\r\n                          id=\"type_of_rep\"\r\n                          placeholder=\"Insert Type of Rep\"\r\n                          type=\"text\"\r\n                          value={values.type_of_rep}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Romantic orientation</span>\r\n                        <input\r\n                          id=\"romantic_orientation\"\r\n                          placeholder=\"Insert Romantic Orientation\"\r\n                          type=\"text\"\r\n                          value={values.romantic_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Sexual Orientation</span>\r\n                        <input\r\n                          id=\"sexual_orientation\"\r\n                          placeholder=\"Insert Sexual Orientation\"\r\n                          type=\"text\"\r\n                          value={values.sexual_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Genre</span>\r\n                        <input\r\n                          id=\"genre\"\r\n                          placeholder=\"Insert Genres\"\r\n                          type=\"text\"\r\n                          value={values.genre}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Relationships</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"relationships\"\r\n                        placeholder=\"Insert Relationships\"\r\n                        type=\"text\"\r\n                        value={values.relationships}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Notes & Warnings</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"Insert Representation Notes & Warnings\"\r\n                        type=\"text\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Cover</span>\r\n                      </p>\r\n                      <input\r\n                        id=\"cover\"\r\n                        placeholder=\"cover\"\r\n                        type=\"text\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"suggest-review\">\r\n                    <p>\r\n                      Once the character has been accepted to the database you\r\n                      will be able to suggest reviews and stories for them!\r\n                    </p>\r\n                  </div>\r\n\r\n                  <button\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                    className=\"submit\"\r\n                  >\r\n                    Suggest Character\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SuggestCharacter;\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\utils\\fetch.js",[],"C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\header\\header.js",[],["242","243"],"C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\search\\search.js",["244"],"C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\single-character\\single-character.js",[],"C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\character\\character.js",["245"],"import React from \"react\";\r\nimport \"./character.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Stories from \"../../components/stories/stories\";\r\nimport Reviews from \"../../components/reviews/reviews\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SingleCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const [stories, setStories] = React.useState([]);\r\n  const [reviews, setReviews] = React.useState([]);\r\n  const { params } = useRouteMatch();\r\n\r\n  React.useEffect(() => {\r\n    fetch(`https://aroacedb-back.herokuapp.com/characters/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson.data.character[0]);\r\n        setCharacter(resJson.data.character[0]);\r\n        console.log(character);\r\n        console.log(\"params\", params.id);\r\n      });\r\n\r\n    fetch(`https://aroacedb-back.herokuapp.com/stories/character/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const possibleStories = resJson.data.stories;\r\n        if (possibleStories.length !== 0) {\r\n          console.log(possibleStories);\r\n          setStories(possibleStories);\r\n        }\r\n      });\r\n\r\n    fetch(`https://aroacedb-back.herokuapp.com/reviews/character/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        const possibleReviews = resJson.data.reviews;\r\n        console.log(resJson);\r\n        if (possibleReviews.length !== 0) {\r\n          console.log(possibleReviews);\r\n          setReviews(possibleReviews);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Character\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"character-container\">\r\n        <CharacterInfo character={character} />\r\n        {console.log(params.id)}\r\n        <Stories stories={stories} character_id={params.id} />\r\n        <Reviews reviews={reviews} character_id={params.id} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\character-info\\character-info.js",["246"],"import \"./character-info.css\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchWithTokenNoBody } from \"../../utils/fetch\";\r\n\r\nexport default function CharacterInfo(props) {\r\n  const { character } = props;\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"CharacterInfo\">\r\n      <h2>{character.character_name}</h2>\r\n      <div className=\"line\">\r\n        <div className=\"chunk\">\r\n          <span>Author</span>\r\n          {character.author}\r\n        </div>\r\n        <div className=\"chunk\">\r\n          <span>Gender</span> {character.gender}\r\n        </div>\r\n        <div className=\"chunk\">\r\n          <span>Pairing</span>\r\n          {character.pairing_qpp_or_romantic == null\r\n            ? \"Not informed/applicable.\"\r\n            : character.pairing_qpp_or_romantic}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"line\">\r\n        <div className=\"chunk\">\r\n          <span>Series</span>{\" \"}\r\n          {character.main_storyseries == null\r\n            ? \"Not informed or not applicable.\"\r\n            : character.main_storyseries}\r\n        </div>\r\n        <div className=\"chunk\">\r\n          <span>Type of Rep</span> {character.type_of_rep}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"line\">\r\n        <div className=\"chunk\">\r\n          <span>Romantic orientation</span>{\" \"}\r\n          {character.romantic_orientation == null\r\n            ? \"Not informed.\"\r\n            : character.romantic_orientation}\r\n        </div>\r\n        <div className=\"chunk\">\r\n          <span>Sexual Orientation</span>{\" \"}\r\n          {character.sexual_orientation == null\r\n            ? \"Not informed.\"\r\n            : character.sexual_orientation}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"line\">\r\n        <div className=\"chunk\">\r\n          <span>Genre</span> {character.genre}\r\n        </div>\r\n      </div>\r\n\r\n      <div clasName=\"square\">\r\n        <p>\r\n          <span>Relationships</span>\r\n          {character.relationships == null\r\n            ? \"Not informed.\"\r\n            : character.relationships}\r\n        </p>\r\n      </div>\r\n\r\n      <div clasName=\"square\">\r\n        <p>\r\n          <span>Notes & Warnings</span>\r\n          {character.rep_noteswarnings == null\r\n            ? \"No warnings.\"\r\n            : character.rep_noteswarnings}\r\n        </p>\r\n      </div>\r\n      {token ? (\r\n        <div className=\"buttons-character\">\r\n          <button\r\n            onClick={() => {\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/characters/${character.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/stories/character/${character.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/reviews/character/${character.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              history.push(\"/update-character/\" + character.id);\r\n            }}\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\stories\\stories.js",["247","248"],"import \"./stories.css\";\r\nimport React from \"react\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Stories(props) {\r\n  const { stories, character_id } = props;\r\n  const history = useHistory();\r\n  const [token, setToken] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  });\r\n\r\n  return (\r\n    <div className=\"Stories\">\r\n      <h3>Stories</h3>\r\n      {stories.map((story) => {\r\n        return <StoryInfo story={story} />;\r\n      })}\r\n      {token ? (\r\n        <a href={`/add-story/${character_id}`}>Add Story</a>\r\n      ) : (\r\n        <a href={`/suggest-story/${character_id}`}>Suggest Story</a>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\story-info\\story-info.js",["249"],"import \"./story-info.css\";\r\nimport React from \"react\";\r\nimport { fetchWithTokenNoBody } from \"../../utils/fetch\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function StoryInfo(props) {\r\n  const { story } = props;\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"StoryInfo\">\r\n      {story.cover ? (\r\n        <img src={story.cover} alt=\"cover\" />\r\n      ) : (\r\n        <img\r\n          src=\"https://www.globaluniversityalliance.org/wp-content/uploads/2017/10/No-Cover-Image-01.png\"\r\n          alt=\"cover\"\r\n        />\r\n      )}\r\n\r\n      <div className=\"story-container\">\r\n        <div className=\"line\">\r\n          <h4>{story.story_title}</h4>\r\n          <span>\r\n            <span>{story.story_length}</span>\r\n          </span>\r\n          {/* <span>\r\n            {story.character_importance === null ? (\r\n              \"No info on character importance\"\r\n            ) : (\r\n              <span>{story.character_importance} Character</span>\r\n            )}\r\n          </span> */}\r\n        </div>\r\n        <div className=\"line\">\r\n          {story.series_or_anthology === null ? (\r\n            \"No series/anthology\"\r\n          ) : (\r\n            <span>\r\n              in the <span>{story.series_or_anthology} </span>series\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"line\">\r\n          <span>\r\n            <span>{story.genre}</span>\r\n          </span>\r\n          <span>\r\n            <span className=\"to-capitalize\">{story.type_of_rep} Rep</span>\r\n          </span>\r\n        </div>\r\n        <p>\r\n          <span>Rep Notes & Warnings</span>\r\n          {story.rep_noteswarnings === null\r\n            ? \"No rep notes or warnings.\"\r\n            : story.rep_noteswarnings}\r\n        </p>\r\n        <p>\r\n          <span>Other Notes & Warnings</span>\r\n          {story.other_noteswarnings === null\r\n            ? \"No other notes or warnings.\"\r\n            : story.other_noteswarnings}\r\n        </p>\r\n        {token ? (\r\n          <div className=\"buttons-story\">\r\n            <button\r\n              onClick={() => {\r\n                fetchWithTokenNoBody(\r\n                  `https://aroacedb-back.herokuapp.com/stories/${story.id}`,\r\n                  \"DELETE\",\r\n                  token\r\n                )\r\n                  .then((res) => res.json())\r\n                  .then((resJson) => {\r\n                    console.log(resJson);\r\n                    window.location.reload();\r\n                  });\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                history.push(\"/update-story/\" + story.id);\r\n              }}\r\n            >\r\n              Update\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\reviews\\reviews.js",["250"],"import \"./reviews.css\";\r\nimport React from \"react\";\r\nimport ReviewInfo from \"../../components/review-info/review-info\";\r\n\r\nexport default function Reviews(props) {\r\n  const { reviews, character_id } = props;\r\n  const [token, setToken] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  });\r\n  return (\r\n    <div className=\"Reviews\">\r\n      <h3>Reviews</h3>\r\n      {reviews.length !== 0\r\n        ? reviews.map((review) => {\r\n            return <ReviewInfo review={review} />;\r\n          })\r\n        : \"No reviews available.\"}\r\n      {token ? (\r\n        <a href={`/add-review/${character_id}`}>Add Review</a>\r\n      ) : (\r\n        <a href={`/suggest-review/${character_id}`}>Suggest Review</a>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\review-info\\review-info.js",["251","252","253"],"import \"./review-info.css\";\r\nimport React, { Component } from \"react\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchWithTokenNoBody } from \"../../utils/fetch\";\r\nimport SuggestReview from \"../../pages/suggest-review/suggest-review\";\r\n\r\nexport default function ReviewInfo(props) {\r\n  const { review } = props;\r\n  const history = useHistory();\r\n  const [token, setToken] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"ReviewInfo\">\r\n      <div className=\"container\">\r\n        <div className=\"content\">\r\n          <h4>{review.review_for}</h4>\r\n          <span>\r\n            by {review.reviewer} | Ownvoices for {review.ownvoice_for}.\r\n          </span>\r\n        </div>\r\n\r\n        <a href={review.link}>\r\n          <img src={ExternalLink} alt=\"link para resenha em site externo\" />\r\n        </a>\r\n      </div>\r\n      {token ? (\r\n        <div className=\"buttons-review\">\r\n          <button\r\n            onClick={() => {\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/reviews/${review.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n\r\n                  window.location.reload();\r\n                });\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              history.push(\"/update-review/\" + review.id);\r\n            }}\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\about\\about.js",[],"C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\suggest-character-info\\suggest-character-info.js",["254","255","256"],"C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\dashboard\\dashboard.js",[],"C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\stats\\stats.js",[],"C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\recent-suggested\\recent-suggested.js",[],"C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-characters\\suggested-characters.js",["257"],"import \"./suggested-characters.css\";\r\nimport React from \"react\";\r\nimport Table from \"../../components/table-character/table\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableCharacter from \"../../components/table-character/table\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedCharacters() {\r\n  const [characters, setCharacters] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/suggest/characters\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const data = resJson.data.paginated_characters;\r\n        console.log(data);\r\n        setCharacters(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"SuggestedCharacters\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggested-container\">\r\n        <div className=\"title\">\r\n          <h2>Suggested Characters</h2>\r\n        </div>\r\n        <div className=\"table-container\">\r\n          <TableCharacter content={characters} type=\"suggest\" id=\"character\" />\r\n          <Pagination\r\n            totalPages={totalPages}\r\n            setCurrentPage={setCurrentPage}\r\n            currentPage={currentPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-character\\suggested-character.js",["258","259","260","261"],"import React from \"react\";\r\nimport \"./suggested-character.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport {\r\n  fazerRequisicaoComBody,\r\n  fetchWithToken,\r\n  fetchWithTokenNoBody,\r\n} from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const [token, setToken] = React.useState(\"\");\r\n\r\n  const history = useHistory();\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/suggest/characters/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setCharacter(resJson.data.character[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Character\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"character-container\">\r\n        <div className=\"suggest\">\r\n          <h2 class=\"title\">Suggested character</h2>\r\n\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              character_name: character.character_name,\r\n              author: character.author,\r\n              gender: character.gender,\r\n              importance: character.importance,\r\n              pairing_qpp_or_romantic: character.pairing_qpp_or_romantic,\r\n              main_storyseries: character.main_storyseries,\r\n              type_of_rep: character.type_of_rep,\r\n              romantic_orientation: character.romantic_orientation,\r\n              sexual_orientation: character.sexual_orientation,\r\n              genre: character.genre,\r\n              relationships: character.relationships,\r\n              rep_noteswarnings: character.rep_noteswarnings,\r\n              cover: character.cover,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                \"https://aroacedb-back.herokuapp.com/characters\",\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/suggest/characters/${params.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"suggest-character-info\">\r\n                    <div className=\"line\">\r\n                      <h2>\r\n                        <input\r\n                          id=\"character_name\"\r\n                          placeholder={character.character_name}\r\n                          type=\"text\"\r\n                          value={values.character_name}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h2>\r\n                      <input\r\n                        id=\"importance\"\r\n                        placeholder={character.importance}\r\n                        type=\"text\"\r\n                        value={values.importance}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Author</span>\r\n                        <input\r\n                          id=\"author\"\r\n                          placeholder={character.author}\r\n                          type=\"text\"\r\n                          value={values.author}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Gender</span>{\" \"}\r\n                        <input\r\n                          id=\"gender\"\r\n                          placeholder={character.gender}\r\n                          type=\"text\"\r\n                          value={values.gender}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Pairing</span>\r\n                        <input\r\n                          id=\"pairing_qpp_or_romantic\"\r\n                          placeholder={character.pairing_qpp_or_romantic}\r\n                          type=\"text\"\r\n                          value={values.pairing_qpp_or_romantic}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Series</span>\r\n                        <input\r\n                          id=\"main_storyseries\"\r\n                          placeholder={character.main_storyseries}\r\n                          type=\"text\"\r\n                          value={values.main_storyseries}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Type of Rep</span>\r\n                        <input\r\n                          id=\"type_of_rep\"\r\n                          placeholder={character.type_of_rep}\r\n                          type=\"text\"\r\n                          value={values.type_of_rep}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Romantic orientation</span>\r\n                        <input\r\n                          id=\"romantic_orientation\"\r\n                          placeholder={character.romantic_orientation}\r\n                          type=\"text\"\r\n                          value={values.romantic_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Sexual Orientation</span>\r\n                        <input\r\n                          id=\"sexual_orientation\"\r\n                          placeholder={character.sexual_orientation}\r\n                          type=\"text\"\r\n                          value={values.sexual_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Genre</span>\r\n                        <input\r\n                          id=\"genre\"\r\n                          placeholder={character.genre}\r\n                          type=\"text\"\r\n                          value={values.genre}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Relationships</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"relationships\"\r\n                        placeholder={character.relationships}\r\n                        type=\"text\"\r\n                        value={values.relationships}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Notes & Warnings</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder={character.rep_noteswarnings}\r\n                        type=\"text\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Cover</span>\r\n                      </p>\r\n                      <input\r\n                        id=\"cover\"\r\n                        placeholder={character.cover}\r\n                        type=\"text\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"buttons\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        console.log(\"delete from database\");\r\n                        fetchWithTokenNoBody(\r\n                          `https://aroacedb-back.herokuapp.com/suggest/characters/${params.id}`,\r\n                          \"DELETE\",\r\n                          token\r\n                        )\r\n                          .then((res) => res.json())\r\n                          .then((resJson) => {\r\n                            console.log(resJson);\r\n                            history.push(\"/success\");\r\n                          });\r\n\r\n                        history.push(\"/success\");\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Add Character to Database\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\all-characters\\all-characters.js",["262"],"import \"./all-characters.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableCharacter from \"../../components/table-character/table\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function AllCharacters() {\r\n  const [characters, setCharacters] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\r\n      `https://aroacedb-back.herokuapp.com/characters?offset=${\r\n        currentPage * 20 - 20\r\n      }`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const data = resJson.data.paginated_characters;\r\n        console.log(\"characters:\", data);\r\n        setCharacters(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"AllCharacters\">\r\n      <Sidebar />\r\n\r\n      <MobileHeader />\r\n      <div className=\"all-characters-container\">\r\n        <div className=\"title\">\r\n          <h2>All Characters</h2>\r\n          <a href=\"/add-character\">Add character</a>\r\n        </div>\r\n        <TableCharacter content={characters} type=\"regular\" id=\"character\" />\r\n\r\n        {/* <ReactPaginate\r\n          pageCount={totalPages}\r\n          pageRangeDisplayed={5}\r\n          marginPagesDisplayed={2}\r\n          previousLabel=\"Previous\"\r\n          nextLabel=\"Next\"\r\n          onPageChange={handlePageClick}\r\n        /> */}\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\pagination\\pagination.js",["263"],"import \"./pagination.css\";\r\nimport React from \"react\";\r\n\r\nexport default function Pagination(props) {\r\n  const { totalPages, setCurrentPage, currentPage } = props;\r\n\r\n  const pages = [];\r\n  const montarPaginas = (total) => {\r\n    for (let i = 1; i <= total; i++) {\r\n      pages.push(i);\r\n    }\r\n  };\r\n\r\n  montarPaginas(totalPages);\r\n  return (\r\n    <div className=\"Pagination\">\r\n      {totalPages ? (\r\n        <div className=\"placeholder\">\r\n          {pages.map((page) => {\r\n            return (\r\n              <span\r\n                onClick={() => {\r\n                  setCurrentPage(page);\r\n                }}\r\n              >\r\n                {page}\r\n              </span>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\update-character\\update-character.js",["264","265","266","267"],"import React from \"react\";\r\nimport \"./update-character.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport SidebarAdmin from \"../../components/sidebar-admin/sidebar-admin\";\r\nimport { fazerRequisicaoComBody } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Stories from \"../../components/stories/stories\";\r\nimport Reviews from \"../../components/reviews/reviews\";\r\n\r\nexport default function UpdateCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const [stories, setStories] = React.useState([]);\r\n  const [reviews, setReviews] = React.useState([]);\r\n  const { params } = useRouteMatch();\r\n\r\n  React.useEffect(() => {\r\n    fetch(`https://aroacedb-back.herokuapp.com/characters/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setCharacter(resJson.dados.character[0]);\r\n      });\r\n\r\n    fetch(`https://aroacedb-back.herokuapp.com/stories/character/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        const possibleStories = resJson.dados.stories;\r\n        if (possibleStories.length !== 0) {\r\n          console.log(possibleStories);\r\n          setStories(possibleStories);\r\n        }\r\n      });\r\n\r\n    fetch(`https://aroacedb-back.herokuapp.com/reviews/character/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        const possibleReviews = resJson.dados.reviews;\r\n        console.log(resJson);\r\n        if (possibleReviews.length !== 0) {\r\n          console.log(possibleReviews);\r\n          setReviews(possibleReviews);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"UpdateCharacter\">\r\n      <SidebarAdmin />\r\n      <div className=\"character-container\">\r\n        <div className=\"suggest\">\r\n          <h2 class=\"title\">Update character</h2>\r\n\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              character_name: character.character_name,\r\n              author: character.author,\r\n              gender: character.gender,\r\n              importance: character.importance,\r\n              pairing_qpp_or_romantic: character.pairing_qpp_or_romantic,\r\n              main_storyseries: character.main_storyseries,\r\n              type_of_rep: character.type_of_rep,\r\n              romantic_orientation: character.romantic_orientation,\r\n              sexual_orientation: character.sexual_orientation,\r\n              genre: character.genre,\r\n              relationships: character.relationships,\r\n              rep_noteswarnings: character.rep_noteswarnings,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              //   fazerRequisicaoComBody(\r\n              //     \"https://aroacedb-back.herokuapp.com/character\",\r\n              //     \"PUT\",\r\n              //     values\r\n              //   )\r\n              //     .then((res) => res.json())\r\n              //     .then((resJson) => {\r\n              //       console.log(resJson);\r\n              //     });\r\n              //s history.push(\"/success\");\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"suggest-character-info\">\r\n                    <div className=\"line\">\r\n                      <h2>\r\n                        <input\r\n                          id=\"character_name\"\r\n                          placeholder={character.character_name}\r\n                          type=\"text\"\r\n                          value={values.character_name}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h2>\r\n                      <input\r\n                        id=\"importance\"\r\n                        placeholder={character.importance}\r\n                        type=\"text\"\r\n                        value={values.importance}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Author</span>\r\n                        <input\r\n                          id=\"author\"\r\n                          placeholder={character.author}\r\n                          type=\"text\"\r\n                          value={values.author}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Gender</span>{\" \"}\r\n                        <input\r\n                          id=\"gender\"\r\n                          placeholder={character.gender}\r\n                          type=\"text\"\r\n                          value={values.gender}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Pairing</span>\r\n                        <input\r\n                          id=\"pairing_qpp_or_romantic\"\r\n                          placeholder={character.pairing_qpp_or_romantic}\r\n                          type=\"text\"\r\n                          value={values.pairing_qpp_or_romantic}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Series</span>\r\n                        <input\r\n                          id=\"main_storyseries\"\r\n                          placeholder={character.main_storyseries}\r\n                          type=\"text\"\r\n                          value={values.main_storyseries}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Type of Rep</span>\r\n                        <input\r\n                          id=\"type_of_rep\"\r\n                          placeholder={character.type_of_rep}\r\n                          type=\"text\"\r\n                          value={values.type_of_rep}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Romantic orientation</span>\r\n                        <input\r\n                          id=\"romantic_orientation\"\r\n                          placeholder={character.romantic_orientation}\r\n                          type=\"text\"\r\n                          value={values.romantic_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Sexual Orientation</span>\r\n                        <input\r\n                          id=\"sexual_orientation\"\r\n                          placeholder={character.sexual_orientation}\r\n                          type=\"text\"\r\n                          value={values.sexual_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Genre</span>\r\n                        <input\r\n                          id=\"genre\"\r\n                          placeholder={character.genre}\r\n                          type=\"text\"\r\n                          value={values.genre}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Relationships</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"relationships\"\r\n                        placeholder={character.relationships}\r\n                        type=\"text\"\r\n                        value={values.relationships}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Notes & Warnings</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder={character.rep_noteswarnings}\r\n                        type=\"text\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"buttons\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        console.log(\"delete from database\");\r\n                        fetch(\r\n                          `https://aroacedb-back.herokuapp.com/characters/${params}`,\r\n                          {\r\n                            method: \"DELETE\",\r\n                            headers: { \"Content-Type\": \"application/json\" },\r\n                          }\r\n                        )\r\n                          .then((res) => res.json())\r\n                          .then((resJson) => {\r\n                            console.log(resJson);\r\n                          });\r\n\r\n                        //history.push(\"/success\");\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Update Character\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n        <Stories stories={stories} />\r\n        <Reviews reviews={reviews} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",["268","269"],"C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-story\\suggest-story.js",["270","271","272","273","274","275","276","277","278"],"import React from \"react\";\r\nimport \"./suggest-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fazerRequisicaoComBody } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestStory() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    fetch(`https://aroacedb-back.herokuapp.com/stories/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        //setCharacter(resJson.data.character[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Suggest a Story</h3>\r\n          <Formik\r\n            initialValues={{\r\n              story_title: \"\",\r\n              series_or_anthology: \"\",\r\n              genre: \"\",\r\n              story_length: \"\",\r\n              type_of_rep: \"\",\r\n              character_importance: \"\",\r\n              rep_noteswarnings: \"\",\r\n              other_noteswarnings: \"\",\r\n              cover: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              values.character_id = params.id;\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetch(\"https://aroacedb-back.herokuapp.com/suggest/stories\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n              })\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <label>Story title</label>\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <label>Story length</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"story_length\"\r\n                            type=\"text\"\r\n                            placeholder=\"Story length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Character importance</label>\r\n                        <input\r\n                          id=\"character_importance\"\r\n                          type=\"text\"\r\n                          placeholder=\"Character importance\"\r\n                          value={values.character_importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <label>Series title</label>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <label>Genres</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Type of Rep</label>\r\n                        <span className=\"to-capitalize\">\r\n                          <input\r\n                            id=\"type_of_rep\"\r\n                            type=\"text\"\r\n                            placeholder=\"type of rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <span>Rep Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Other Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Cover</span>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Suggest\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-story\\update-story.js",["279","280","281","282","283","284"],"import React from \"react\";\r\nimport \"./update-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function UpdateStory() {\r\n  const [story, setStory] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n    fetch(`https://aroacedb-back.herokuapp.com/stories/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson.data.story[0]);\r\n\r\n        setStory(resJson.data.story[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Update Story</h3>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              story_title: story.story_title,\r\n              series_or_anthology: story.series_or_anthology,\r\n              genre: story.genre,\r\n              story_length: story.story_length,\r\n              type_of_rep: story.type_of_rep,\r\n              character_importance: story.character_importance,\r\n              rep_noteswarnings: story.rep_noteswarnings,\r\n              other_noteswarnings: story.other_noteswarnings,\r\n              cover: story.cover,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/stories/${story.id}`,\r\n                \"PUT\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <label>Story title</label>\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <label>Story length</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"story_length\"\r\n                            type=\"text\"\r\n                            placeholder=\"Story length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Character importance</label>\r\n                        <input\r\n                          id=\"chracter_importance\"\r\n                          type=\"text\"\r\n                          placeholder=\"Character importance\"\r\n                          value={values.character_importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <label>Series title</label>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <label>Genres</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Type of Rep</label>\r\n                        <span className=\"to-capitalize\">\r\n                          <input\r\n                            id=\"type_of_rep\"\r\n                            type=\"text\"\r\n                            placeholder=\"type of rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <span>Rep Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Other Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Cover</span>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Update\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggest-review\\suggest-review.js",["285","286","287","288","289","290","291","292","293"],"import React from \"react\";\r\nimport \"./suggest-review.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fazerRequisicaoComBody } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestReview() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Suggest a Review</h3>\r\n          <Formik\r\n            initialValues={{\r\n              review_for: \"\",\r\n              reviewer: \"\",\r\n              ownvoice_for: \"\",\r\n              link: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              values.character_id = params.id;\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetch(\"https://aroacedb-back.herokuapp.com/suggest/reviews\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(values),\r\n              })\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"ReviewInfo\">\r\n                    <div className=\"container\">\r\n                      <div className=\"content-hundred\">\r\n                        <div className=\"block\">\r\n                          <label>\r\n                            Review for\r\n                            <input\r\n                              id=\"review_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Review for\"\r\n                              value={values.review_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n\r\n                          <label>\r\n                            Link\r\n                            <input\r\n                              id=\"link\"\r\n                              type=\"text\"\r\n                              placeholder=\"Link\"\r\n                              value={values.link}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <span className=\"block\">\r\n                          <label>\r\n                            Reviewer\r\n                            <input\r\n                              id=\"reviewer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Reviewer\"\r\n                              value={values.reviewer}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            Ownvoices for\r\n                            <input\r\n                              id=\"ownvoice_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Ownvoice for\"\r\n                              value={values.ownvoice_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"review-right\">\r\n                    Suggest\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-stories\\suggested-stories.js",["294"],"import \"./suggested-stories.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Table from \"../../components/table-character/table\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableStory from \"../../components/table-story/table\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedStories() {\r\n  const [stories, setStories] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/suggest/stories\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        const data = resJson.data.paginated_stories;\r\n        console.log(data);\r\n        setStories(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"SuggestedCharacters\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggested-container\">\r\n        <div className=\"title\">\r\n          <h2>Suggested Stories</h2>\r\n        </div>\r\n        <div className=\"table-container\">\r\n          <TableStory content={stories} type=\"suggest\" id=\"story\" />\r\n        </div>\r\n\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-reviews\\suggested-reviews.js",["295"],"import \"./suggested-reviews.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Table from \"../../components/table-character/table\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableReview from \"../../components/table-review/table\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedReviews() {\r\n  const [reviews, setReviews] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    fetch(\"https://aroacedb-back.herokuapp.com/suggest/reviews\")\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        const data = resJson.data.paginated_reviews;\r\n        console.log(data);\r\n        setReviews(data);\r\n        setCurrentPage(resJson.data.currentPage);\r\n        setTotalPages(resJson.data.totalPages);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"SuggestedCharacters\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"suggested-container\">\r\n        <div className=\"title\">\r\n          <h2>Suggested Reviews</h2>\r\n        </div>\r\n        <TableReview content={reviews} type=\"suggest\" id=\"review\" />\r\n        <Pagination\r\n          totalPages={totalPages}\r\n          setCurrentPage={setCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-character\\update-character.js",["296","297","298","299"],"import React from \"react\";\r\nimport \"./update-character.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithBody, fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function UpdateCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const [token, setToken] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/characters/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setCharacter(resJson.data.character[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Character\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"character-container\">\r\n        <div className=\"suggest\">\r\n          <h2 class=\"title\">Update character</h2>\r\n\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              character_name: character.character_name,\r\n              author: character.author,\r\n              gender: character.gender,\r\n              importance: character.importance,\r\n              pairing_qpp_or_romantic: character.pairing_qpp_or_romantic,\r\n              main_storyseries: character.main_storyseries,\r\n              type_of_rep: character.type_of_rep,\r\n              romantic_orientation: character.romantic_orientation,\r\n              sexual_orientation: character.sexual_orientation,\r\n              genre: character.genre,\r\n              relationships: character.relationships,\r\n              rep_noteswarnings: character.rep_noteswarnings,\r\n              cover: character.cover,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(token);\r\n              console.log(`http:localhost:8081/characters/${params.id}`);\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/characters/${params.id}`,\r\n                \"PUT\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n              //s history.push(\"/success\");\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"suggest-character-info\">\r\n                    <div className=\"line\">\r\n                      <h2>\r\n                        <input\r\n                          id=\"character_name\"\r\n                          placeholder={character.character_name}\r\n                          type=\"text\"\r\n                          value={values.character_name}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h2>\r\n                      <input\r\n                        id=\"importance\"\r\n                        placeholder={character.importance}\r\n                        type=\"text\"\r\n                        value={values.importance}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Author</span>\r\n                        <input\r\n                          id=\"author\"\r\n                          placeholder={character.author}\r\n                          type=\"text\"\r\n                          value={values.author}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Gender</span>{\" \"}\r\n                        <input\r\n                          id=\"gender\"\r\n                          placeholder={character.gender}\r\n                          type=\"text\"\r\n                          value={values.gender}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Pairing</span>\r\n                        <input\r\n                          id=\"pairing_qpp_or_romantic\"\r\n                          placeholder={character.pairing_qpp_or_romantic}\r\n                          type=\"text\"\r\n                          value={values.pairing_qpp_or_romantic}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Series</span>\r\n                        <input\r\n                          id=\"main_storyseries\"\r\n                          placeholder={character.main_storyseries}\r\n                          type=\"text\"\r\n                          value={values.main_storyseries}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Type of Rep</span>\r\n                        <input\r\n                          id=\"type_of_rep\"\r\n                          placeholder={character.type_of_rep}\r\n                          type=\"text\"\r\n                          value={values.type_of_rep}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Romantic orientation</span>\r\n                        <input\r\n                          id=\"romantic_orientation\"\r\n                          placeholder={character.romantic_orientation}\r\n                          type=\"text\"\r\n                          value={values.romantic_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Sexual Orientation</span>\r\n                        <input\r\n                          id=\"sexual_orientation\"\r\n                          placeholder={character.sexual_orientation}\r\n                          type=\"text\"\r\n                          value={values.sexual_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Genre</span>\r\n                        <input\r\n                          id=\"genre\"\r\n                          placeholder={character.genre}\r\n                          type=\"text\"\r\n                          value={values.genre}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Relationships</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"relationships\"\r\n                        placeholder={character.relationships}\r\n                        type=\"text\"\r\n                        value={values.relationships}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Notes & Warnings</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder={character.rep_noteswarnings}\r\n                        type=\"text\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Cover</span>\r\n                      </p>\r\n                      <input\r\n                        id=\"cover\"\r\n                        placeholder={character.cover}\r\n                        type=\"text\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"buttons\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        console.log(\"delete from database\");\r\n                        fetch(\r\n                          `https://aroacedb-back.herokuapp.com/suggest/${params}`,\r\n                          {\r\n                            method: \"DELETE\",\r\n                            headers: { \"Content-Type\": \"application/json\" },\r\n                          }\r\n                        )\r\n                          .then((res) => res.json())\r\n                          .then((resJson) => {\r\n                            console.log(resJson);\r\n                          });\r\n\r\n                        //history.push(\"/success\");\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Update Character to Database\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-character\\add-character.js",["300","301","302","303"],"import React from \"react\";\r\nimport \"./add-character.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function AddCharacter() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"Character\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"character-container\">\r\n        <div className=\"suggest\">\r\n          <h2 class=\"title\">Add a character</h2>\r\n\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              character_name: \"\",\r\n              author: \"\",\r\n              gender: \"\",\r\n              importance: \"\",\r\n              pairing_qpp_or_romantic: \"\",\r\n              main_storyseries: \"\",\r\n              type_of_rep: \"\",\r\n              romantic_orientation: \"\",\r\n              sexual_orientation: \"\",\r\n              genre: \"\",\r\n              relationships: \"\",\r\n              rep_noteswarnings: \"\",\r\n              cover: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              const token = localStorage.getItem(\"token\");\r\n              console.log(token);\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                \"https://aroacedb-back.herokuapp.com/characters\",\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n              //s history.push(\"/success\");\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"suggest-character-info\">\r\n                    <div className=\"line\">\r\n                      <h2>\r\n                        <input\r\n                          id=\"character_name\"\r\n                          placeholder={character.character_name}\r\n                          type=\"text\"\r\n                          value={values.character_name}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h2>\r\n                      <input\r\n                        id=\"importance\"\r\n                        placeholder={character.importance}\r\n                        type=\"text\"\r\n                        value={values.importance}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Author</span>\r\n                        <input\r\n                          id=\"author\"\r\n                          placeholder={character.author}\r\n                          type=\"text\"\r\n                          value={values.author}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Gender</span>{\" \"}\r\n                        <input\r\n                          id=\"gender\"\r\n                          placeholder={character.gender}\r\n                          type=\"text\"\r\n                          value={values.gender}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Pairing</span>\r\n                        <input\r\n                          id=\"pairing_qpp_or_romantic\"\r\n                          placeholder={character.pairing_qpp_or_romantic}\r\n                          type=\"text\"\r\n                          value={values.pairing_qpp_or_romantic}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Series</span>\r\n                        <input\r\n                          id=\"main_storyseries\"\r\n                          placeholder={character.main_storyseries}\r\n                          type=\"text\"\r\n                          value={values.main_storyseries}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Type of Rep</span>\r\n                        <input\r\n                          id=\"type_of_rep\"\r\n                          placeholder={character.type_of_rep}\r\n                          type=\"text\"\r\n                          value={values.type_of_rep}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Romantic orientation</span>\r\n                        <input\r\n                          id=\"romantic_orientation\"\r\n                          placeholder={character.romantic_orientation}\r\n                          type=\"text\"\r\n                          value={values.romantic_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"chunk\">\r\n                        <span>Sexual Orientation</span>\r\n                        <input\r\n                          id=\"sexual_orientation\"\r\n                          placeholder={character.sexual_orientation}\r\n                          type=\"text\"\r\n                          value={values.sexual_orientation}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\">\r\n                      <div className=\"chunk\">\r\n                        <span>Genre</span>\r\n                        <input\r\n                          id=\"genre\"\r\n                          placeholder={character.genre}\r\n                          type=\"text\"\r\n                          value={values.genre}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Relationships</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"relationships\"\r\n                        placeholder={character.relationships}\r\n                        type=\"text\"\r\n                        value={values.relationships}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Notes & Warnings</span>\r\n                      </p>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder={character.rep_noteswarnings}\r\n                        type=\"text\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div clasName=\"square\">\r\n                      <p>\r\n                        <span>Cover</span>\r\n                      </p>\r\n                      <input\r\n                        id=\"cover\"\r\n                        placeholder={character.cover}\r\n                        type=\"text\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"buttons-add\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Add Character to Database\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\update-review\\update-review.js",["304","305","306","307","308","309","310"],"import React from \"react\";\r\nimport \"./update-review.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function UpdateReview() {\r\n  const [review, setReview] = React.useState({});\r\n  const { params } = useRouteMatch();\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n    fetch(`https://aroacedb-back.herokuapp.com/reviews/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setReview(resJson.data.review[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Update Review</h3>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              review_for: review.review_for,\r\n              reviewer: review.reviewer,\r\n              ownvoice_for: review.ownvoice_for,\r\n              link: review.link,\r\n              character_id: review.character_id,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/reviews/${review.id}`,\r\n                \"PUT\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"ReviewInfo\">\r\n                    <div className=\"container\">\r\n                      <div className=\"content-hundred\">\r\n                        <div className=\"block\">\r\n                          <label>\r\n                            Review for\r\n                            <input\r\n                              id=\"review_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Review for\"\r\n                              value={values.review_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n\r\n                          <label>\r\n                            Link\r\n                            <input\r\n                              id=\"link\"\r\n                              type=\"text\"\r\n                              placeholder=\"Link\"\r\n                              value={values.link}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <span className=\"block\">\r\n                          <label>\r\n                            Reviewer\r\n                            <input\r\n                              id=\"reviewer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Reviewer\"\r\n                              value={values.reviewer}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            Ownvoices for\r\n                            <input\r\n                              id=\"ownvoices_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Ownvoice for\"\r\n                              value={values.ownvoice_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"review-right\">\r\n                    Update\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-story\\suggested-story.js",["311","312","313","314","315","316","317","318"],"import React from \"react\";\r\nimport \"./suggested-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport {\r\n  fazerRequisicaoComBody,\r\n  fetchWithToken,\r\n  fetchWithTokenNoBody,\r\n} from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedStory() {\r\n  const [story, setStory] = React.useState({});\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [cover, setCover] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/suggest/stories/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson.data.story[0]);\r\n        setStory(resJson.data.story[0]);\r\n        console.log(resJson.data.story[0].cover);\r\n        setCover(resJson.data.story[0].cover);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Suggested Story</h3>\r\n\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              story_title: story.story_title,\r\n              series_or_anthology: story.series_or_anthology,\r\n              genre: story.genre,\r\n              story_length: story.story_length,\r\n              type_of_rep: story.type_of_rep,\r\n              character_importance: story.character_importance,\r\n              rep_noteswarnings: story.rep_noteswarnings,\r\n              other_noteswarnings: story.other_noteswarnings,\r\n              character_id: story.character_id,\r\n              cover: story.cover,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/stories`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/suggest/stories/${story.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <label>Story title</label>\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <label>Story length</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"story_length\"\r\n                            type=\"text\"\r\n                            placeholder=\"Story length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Character importance</label>\r\n                        <input\r\n                          id=\"chracter_importance\"\r\n                          type=\"text\"\r\n                          placeholder=\"Character importance\"\r\n                          value={values.character_importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <label>Series title</label>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <label>Genres</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Type of Rep</label>\r\n                        <span className=\"to-capitalize\">\r\n                          <input\r\n                            id=\"type_of_rep\"\r\n                            type=\"text\"\r\n                            placeholder=\"type of rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <span>Rep Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Other Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Cover</span>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <img src={values.cover} alt=\"cover\" />\r\n                    <div className=\"buttons\">\r\n                      <button\r\n                        onClick={() => {\r\n                          fetchWithTokenNoBody(\r\n                            `https://aroacedb-back.herokuapp.com/suggest/stories/${story.id}`,\r\n                            \"DELETE\",\r\n                            token\r\n                          )\r\n                            .then((res) => res.json())\r\n                            .then((resJson) => {\r\n                              console.log(resJson);\r\n                              history.push(\"/success\");\r\n                            });\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                      <button\r\n                        type=\"submit\"\r\n                        disabled={isSubmitting}\r\n                        className=\"submit\"\r\n                      >\r\n                        Add Story to Database\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-story\\add-story.js",["319","320","321","322","323","324","325","326","327","328"],"import React from \"react\";\r\nimport \"./add-story.css\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function AddStory() {\r\n  const [character, setCharacter] = React.useState({});\r\n  const [token, setToken] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n  const [file, setFile] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Add Story</h3>\r\n\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              story_title: \"\",\r\n              series_or_anthology: \"\",\r\n              genre: \"\",\r\n              story_length: \"\",\r\n              type_of_rep: \"\",\r\n              character_importance: \"\",\r\n              rep_noteswarnings: \"\",\r\n              other_noteswarnings: \"\",\r\n              character_id: params.id,\r\n              cover: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/stories`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"StoryInfo\">\r\n                    <div className=\"line\">\r\n                      <h4>\r\n                        <label>Story title</label>\r\n                        <input\r\n                          id=\"story_title\"\r\n                          type=\"text\"\r\n                          placeholder=\"Story title\"\r\n                          value={values.story_title}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </h4>\r\n                      <span>\r\n                        <label>Story length</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"story_length\"\r\n                            type=\"text\"\r\n                            placeholder=\"Story length\"\r\n                            value={values.story_length}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Character importance</label>\r\n                        <input\r\n                          id=\"chracter_importance\"\r\n                          type=\"text\"\r\n                          placeholder=\"Character importance\"\r\n                          value={values.character_importance}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                      <span>\r\n                        <label>Series title</label>\r\n                        <input\r\n                          id=\"series_or_anthology\"\r\n                          type=\"text\"\r\n                          placeholder=\"Series title\"\r\n                          value={values.series_or_anthology}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </span>\r\n                      <span>\r\n                        <label>Genres</label>\r\n                        <span>\r\n                          <input\r\n                            id=\"genre\"\r\n                            type=\"text\"\r\n                            placeholder=\"Genre\"\r\n                            value={values.genre}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                      <span>\r\n                        <label>Type of Rep</label>\r\n                        <span className=\"to-capitalize\">\r\n                          <input\r\n                            id=\"type_of_rep\"\r\n                            type=\"text\"\r\n                            placeholder=\"type of rep\"\r\n                            value={values.type_of_rep}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                          />\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    <p>\r\n                      <span>Rep Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"rep_noteswarnings\"\r\n                        placeholder=\"representation notes and warnings\"\r\n                        value={values.rep_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Other Notes & Warnings</span>\r\n                      <textarea\r\n                        id=\"other_noteswarnings\"\r\n                        placeholder=\"other notes and warnings\"\r\n                        value={values.other_noteswarnings}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <p>\r\n                      <span>Cover</span>\r\n                      <input\r\n                        id=\"cover\"\r\n                        type=\"text\"\r\n                        placeholder=\"cover\"\r\n                        value={values.cover}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </p>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"submit\"\r\n                    >\r\n                      Add Story to Database\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\suggested-review\\suggested-review.js",["329","330","331","332","333","334","335","336"],"import React from \"react\";\r\nimport \"./suggested-review.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport CharacterInfo from \"../../components/character-info/character-info\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport {\r\n  fazerRequisicaoComBody,\r\n  fetchWithToken,\r\n  fetchWithTokenNoBody,\r\n} from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function SuggestedReview() {\r\n  const [review, setReview] = React.useState({});\r\n  const [token, setToken] = React.useState(\"\");\r\n  const { params } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n\r\n    setToken(newToken);\r\n    fetch(`https://aroacedb-back.herokuapp.com/suggest/reviews/${params.id}`)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        console.log(resJson);\r\n        setReview(resJson.data.review[0]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Suggested Review</h3>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              review_for: review.review_for,\r\n              reviewer: review.reviewer,\r\n              ownvoice_for: review.ownvoice_for,\r\n              link: review.link,\r\n              character_id: review.character_id,\r\n            }}\r\n            onSubmit={(values) => {\r\n              values.character_id = review.character_id;\r\n              console.log(JSON.stringify(values, null, 2));\r\n              console.log(review.character_id);\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/reviews`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                });\r\n              fetchWithTokenNoBody(\r\n                `https://aroacedb-back.herokuapp.com/suggest/reviews/${review.id}`,\r\n                \"DELETE\",\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"ReviewInfo\">\r\n                    <div className=\"container\">\r\n                      <div className=\"content-hundred\">\r\n                        <div className=\"block\">\r\n                          <label>\r\n                            Review for\r\n                            <input\r\n                              id=\"review_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Review for\"\r\n                              value={values.review_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n\r\n                          <label>\r\n                            Link\r\n                            <input\r\n                              id=\"link\"\r\n                              type=\"text\"\r\n                              placeholder=\"Link\"\r\n                              value={values.link}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <span className=\"block\">\r\n                          <label>\r\n                            Reviewer\r\n                            <input\r\n                              id=\"reviewer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Reviewer\"\r\n                              value={values.reviewer}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            Ownvoices for\r\n                            <input\r\n                              id=\"ownvoices_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Ownvoice for\"\r\n                              value={values.ownvoice_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    onClick={() => {\r\n                      fetchWithTokenNoBody(\r\n                        `https://aroacedb-back.herokuapp.com/suggest/reviews/${review.id}`,\r\n                        \"DELETE\",\r\n                        token\r\n                      )\r\n                        .then((res) => res.json())\r\n                        .then((resJson) => {\r\n                          console.log(resJson);\r\n                          history.push(\"/success\");\r\n                        });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  <button type=\"submit\" className=\"review-right\">\r\n                    Add to Database\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\pages\\add-review\\add-review.js",["337","338","339","340","341","342"],"import React from \"react\";\r\nimport \"./add-review.css\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { fetchWithToken } from \"../../utils/fetch\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport StoryInfo from \"../../components/story-info/story-info\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MobileHeader from \"../../components/mobile-header/mobile-header\";\r\n\r\nexport default function AddReview() {\r\n  const { params } = useRouteMatch();\r\n  const [token, setToken] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"SuggestStory\">\r\n      <Sidebar />\r\n      <MobileHeader />\r\n      <div className=\"story-container\">\r\n        <div className=\"stories\">\r\n          <h3>Add a Review</h3>\r\n          <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n              review_for: \"\",\r\n              reviewer: \"\",\r\n              ownvoice_for: \"\",\r\n              link: \"\",\r\n              character_id: params.id,\r\n            }}\r\n            onSubmit={(values) => {\r\n              console.log(JSON.stringify(values, null, 2));\r\n              fetchWithToken(\r\n                `https://aroacedb-back.herokuapp.com/reviews`,\r\n                \"POST\",\r\n                values,\r\n                token\r\n              )\r\n                .then((res) => res.json())\r\n                .then((resJson) => {\r\n                  console.log(resJson);\r\n                  history.push(\"/success\");\r\n                });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                touched,\r\n                errors,\r\n                isSubmitting,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"ReviewInfo\">\r\n                    <div className=\"container\">\r\n                      <div className=\"content-hundred\">\r\n                        <div className=\"block\">\r\n                          <label>\r\n                            Review for\r\n                            <input\r\n                              id=\"review_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Review for\"\r\n                              value={values.review_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n\r\n                          <label>\r\n                            Link\r\n                            <input\r\n                              id=\"link\"\r\n                              type=\"text\"\r\n                              placeholder=\"Link\"\r\n                              value={values.link}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </div>\r\n                        <span className=\"block\">\r\n                          <label>\r\n                            Reviewer\r\n                            <input\r\n                              id=\"reviewer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Reviewer\"\r\n                              value={values.reviewer}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          <label>\r\n                            Ownvoices for\r\n                            <input\r\n                              id=\"ownvoices_for\"\r\n                              type=\"text\"\r\n                              placeholder=\"Ownvoice for\"\r\n                              value={values.ownvoice_for}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"review-right\">\r\n                    Add Review to Database\r\n                  </button>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-review\\row.js",["343","344"],"import \"./row.css\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\n\r\nexport default function RowReview(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <tr class=\"tbody\">\r\n      <td>{content.review_for}</td>\r\n      <td>{content.reviewer}</td>\r\n      <td>\r\n        <a href={`/suggested-review/${content.id}`}>\r\n          <img src={ExternalLink} alt=\"profile link\" />\r\n        </a>\r\n      </td>\r\n    </tr>\r\n\r\n    //   ) : (\r\n    //     <tr class=\"tbody\">\r\n    //       <td>{content.review_for}</td>\r\n    //       <td>{content.reviewer}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-review/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </tr>\r\n    //   )}\r\n\r\n    // <tr class=\"tbody\">\r\n    //   {id === \"character\" ? (\r\n    //     <div>\r\n    //   <td>{content.character_name}</td>\r\n    //   <td>{content.author}</td>\r\n    //   <td>{content.importance}</td>\r\n    //   <td>{content.romantic_orientation}</td>\r\n    //   <td>{content.sexual_orientation}</td>\r\n    //   <td>\r\n    //     {type === \"regular\" ? (\r\n    //       <a href={`/character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     ) : (\r\n    //       <a href={`/suggested-character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     )}\r\n    //   </td>\r\n    //     </div>\r\n    //   ) : id === \"story\" ? (\r\n    //     <div>\r\n    //       <td>{content.story_title}</td>\r\n    //       <td>{content.author}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-story/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   ) : (\r\n    //     <div>\r\n    //       <td>{content.review_for}</td>\r\n    //       <td>{content.reviewer}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-review/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   )}\r\n    // </tr>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-story\\row.js",["345","346"],"import \"./row.css\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\n\r\nexport default function RowStory(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <tr class=\"tbody\">\r\n      <td>{content.story_title}</td>\r\n      <td>{content.author}</td>\r\n      <td>\r\n        <a href={`/suggested-story/${content.id}`}>\r\n          <img src={ExternalLink} alt=\"profile link\" />\r\n        </a>\r\n      </td>\r\n    </tr>\r\n\r\n    // <tr class=\"tbody\">\r\n    //   {id === \"character\" ? (\r\n    //     <div>\r\n    //   <td>{content.character_name}</td>\r\n    //   <td>{content.author}</td>\r\n    //   <td>{content.importance}</td>\r\n    //   <td>{content.romantic_orientation}</td>\r\n    //   <td>{content.sexual_orientation}</td>\r\n    //   <td>\r\n    //     {type === \"regular\" ? (\r\n    //       <a href={`/character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     ) : (\r\n    //       <a href={`/suggested-character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     )}\r\n    //   </td>\r\n    //     </div>\r\n    //   ) : id === \"story\" ? (\r\n    //     <div>\r\n    //       <td>{content.story_title}</td>\r\n    //       <td>{content.author}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-story/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   ) : (\r\n    //     <div>\r\n    //       <td>{content.review_for}</td>\r\n    //       <td>{content.reviewer}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-review/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   )}\r\n    // </tr>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-character\\table.js",["347","348","349"],"import RowCharacter from \"../row-character/row\";\r\nimport Row from \"../row-review/row\";\r\nimport RowReview from \"../row-review/row\";\r\nimport RowStory from \"../row-story/row\";\r\nimport \"./table.css\";\r\n\r\nfunction TableCharacter(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <table class=\"table\">\r\n      <thead>\r\n        {id === \"character\" ? (\r\n          <tr>\r\n            <th>Character Name</th>\r\n            <th>Author</th>\r\n            <th>More</th>\r\n          </tr>\r\n        ) : id === \"story\" ? (\r\n          <tr>\r\n            <th>Story Title</th>\r\n            <th>Author</th>\r\n          </tr>\r\n        ) : (\r\n          <tr>\r\n            <th>Review for</th>\r\n            <th>Reviewer</th>\r\n          </tr>\r\n        )}\r\n      </thead>\r\n\r\n      <tbody>\r\n        {content.map((c) => {\r\n          return <RowCharacter content={c} type={type} id={id} />;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TableCharacter;\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-story\\table.js",["350","351","352"],"import RowCharacter from \"../row-review/row\";\r\nimport Row from \"../row-review/row\";\r\nimport RowReview from \"../row-review/row\";\r\nimport RowStory from \"../row-story/row\";\r\nimport \"./table.css\";\r\n\r\nfunction TableStory(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <table class=\"table\">\r\n      <thead>\r\n        {id === \"character\" ? (\r\n          <tr>\r\n            <th>Character Name</th>\r\n            <th>Author</th>\r\n            <th>Importance</th>\r\n            <th>Romantic Orientation</th>\r\n            <th>Sexual Orientation</th>\r\n            <th>More</th>\r\n          </tr>\r\n        ) : id === \"story\" ? (\r\n          <tr>\r\n            <th>Story Title</th>\r\n            <th>Author</th>\r\n          </tr>\r\n        ) : (\r\n          <tr>\r\n            <th>Review for</th>\r\n            <th>Reviewer</th>\r\n          </tr>\r\n        )}\r\n      </thead>\r\n\r\n      <tbody>\r\n        {content.map((c) => {\r\n          return <RowStory content={c} type={type} id={id} />;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TableStory;\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\table-review\\table.js",["353","354","355"],"import RowCharacter from \"../row-review/row\";\r\nimport Row from \"../row-review/row\";\r\nimport RowReview from \"../row-review/row\";\r\nimport RowStory from \"../row-story/row\";\r\nimport \"./table.css\";\r\n\r\nfunction TableReview(props) {\r\n  const { content, type, id } = props;\r\n\r\n  return (\r\n    <table class=\"table\">\r\n      <thead>\r\n        {id === \"character\" ? (\r\n          <tr>\r\n            <th>Character Name</th>\r\n            <th>Author</th>\r\n            <th>Importance</th>\r\n            <th>Romantic Orientation</th>\r\n            <th>Sexual Orientation</th>\r\n            <th>More</th>\r\n          </tr>\r\n        ) : id === \"story\" ? (\r\n          <tr>\r\n            <th>Story Title</th>\r\n            <th>Author</th>\r\n          </tr>\r\n        ) : (\r\n          <tr>\r\n            <th>Review for</th>\r\n            <th>Reviewer</th>\r\n          </tr>\r\n        )}\r\n      </thead>\r\n\r\n      <tbody>\r\n        {content.map((c) => {\r\n          return <RowReview content={c} type={type} id={id} />;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TableReview;\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\row-character\\row.js",["356"],"import \"./row.css\";\r\nimport ExternalLink from \"../../assets/external-link.png\";\r\n\r\nexport default function RowCharacter(props) {\r\n  const { content, type, id } = props;\r\n  return (\r\n    <tr class=\"tbody\">\r\n      <td>{content.character_name}</td>\r\n      <td>{content.author}</td>\r\n      <td>\r\n        {type === \"regular\" ? (\r\n          <a href={`/character/${content.id}`}>\r\n            <img src={ExternalLink} alt=\"profile link\" />\r\n          </a>\r\n        ) : (\r\n          <a href={`/suggested-character/${content.id}`}>\r\n            <img src={ExternalLink} alt=\"profile link\" />\r\n          </a>\r\n        )}\r\n      </td>\r\n    </tr>\r\n\r\n    // <tr class=\"tbody\">\r\n    //   {id === \"character\" ? (\r\n    //     <div>\r\n    //   <td>{content.character_name}</td>\r\n    //   <td>{content.author}</td>\r\n    //   <td>{content.importance}</td>\r\n    //   <td>{content.romantic_orientation}</td>\r\n    //   <td>{content.sexual_orientation}</td>\r\n    //   <td>\r\n    //     {type === \"regular\" ? (\r\n    //       <a href={`/character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     ) : (\r\n    //       <a href={`/suggested-character/${content.id}`}>\r\n    //         <img src={ExternalLink} alt=\"profile link\" />\r\n    //       </a>\r\n    //     )}\r\n    //   </td>\r\n    //     </div>\r\n    //   ) : id === \"story\" ? (\r\n    //     <div>\r\n    //       <td>{content.story_title}</td>\r\n    //       <td>{content.author}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-story/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   ) : (\r\n    //     <div>\r\n    //       <td>{content.review_for}</td>\r\n    //       <td>{content.reviewer}</td>\r\n    //       <td>\r\n    //         <a href={`/suggested-review/${content.id}`}>\r\n    //           <img src={ExternalLink} alt=\"profile link\" />\r\n    //         </a>\r\n    //       </td>\r\n    //     </div>\r\n    //   )}\r\n    // </tr>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\sidebar\\sidebar.js",["357"],"import React from \"react\";\r\nimport \"./sidebar.css\";\r\nimport { ReactComponent as HomeIcon } from \"../../assets/home-solid.svg\";\r\nimport { ReactComponent as DatabaseIcon } from \"../../assets/database-solid.svg\";\r\nimport { ReactComponent as FeatherIcon } from \"../../assets/feather-solid.svg\";\r\nimport { ReactComponent as BookmarkIcon } from \"../../assets/bookmark-solid.svg\";\r\nimport { ReactComponent as LoginIcon } from \"../../assets/user-cog-solid.svg\";\r\n\r\nexport default function Sidebar() {\r\n  const [token, setToken] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"SidebarAdmin\">\r\n      <div className=\"sidebar-container\">\r\n        <div className=\"icons\"></div>\r\n        <div className=\"sidebar-content\"></div>\r\n        <div className=\"sidebar-true-content\">\r\n          <div className=\"top\">\r\n            <div className=\"title-container\">\r\n              <h1>The Aroace Database</h1>\r\n            </div>\r\n            <div className=\"link-container\">\r\n              <a href=\"/\">\r\n                <HomeIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>Home</span>\r\n              </a>\r\n            </div>\r\n            {token ? (\r\n              <div className=\"link-container\">\r\n                <a href=\"/dashboard\">\r\n                  <BookmarkIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                  <span>Dashboard</span>\r\n                </a>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <div className=\"link-container\">\r\n              <a href=\"/about\">\r\n                <DatabaseIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>About the database</span>\r\n              </a>\r\n            </div>\r\n            <div className=\"link-container\">\r\n              <a href=\"/suggest-character\">\r\n                <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>Suggest a character</span>\r\n              </a>\r\n            </div>\r\n\r\n            {token ? (\r\n              <div className=\"div-container\">\r\n                <div className=\"link-container\">\r\n                  <a href=\"/all-characters\">\r\n                    <DatabaseIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                    <span>All characters</span>\r\n                  </a>\r\n                </div>\r\n                <div className=\"link-container\">\r\n                  <a href=\"/suggested-characters\">\r\n                    <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                    <span>Suggested characters</span>\r\n                  </a>\r\n                </div>\r\n\r\n                <div className=\"link-container\">\r\n                  <a href=\"/suggested-stories\">\r\n                    <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                    <span>Suggested stories</span>\r\n                  </a>\r\n                </div>\r\n\r\n                <div className=\"link-container\">\r\n                  <a href=\"/suggested-reviews\">\r\n                    <FeatherIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                    <span>Suggested reviews</span>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          {token ? (\r\n            <div className=\"link-container\">\r\n              <a\r\n                href=\"/\"\r\n                onClick={() => {\r\n                  localStorage.removeItem(\"token\");\r\n                }}\r\n              >\r\n                <LoginIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>Logout</span>\r\n              </a>\r\n            </div>\r\n          ) : (\r\n            <div className=\"link-container\">\r\n              <a href=\"/login\">\r\n                <LoginIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n                <span>Admin Login</span>\r\n              </a>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\results\\results.js",["358","359","360"],"import React from \"react\";\r\nimport \"./results.css\";\r\nimport SingleCharacter from \"../single-character/single-character\";\r\nimport { ReactComponent as ButtonIcon } from \"../../assets/chevron-right-solid.svg\";\r\nimport Pagination from \"../pagination/pagination\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport Sidebar from \"../sidebar/sidebar\";\r\n\r\nfunction Results() {\r\n  const [search, setSearch] = React.useState([]);\r\n  const [results, setResults] = React.useState([]);\r\n  const [filteredResults, setFilteredResults] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n  const { params } = useRouteMatch();\r\n\r\n  React.useEffect(() => {\r\n    const currentSearch = params.search;\r\n\r\n    if (search) {\r\n      console.log(search);\r\n      fetch(\r\n        `https://aroacedb-back.herokuapp.com/characters?search=${search}&&offset=${\r\n          currentPage * 20 - 20\r\n        }`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((resJson) => {\r\n          console.log(\"first or fake results:\", resJson);\r\n          const newResults = resJson.data.paginated_characters;\r\n\r\n          setResults(newResults);\r\n          setCurrentPage(resJson.data.currentPage);\r\n          setTotalPages(resJson.data.totalPages);\r\n        });\r\n    } else {\r\n      fetch(\r\n        `https://aroacedb-back.herokuapp.com/characters?search=${currentSearch}&&offset=${\r\n          currentPage * 20 - 20\r\n        }`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((resJson) => {\r\n          console.log(\"first or fake results:\", resJson);\r\n          const newResults = resJson.data.paginated_characters;\r\n\r\n          setResults(newResults);\r\n          setCurrentPage(resJson.data.currentPage);\r\n          setTotalPages(resJson.data.totalPages);\r\n        });\r\n    }\r\n    // const result = JSON.parse(localStorage.getItem(\"results\"));\r\n    // console.log(result);\r\n    // setResults(result);\r\n    // const searches = params.search;\r\n    // console.log(searches);\r\n    // console.log(results);\r\n    // fetch(\r\n    //   `https://aroacedb-back.herokuapp.com/characters?search=${search}&&offset=${\r\n    //     currentPage * 20 - 20\r\n    //   }`\r\n    // )\r\n    //   .then((res) => res.json())\r\n    //   .then((resJson) => {\r\n    //     console.log(\"first or fake results:\", resJson);\r\n    //     const newResults = resJson.data.paginated_characters;\r\n\r\n    //     setResults(newResults);\r\n    //     setCurrentPage(resJson.data.currentPage);\r\n    //     setTotalPages(resJson.data.totalPages);\r\n    //   });\r\n  }, [currentPage, search]);\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <Sidebar />\r\n\r\n      <div className=\"home-container\">\r\n        <form\r\n          onSubmit={(event) => {\r\n            console.log(search);\r\n            const newSearch = search.split(\" \");\r\n            console.log(search);\r\n            setCurrentPage(1);\r\n            setTotalPages(0);\r\n            setSearch(newSearch);\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"search...\"\r\n            onBlur={(event) => {\r\n              setSearch(event.target.value);\r\n            }}\r\n          ></input>\r\n          <button>\r\n            <ButtonIcon fill=\"white\" height=\"20px\" width=\"30px\" />\r\n          </button>\r\n        </form>\r\n        <div className=\"results\">\r\n          {results ? (\r\n            <div>\r\n              {results.map((i) => {\r\n                return (\r\n                  <div>\r\n                    <SingleCharacter character={i} />\r\n                  </div>\r\n                );\r\n              })}\r\n\r\n              <Pagination\r\n                setCurrentPage={setCurrentPage}\r\n                totalPages={totalPages}\r\n                currentPage={currentPage}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","C:\\Users\\Marina\\Desktop\\Projetos\\web dev\\pessoais\\aroacedb\\aroacedb-front\\src\\components\\mobile-header\\mobile-header.js",["361"],"import React from \"react\";\r\nimport \"./mobile-header.css\";\r\nimport { ReactComponent as Bars } from \"../../assets/bars-solid.svg\";\r\nimport { ReactComponent as Close } from \"../../assets/times-solid.svg\";\r\n\r\nfunction MobileHeader() {\r\n  const [token, setToken] = React.useState(\"\");\r\n  const [display, setDisplay] = React.useState(\"menu-container none-display\");\r\n\r\n  React.useEffect(() => {\r\n    const newToken = localStorage.getItem(\"token\");\r\n    setToken(newToken);\r\n    console.log(token);\r\n  }, []);\r\n  return (\r\n    <div className=\"Mobile\">\r\n      <header>\r\n        <h1>The Aro Ace Database</h1>\r\n        <Bars\r\n          fill=\"white\"\r\n          height=\"30px\"\r\n          width=\"30px\"\r\n          onClick={() => {\r\n            setDisplay(\"menu-container block-display\");\r\n          }}\r\n        />\r\n      </header>\r\n      <div className={display}>\r\n        <Close\r\n          fill=\"white\"\r\n          height=\"30px\"\r\n          width=\"30px\"\r\n          onClick={() => {\r\n            setDisplay(\"menu-container none-display\");\r\n          }}\r\n        />\r\n        <div className=\"links\">\r\n          <a href=\"/\">Home</a>\r\n          {token ? <a href=\"/dashboard\">Dashboard</a> : \"\"}\r\n          <a href=\"/about\">About</a>\r\n          <a href=\"/suggest-character\">Suggest a character</a>\r\n\r\n          {token ? (\r\n            <div className=\"more-links\">\r\n              <a href=\"/all-characters\">All characters</a>\r\n              <a href=\"/suggested-characters\">Suggested characters</a>\r\n              <a href=\"/suggested-stories\">Suggested stories</a>\r\n              <a href=\"/suggested-reviews\">Suggested Reviews</a>\r\n              <a\r\n                href=\"/\"\r\n                onClick={() => {\r\n                  localStorage.removeItem(\"token\");\r\n                }}\r\n              >\r\n                Logout\r\n              </a>\r\n            </div>\r\n          ) : (\r\n            <a href=\"/login\">Login Admin</a>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MobileHeader;\r\n",{"ruleId":"362","replacedBy":"363"},{"ruleId":"364","replacedBy":"365"},{"ruleId":"366","severity":1,"message":"367","line":26,"column":8,"nodeType":"368","messageId":"369","endLine":26,"endColumn":15},{"ruleId":"366","severity":1,"message":"370","line":10,"column":10,"nodeType":"368","messageId":"369","endLine":10,"endColumn":17},{"ruleId":"366","severity":1,"message":"371","line":10,"column":19,"nodeType":"368","messageId":"369","endLine":10,"endColumn":29},{"ruleId":"372","severity":1,"message":"373","line":24,"column":6,"nodeType":"374","endLine":24,"endColumn":8,"suggestions":"375"},{"ruleId":"366","severity":1,"message":"376","line":35,"column":19,"nodeType":"368","messageId":"369","endLine":35,"endColumn":28},{"ruleId":"366","severity":1,"message":"377","line":9,"column":13,"nodeType":"368","messageId":"369","endLine":9,"endColumn":16},{"ruleId":"366","severity":1,"message":"378","line":14,"column":10,"nodeType":"368","messageId":"369","endLine":14,"endColumn":15},{"ruleId":"372","severity":1,"message":"379","line":16,"column":3,"nodeType":"380","endLine":16,"endColumn":18,"suggestions":"381"},{"ruleId":"362","replacedBy":"382"},{"ruleId":"364","replacedBy":"383"},{"ruleId":"366","severity":1,"message":"384","line":6,"column":10,"nodeType":"368","messageId":"369","endLine":6,"endColumn":17},{"ruleId":"372","severity":1,"message":"385","line":47,"column":6,"nodeType":"374","endLine":47,"endColumn":8,"suggestions":"386"},{"ruleId":"372","severity":1,"message":"387","line":15,"column":6,"nodeType":"374","endLine":15,"endColumn":8,"suggestions":"388"},{"ruleId":"366","severity":1,"message":"389","line":8,"column":9,"nodeType":"368","messageId":"369","endLine":8,"endColumn":16},{"ruleId":"372","severity":1,"message":"390","line":11,"column":3,"nodeType":"380","endLine":11,"endColumn":18,"suggestions":"391"},{"ruleId":"372","severity":1,"message":"387","line":14,"column":6,"nodeType":"374","endLine":14,"endColumn":8,"suggestions":"392"},{"ruleId":"372","severity":1,"message":"390","line":9,"column":3,"nodeType":"380","endLine":9,"endColumn":18,"suggestions":"393"},{"ruleId":"366","severity":1,"message":"394","line":2,"column":17,"nodeType":"368","messageId":"369","endLine":2,"endColumn":26},{"ruleId":"366","severity":1,"message":"395","line":6,"column":8,"nodeType":"368","messageId":"369","endLine":6,"endColumn":21},{"ruleId":"372","severity":1,"message":"387","line":16,"column":6,"nodeType":"374","endLine":16,"endColumn":8,"suggestions":"396"},{"ruleId":"366","severity":1,"message":"377","line":4,"column":13,"nodeType":"368","messageId":"369","endLine":4,"endColumn":16},{"ruleId":"366","severity":1,"message":"397","line":41,"column":13,"nodeType":"368","messageId":"369","endLine":41,"endColumn":20},{"ruleId":"366","severity":1,"message":"398","line":42,"column":13,"nodeType":"368","messageId":"369","endLine":42,"endColumn":19},{"ruleId":"366","severity":1,"message":"399","line":3,"column":8,"nodeType":"368","messageId":"369","endLine":3,"endColumn":13},{"ruleId":"366","severity":1,"message":"400","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":21},{"ruleId":"366","severity":1,"message":"401","line":7,"column":3,"nodeType":"368","messageId":"369","endLine":7,"endColumn":25},{"ruleId":"366","severity":1,"message":"377","line":12,"column":13,"nodeType":"368","messageId":"369","endLine":12,"endColumn":16},{"ruleId":"372","severity":1,"message":"402","line":29,"column":6,"nodeType":"374","endLine":29,"endColumn":8,"suggestions":"403"},{"ruleId":"366","severity":1,"message":"404","line":6,"column":8,"nodeType":"368","messageId":"369","endLine":6,"endColumn":21},{"ruleId":"366","severity":1,"message":"405","line":5,"column":39,"nodeType":"368","messageId":"369","endLine":5,"endColumn":50},{"ruleId":"366","severity":1,"message":"400","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":21},{"ruleId":"366","severity":1,"message":"401","line":6,"column":10,"nodeType":"368","messageId":"369","endLine":6,"endColumn":32},{"ruleId":"366","severity":1,"message":"377","line":8,"column":13,"nodeType":"368","messageId":"369","endLine":8,"endColumn":16},{"ruleId":"372","severity":1,"message":"402","line":45,"column":6,"nodeType":"374","endLine":45,"endColumn":8,"suggestions":"406"},{"ruleId":"362","replacedBy":"407"},{"ruleId":"364","replacedBy":"408"},{"ruleId":"366","severity":1,"message":"400","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":21},{"ruleId":"366","severity":1,"message":"401","line":6,"column":10,"nodeType":"368","messageId":"369","endLine":6,"endColumn":32},{"ruleId":"366","severity":1,"message":"377","line":8,"column":13,"nodeType":"368","messageId":"369","endLine":8,"endColumn":16},{"ruleId":"366","severity":1,"message":"409","line":9,"column":8,"nodeType":"368","messageId":"369","endLine":9,"endColumn":17},{"ruleId":"366","severity":1,"message":"410","line":13,"column":10,"nodeType":"368","messageId":"369","endLine":13,"endColumn":19},{"ruleId":"366","severity":1,"message":"411","line":13,"column":21,"nodeType":"368","messageId":"369","endLine":13,"endColumn":33},{"ruleId":"372","severity":1,"message":"402","line":24,"column":6,"nodeType":"374","endLine":24,"endColumn":8,"suggestions":"412"},{"ruleId":"366","severity":1,"message":"397","line":65,"column":17,"nodeType":"368","messageId":"369","endLine":65,"endColumn":24},{"ruleId":"366","severity":1,"message":"398","line":66,"column":17,"nodeType":"368","messageId":"369","endLine":66,"endColumn":23},{"ruleId":"366","severity":1,"message":"400","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":21},{"ruleId":"366","severity":1,"message":"377","line":7,"column":13,"nodeType":"368","messageId":"369","endLine":7,"endColumn":16},{"ruleId":"366","severity":1,"message":"409","line":8,"column":8,"nodeType":"368","messageId":"369","endLine":8,"endColumn":17},{"ruleId":"372","severity":1,"message":"413","line":29,"column":6,"nodeType":"374","endLine":29,"endColumn":8,"suggestions":"414"},{"ruleId":"366","severity":1,"message":"397","line":69,"column":17,"nodeType":"368","messageId":"369","endLine":69,"endColumn":24},{"ruleId":"366","severity":1,"message":"398","line":70,"column":17,"nodeType":"368","messageId":"369","endLine":70,"endColumn":23},{"ruleId":"366","severity":1,"message":"400","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":21},{"ruleId":"366","severity":1,"message":"401","line":6,"column":10,"nodeType":"368","messageId":"369","endLine":6,"endColumn":32},{"ruleId":"366","severity":1,"message":"377","line":8,"column":13,"nodeType":"368","messageId":"369","endLine":8,"endColumn":16},{"ruleId":"366","severity":1,"message":"409","line":9,"column":8,"nodeType":"368","messageId":"369","endLine":9,"endColumn":17},{"ruleId":"366","severity":1,"message":"410","line":14,"column":10,"nodeType":"368","messageId":"369","endLine":14,"endColumn":19},{"ruleId":"366","severity":1,"message":"411","line":14,"column":21,"nodeType":"368","messageId":"369","endLine":14,"endColumn":33},{"ruleId":"366","severity":1,"message":"397","line":52,"column":17,"nodeType":"368","messageId":"369","endLine":52,"endColumn":24},{"ruleId":"366","severity":1,"message":"398","line":53,"column":17,"nodeType":"368","messageId":"369","endLine":53,"endColumn":23},{"ruleId":"366","severity":1,"message":"415","line":54,"column":17,"nodeType":"368","messageId":"369","endLine":54,"endColumn":29},{"ruleId":"366","severity":1,"message":"399","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":13},{"ruleId":"366","severity":1,"message":"399","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":13},{"ruleId":"366","severity":1,"message":"400","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":21},{"ruleId":"366","severity":1,"message":"416","line":6,"column":10,"nodeType":"368","messageId":"369","endLine":6,"endColumn":23},{"ruleId":"366","severity":1,"message":"377","line":8,"column":13,"nodeType":"368","messageId":"369","endLine":8,"endColumn":16},{"ruleId":"372","severity":1,"message":"402","line":25,"column":6,"nodeType":"374","endLine":25,"endColumn":8,"suggestions":"417"},{"ruleId":"366","severity":1,"message":"418","line":3,"column":10,"nodeType":"368","messageId":"369","endLine":3,"endColumn":23},{"ruleId":"366","severity":1,"message":"400","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":21},{"ruleId":"366","severity":1,"message":"377","line":8,"column":13,"nodeType":"368","messageId":"369","endLine":8,"endColumn":16},{"ruleId":"366","severity":1,"message":"411","line":12,"column":21,"nodeType":"368","messageId":"369","endLine":12,"endColumn":33},{"ruleId":"366","severity":1,"message":"400","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":21},{"ruleId":"366","severity":1,"message":"377","line":8,"column":13,"nodeType":"368","messageId":"369","endLine":8,"endColumn":16},{"ruleId":"366","severity":1,"message":"409","line":9,"column":8,"nodeType":"368","messageId":"369","endLine":9,"endColumn":17},{"ruleId":"372","severity":1,"message":"413","line":29,"column":6,"nodeType":"374","endLine":29,"endColumn":8,"suggestions":"419"},{"ruleId":"366","severity":1,"message":"397","line":65,"column":17,"nodeType":"368","messageId":"369","endLine":65,"endColumn":24},{"ruleId":"366","severity":1,"message":"398","line":66,"column":17,"nodeType":"368","messageId":"369","endLine":66,"endColumn":23},{"ruleId":"366","severity":1,"message":"415","line":67,"column":17,"nodeType":"368","messageId":"369","endLine":67,"endColumn":29},{"ruleId":"366","severity":1,"message":"400","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":21},{"ruleId":"366","severity":1,"message":"401","line":7,"column":3,"nodeType":"368","messageId":"369","endLine":7,"endColumn":25},{"ruleId":"366","severity":1,"message":"377","line":12,"column":13,"nodeType":"368","messageId":"369","endLine":12,"endColumn":16},{"ruleId":"366","severity":1,"message":"409","line":13,"column":8,"nodeType":"368","messageId":"369","endLine":13,"endColumn":17},{"ruleId":"366","severity":1,"message":"420","line":19,"column":10,"nodeType":"368","messageId":"369","endLine":19,"endColumn":15},{"ruleId":"372","severity":1,"message":"402","line":35,"column":6,"nodeType":"374","endLine":35,"endColumn":8,"suggestions":"421"},{"ruleId":"366","severity":1,"message":"397","line":86,"column":17,"nodeType":"368","messageId":"369","endLine":86,"endColumn":24},{"ruleId":"366","severity":1,"message":"398","line":87,"column":17,"nodeType":"368","messageId":"369","endLine":87,"endColumn":23},{"ruleId":"366","severity":1,"message":"400","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":21},{"ruleId":"366","severity":1,"message":"377","line":8,"column":13,"nodeType":"368","messageId":"369","endLine":8,"endColumn":16},{"ruleId":"366","severity":1,"message":"409","line":9,"column":8,"nodeType":"368","messageId":"369","endLine":9,"endColumn":17},{"ruleId":"366","severity":1,"message":"410","line":13,"column":10,"nodeType":"368","messageId":"369","endLine":13,"endColumn":19},{"ruleId":"366","severity":1,"message":"411","line":13,"column":21,"nodeType":"368","messageId":"369","endLine":13,"endColumn":33},{"ruleId":"366","severity":1,"message":"422","line":17,"column":10,"nodeType":"368","messageId":"369","endLine":17,"endColumn":14},{"ruleId":"366","severity":1,"message":"423","line":17,"column":16,"nodeType":"368","messageId":"369","endLine":17,"endColumn":23},{"ruleId":"372","severity":1,"message":"387","line":23,"column":6,"nodeType":"374","endLine":23,"endColumn":8,"suggestions":"424"},{"ruleId":"366","severity":1,"message":"397","line":65,"column":17,"nodeType":"368","messageId":"369","endLine":65,"endColumn":24},{"ruleId":"366","severity":1,"message":"398","line":66,"column":17,"nodeType":"368","messageId":"369","endLine":66,"endColumn":23},{"ruleId":"366","severity":1,"message":"400","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":21},{"ruleId":"366","severity":1,"message":"401","line":7,"column":3,"nodeType":"368","messageId":"369","endLine":7,"endColumn":25},{"ruleId":"366","severity":1,"message":"377","line":12,"column":13,"nodeType":"368","messageId":"369","endLine":12,"endColumn":16},{"ruleId":"366","severity":1,"message":"409","line":13,"column":8,"nodeType":"368","messageId":"369","endLine":13,"endColumn":17},{"ruleId":"372","severity":1,"message":"402","line":33,"column":6,"nodeType":"374","endLine":33,"endColumn":8,"suggestions":"425"},{"ruleId":"366","severity":1,"message":"397","line":80,"column":17,"nodeType":"368","messageId":"369","endLine":80,"endColumn":24},{"ruleId":"366","severity":1,"message":"398","line":81,"column":17,"nodeType":"368","messageId":"369","endLine":81,"endColumn":23},{"ruleId":"366","severity":1,"message":"415","line":82,"column":17,"nodeType":"368","messageId":"369","endLine":82,"endColumn":29},{"ruleId":"366","severity":1,"message":"377","line":7,"column":13,"nodeType":"368","messageId":"369","endLine":7,"endColumn":16},{"ruleId":"366","severity":1,"message":"409","line":9,"column":8,"nodeType":"368","messageId":"369","endLine":9,"endColumn":17},{"ruleId":"372","severity":1,"message":"387","line":22,"column":6,"nodeType":"374","endLine":22,"endColumn":8,"suggestions":"426"},{"ruleId":"366","severity":1,"message":"397","line":58,"column":17,"nodeType":"368","messageId":"369","endLine":58,"endColumn":24},{"ruleId":"366","severity":1,"message":"398","line":59,"column":17,"nodeType":"368","messageId":"369","endLine":59,"endColumn":23},{"ruleId":"366","severity":1,"message":"415","line":60,"column":17,"nodeType":"368","messageId":"369","endLine":60,"endColumn":29},{"ruleId":"366","severity":1,"message":"427","line":5,"column":20,"nodeType":"368","messageId":"369","endLine":5,"endColumn":24},{"ruleId":"366","severity":1,"message":"428","line":5,"column":26,"nodeType":"368","messageId":"369","endLine":5,"endColumn":28},{"ruleId":"366","severity":1,"message":"427","line":5,"column":20,"nodeType":"368","messageId":"369","endLine":5,"endColumn":24},{"ruleId":"366","severity":1,"message":"428","line":5,"column":26,"nodeType":"368","messageId":"369","endLine":5,"endColumn":28},{"ruleId":"366","severity":1,"message":"429","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":11},{"ruleId":"366","severity":1,"message":"430","line":3,"column":8,"nodeType":"368","messageId":"369","endLine":3,"endColumn":17},{"ruleId":"366","severity":1,"message":"431","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":16},{"ruleId":"366","severity":1,"message":"432","line":1,"column":8,"nodeType":"368","messageId":"369","endLine":1,"endColumn":20},{"ruleId":"366","severity":1,"message":"429","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":11},{"ruleId":"366","severity":1,"message":"430","line":3,"column":8,"nodeType":"368","messageId":"369","endLine":3,"endColumn":17},{"ruleId":"366","severity":1,"message":"432","line":1,"column":8,"nodeType":"368","messageId":"369","endLine":1,"endColumn":20},{"ruleId":"366","severity":1,"message":"429","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":11},{"ruleId":"366","severity":1,"message":"431","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":16},{"ruleId":"366","severity":1,"message":"428","line":5,"column":26,"nodeType":"368","messageId":"369","endLine":5,"endColumn":28},{"ruleId":"372","severity":1,"message":"387","line":16,"column":6,"nodeType":"374","endLine":16,"endColumn":8,"suggestions":"433"},{"ruleId":"366","severity":1,"message":"434","line":12,"column":10,"nodeType":"368","messageId":"369","endLine":12,"endColumn":25},{"ruleId":"366","severity":1,"message":"435","line":12,"column":27,"nodeType":"368","messageId":"369","endLine":12,"endColumn":45},{"ruleId":"372","severity":1,"message":"436","line":72,"column":6,"nodeType":"374","endLine":72,"endColumn":27,"suggestions":"437"},{"ruleId":"372","severity":1,"message":"387","line":14,"column":6,"nodeType":"374","endLine":14,"endColumn":8,"suggestions":"438"},"no-native-reassign",["439"],"no-negated-in-lhs",["440"],"no-unused-vars","'Results' is defined but never used.","Identifier","unusedVar","'stories' is assigned a value but never used.","'setStories' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'filteredResults.length'. Either include it or remove the dependency array.","ArrayExpression",["441"],"'newSearch' is assigned a value but never used.","'Yup' is defined but never used.","'token' is assigned a value but never used.","React Hook useEffect contains a call to 'setToken'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","MemberExpression",["442"],["439"],["440"],"'results' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'character' and 'params.id'. Either include them or remove the dependency array.",["443"],"React Hook React.useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["444"],"'history' is assigned a value but never used.","React Hook useEffect contains a call to 'setToken'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [token] as a second argument to the useEffect Hook.",["445"],["446"],["447"],"'Component' is defined but never used.","'SuggestReview' is defined but never used.",["448"],"'touched' is assigned a value but never used.","'errors' is assigned a value but never used.","'Table' is defined but never used.","'CharacterInfo' is defined but never used.","'fazerRequisicaoComBody' is defined but never used.","React Hook React.useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["449"],"'ReactPaginate' is defined but never used.","'currentPage' is assigned a value but never used.",["450"],["439"],["440"],"'StoryInfo' is defined but never used.","'character' is assigned a value but never used.","'setCharacter' is assigned a value but never used.",["451"],"React Hook React.useEffect has missing dependencies: 'params.id' and 'token'. Either include them or remove the dependency array.",["452"],"'isSubmitting' is assigned a value but never used.","'fetchWithBody' is defined but never used.",["453"],"'useRouteMatch' is defined but never used.",["454"],"'cover' is assigned a value but never used.",["455"],"'file' is assigned a value but never used.","'setFile' is assigned a value but never used.",["456"],["457"],["458"],"'type' is assigned a value but never used.","'id' is assigned a value but never used.","'Row' is defined but never used.","'RowReview' is defined but never used.","'RowStory' is defined but never used.","'RowCharacter' is defined but never used.",["459"],"'filteredResults' is assigned a value but never used.","'setFilteredResults' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'params.search'. Either include it or remove the dependency array.",["460"],["461"],"no-global-assign","no-unsafe-negation",{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},{"desc":"468","fix":"472"},{"desc":"470","fix":"473"},{"desc":"468","fix":"474"},{"desc":"475","fix":"476"},{"desc":"475","fix":"477"},{"desc":"475","fix":"478"},{"desc":"479","fix":"480"},{"desc":"475","fix":"481"},{"desc":"479","fix":"482"},{"desc":"475","fix":"483"},{"desc":"468","fix":"484"},{"desc":"475","fix":"485"},{"desc":"468","fix":"486"},{"desc":"468","fix":"487"},{"desc":"488","fix":"489"},{"desc":"468","fix":"490"},"Update the dependencies array to be: [filteredResults.length]",{"range":"491","text":"492"},"Add dependencies array: []",{"range":"493","text":"494"},"Update the dependencies array to be: [character, params.id]",{"range":"495","text":"496"},"Update the dependencies array to be: [token]",{"range":"497","text":"498"},"Add dependencies array: [token]",{"range":"499","text":"500"},{"range":"501","text":"498"},{"range":"502","text":"500"},{"range":"503","text":"498"},"Update the dependencies array to be: [params.id]",{"range":"504","text":"505"},{"range":"506","text":"505"},{"range":"507","text":"505"},"Update the dependencies array to be: [params.id, token]",{"range":"508","text":"509"},{"range":"510","text":"505"},{"range":"511","text":"509"},{"range":"512","text":"505"},{"range":"513","text":"498"},{"range":"514","text":"505"},{"range":"515","text":"498"},{"range":"516","text":"498"},"Update the dependencies array to be: [currentPage, params.search, search]",{"range":"517","text":"518"},{"range":"519","text":"498"},[944,946],"[filteredResults.length]",[594,594],", []",[1791,1793],"[character, params.id]",[468,470],"[token]",[471,471],", [token]",[454,456],[393,393],[604,606],[1054,1056],"[params.id]",[1712,1714],[953,955],[1093,1095],"[params.id, token]",[998,1000],[1119,1121],[1287,1289],[909,911],[1167,1169],[768,770],[680,682],[2591,2612],"[currentPage, params.search, search]",[498,500]]